<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>天空之城</title>
      <link href="/posts/29f0725f.html"/>
      <url>/posts/29f0725f.html</url>
      
        <content type="html"><![CDATA[<p>题记-我们都是昭阳，生命中却没有米彩、乐瑶、简薇。</p><p>其实题记里没打，怕破坏氛围，我还想打上甚至没有罗本、CC甚至小五等人。就像作者微博里说的，你们有随叫随到陪你喝酒的人么，至少我没有。作者以第一人称的写作手法，很容易让我们带入到昭阳的情感中去，就像我题记说的，我们都是昭阳，生命中却没有米彩、乐瑶、简薇这种视我们为生命的女人。可人生是一道单选题，最后昭阳选择了米彩，辜负了乐瑶和简薇。我没有，你有，却辜负了，这大概就是我们最意难平的地方。</p><p>一乐瑶。</p><p>乐瑶是这部小说最低开高走的一个角色，也是最悲情的角色。(之所以不叫她肖瑶，是因为乐瑶才是和昭阳鬼混两年的小透明，才是把昭阳当成全部世界的一个小麻烦。改名我觉得更多的意思是要和过去那个傻傻爱着昭阳的乐瑶告别的)。乐瑶也是我最喜欢的角色。我多希望第一章乐瑶生下孩子放弃当大腕的梦，昭阳为了孩子和她在一起，故事结束。那时候米彩没有和昭阳纠缠在一起，以后和小海龟在一起，接手母亲米国生意，平淡的过一辈子，也不错。薇薇简可能就悲剧些，不过讲了那么多故事，最后结局时薇薇简不也一样远走米国了么。从第一3章开始薇薇简就已经受伤了，这个没办法，那个烈火一样的女子不肯放过自己。好了扯远了，回来说乐瑶。我之所以说乐瑶是最悲情的，不仅仅是她从来没得到昭阳的爱，还被昭阳喝多了睡了(可能一边睡一边还喊着简薇)，还中奖了，还打胎了。而是作者可能从一开始没想写这么一个角色，开篇乐瑶是以一个混吧的炮友的形象出现的，读完全篇回头再看昭阳开篇对她有多污蔑，我就觉得有多割裂，生命中那么重要的红颜知己居然以炮友形象出现。其实开篇这里出现几个逻辑BUG，开篇昭阳对乐瑶的感觉是炮友，是因为长的好看睡的，一口一个以后别联系了。后来呢，把乐瑶当妹妹，抛弃订婚对象，伤父母的心也要回来帮她，还为她借了100W。试问大家你们为了炮友能做到这地步么。昭阳对乐瑶的感情应该是开篇之前两年鬼混养成的，而不是以打胎为起点。还有说方圆是这座城市唯一的朋友。那罗本和CC就不乐意了，昭阳，你忘了桥洞子唱歌的罗本了么。你忘了无数次照顾喝多的你的CC了么。好了又扯远了，继续说乐瑶。乐瑶可能是全篇活的最明白的一个人了，只有她是生活中的高手，星途她很坦荡，就算之后嫁给了曹公子也没过的不好，她之所以在感情中没做好高手，只是她自己一直不愿意走出来而已，换句话说是对昭阳爱的深沉。乐瑶这个角色丰满实在一次次加戏中体现的，比如被昭阳怂恿偷烟、视罗本为哥哥，爱上昭阳等等。不管如何，作者还是塑造出这么一个让我们又爱又心疼的古怪精灵的乐瑶，视昭阳为全部世界的乐瑶。我猜乐瑶不让昭阳去她的婚礼现场可能是怕她忍不住冲下去求婚昭阳吧。还有拍的那个电影，怀里男主的孩子死了，最后活在男主心里，拍摄完乐瑶那场大哭，我想乐瑶是愿意这不是电影而是生活吧。作者总说米彩不能被辜负是可怜的孩子，母亲抛弃，父亲去世。可乐瑶呢，父亲抛弃，母亲后文提过也成家了，没人疼没人爱，只有乐瑶一个人孤苦伶仃的生活，还被只想着红的前男友抛弃，谁又不是不能辜负的小可怜呢？只许她房客大小姐可怜么，一遍遍的提，又有谁想到我们一直保持微笑的乐瑶有多苦。</p><p>如果留下孩子，如果放弃大腕的梦，如果相信昭阳能养得起她们的孩子，如果早一些表达心意，有太多的如果。那样乐瑶就会是最幸福的人。也不睡着的时候假装死了几回了。意难平。</p><p>二、简薇</p><p>薇薇简是一个纯粹的女人，是火一样的女人。是有着强烈精神洁癖的女人。她说她的人生不可能完美了，她就向她的车一样带着伤痕，提醒自己，惩罚自己。这里先说她为什么和昭阳分手。其实全篇作者给了很多暗示，方圆出轨时候扎手，薇薇简无动于衷，并且说她手上也有伤痕。她和昭阳说过我从没想过要背叛你，还有一段薇薇简做梦时候还喊她精神没有背叛(大概是这个意思吧)，有一段薇薇简和向晨争吵，突然说要我把事情都说出来么，向晨立马怂了，还有一段昭阳偷看向晨简薇的短信是这样的(“向晨，你很恶心，你知道吗？就冲你对我和昭阳做的一切，你就恶心！……我已经是这个样子了，没有什么是豁不出去的，你最好从我的视线里滚的越远越好。”)最后银行经理说方圆说过向晨对不起薇薇简和昭阳。还有一段薇薇简说昭阳果然和别的女的鬼混，还说她在美国多么多么辛苦。还有向晨出国一段时间。那么答案很明显，向晨出国陪薇薇简去了，造谣昭阳出轨，灌醉也好下Y也好怎么也好，睡了薇薇简一次(我觉得向晨可能就睡那么一次，之后薇薇简同意和向晨交往也是薇薇简亲眼看见昭阳说米彩是自己女朋友之后，同昭阳一样不想表现太不堪而做出的举动，她心里直到结局也一直爱着昭阳，这样一个强烈精神洁癖的女人怎么会和向晨同居。向晨机关算尽也没能得到简薇，最后才和简薇分手找那个谁)。醒来的薇薇简觉得自己对不起昭阳(或者自己精神中完美的爱情)割腕自杀，虽然救过来了但是她不肯原谅自己和昭阳分手了。这也是故事的开篇。其实薇薇简我觉得是除了乐瑶第二苦情的。那么完美刚烈的一个女子，却遇到向晨这样的小人。错过了与昭阳的完美爱情。她穿着一件白色T恤，惊艳了我一整个夏天。这是昭阳对她最后的回忆，却终究是错过了。我看完小说逛了逛作者微博还有知乎关于这本小说的评价，不少人说简薇能与昭阳一起死，淋汽油和跳护城河那两段。其实我想说乐瑶和米彩也一定做得到。她们对昭阳的爱完全不逊色与薇薇简，乐瑶电影里的坟墓，莫子石说漏了说米彩不顾自己的性命，也无怨无悔(我觉得这段应该是米彩生宝宝难产，不顾自己性命也想给昭阳一个孩子)。但是这种镜头一定要给简薇。她是那么刚烈，她不肯原谅自己的过错，活着每一天都是对自己的折磨，那么死了，或者为了昭阳死、陪着昭阳死，对她来说都是一种完美的结局，只是作者也心疼这个强颜欢笑的女子，最后也给了她一个还算美好的结局。</p><p>如果没有父母反对，如果没有向晨这个小人，如果薇薇简能原谅自己和昭阳好好沟通，如果方圆婚礼昭阳没说米彩是自己女友。有太多的如果，那样薇薇简也会是最幸福的女人。也不用最后远走米国了。意难平。</p><p>三、米彩</p><p>房客大小姐做为天命女主角应该是最幸福的一个了，这个不用意难平了。从最初打打闹闹，到爱上昭阳，再到各种矛盾，再到落魄回徐州结婚(话说这段真的为了惨而惨啊，有那么穷么，投资那花店多钱呢。突然就几万都没有了，作者也真是的。)再到婚礼中昭阳跑了去看前女友，直到最后有了孩子。挺好的，一路风风雨雨，结局是美好的就好。说个有意思的事，我看到米彩第一次和昭阳在一起的时候我发现进度才20%，我就觉得事情没那么简单。人生看小说10多年第一次直接去看了结局，我当时想结局昭阳和米彩在一起我就继续看，不在一起我就不看了。还好结局是好的，我才继续看。可见作者这小说有多虐。有很多人说米彩不爱昭阳，她不爱昭阳会顶着所有人反对和昭阳在一起么，会为了她吃那么多醋么，会和昭阳回徐州做一个小助理么。平平淡淡是昭阳的梦想不是米彩的。大小姐角色之所以让人喜欢，是她完美的出场，完美的形象，作者把她描写的真就像不问俗世的仙子。她没有男女感情经理，没喜欢过除了昭阳以外的别人，所以对感情的表达上显得很生疏，很多时候没有乐瑶的无微不至。但这也是让我们着迷的地方，一个不理尘世的仙子突然为了你下凡笨手笨脚的适应你的一切，想想就很梦幻。所以大小姐不能辜负，大小姐众万所归和昭阳在一起了。(大小姐卑就惹人心疼。乐瑶和薇薇简就是活该，我又酸了不好意思)。</p><p>四年前你是我的房客，四年后你是我的妻子。祝渣阳和房客大小姐幸福吧。</p><p>四，方圆和颜妍夫妇</p><p>方圆做为本书最高开低走的角色，我觉得最后洗白也没什么作用。简薇和昭阳分手方圆是罪魁祸首之一，偷拍昭阳给向晨，让向晨持续不断的给简薇看照片。还反过头来有模有样的说昭阳过的不好不上进。我呸，恶心。昭阳做为男主，如果没和简薇分手，以书里昭阳的超能力，你方圆是个屁啊。至于最后的背叛米彩，我觉得更像是小丑的闹剧。另外在颜妍和方圆离婚之后有几次和昭阳欲言又止的对话中，应该是她也知道方圆的所作所为。还拿昭阳当弟弟，拿简薇当闺蜜。我也只能是呵呵了。好了就这样吧，配角而已不愿意多说，就像向晨我根本不写他，他不配。</p><p>五、罗本和CC以及女教师</p><p>这就是一场错误的典范，罗本选择和前任结果错过了。女教师选择和前任，最后也回小山村了。所以这里告诉我们，不能和前任和好，要向前看。最后罗本和女歌手，CC闪婚了，女教师陪走了一个之后找个二婚的教师。无关爱情，却也是不错的结局，不是么。就像是板爹也是有故事的人，最后选择了昭阳妈妈，过的不也一样挺好么。爱情是爱情，生活是生活。</p><p>六、昭阳</p><p>其实我们就是一个又一个的昭阳，虽然没有他有超能力，让那么多女性爱上他，让钱来的那么容易。可是我们也是苦海中沉浮的人。不说了，读过所有鸡汤也不一定过好一生。如人饮水，冷暖自知。说小说里人物行，劝大家我张不开嘴 说点拜年话吧，祝大家都能过的幸福。</p><p>最后，附上一首辛弃疾的词，自己理解。</p><p>丑奴儿·书博山道中壁 [宋]辛弃疾</p><p>少年不识愁滋味，爱上层楼。爱上层楼，为赋新 词强说愁。</p><p>而今识尽愁滋味，欲说还休。欲说还休，却道天 凉好个秋。</p>]]></content>
      
      
      <categories>
          
          <category> 月湖笔谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读印记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tag Plugins Plus 的日常使用</title>
      <link href="/posts/17639.html"/>
      <url>/posts/17639.html</url>
      
        <content type="html"><![CDATA[<h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><p>彩色文字 ：在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span></p><h2 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><h2 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h2><h3 id="simple样式"><a href="#simple样式" class="headerlink" title="simple样式"></a>simple样式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="modern样式"><a href="#modern样式" class="headerlink" title="modern样式"></a>modern样式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="flat样式"><a href="#flat样式" class="headerlink" title="flat样式"></a>flat样式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="disabled样式"><a href="#disabled样式" class="headerlink" title="disabled样式"></a>disabled样式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="no-icon样式"><a href="#no-icon样式" class="headerlink" title="no-icon样式"></a>no-icon样式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div><h2 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><h2 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h2><h3 id="当页面加载时显示动画"><a href="#当页面加载时显示动画" class="headerlink" title="当页面加载时显示动画"></a>当页面加载时显示动画</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><h3 id="调整动画速度"><a href="#调整动画速度" class="headerlink" title="调整动画速度"></a>调整动画速度</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div><h3 id="当鼠标悬停时显示动画"><a href="#当鼠标悬停时显示动画" class="headerlink" title="当鼠标悬停时显示动画"></a>当鼠标悬停时显示动画</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div><h3 id="当鼠标悬停在父级元素时显示动画"><a href="#当鼠标悬停在父级元素时显示动画" class="headerlink" title="当鼠标悬停在父级元素时显示动画"></a>当鼠标悬停在父级元素时显示动画</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><h2 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><h2 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><p>参数配置</p><ol><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><h2 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h2><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">标题/时间线</td></tr><tr><td style="text-align:left">color</td><td style="text-align:left"><code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</td></tr></tbody></table></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><h2 id="行内图片"><a href="#行内图片" class="headerlink" title="行内图片"></a>行内图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/5150.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><p>这是 <img no-lazy class="inline" src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/5150.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/5150.gif" style="height:40px;"/> 一段话。</p><h2 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h2><h3 id="100-宽度"><a href="#100-宽度" class="headerlink" title="100%宽度"></a>100%宽度</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>### 50%宽度<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><h3 id="25-宽度"><a href="#25-宽度" class="headerlink" title="25%宽度"></a>25%宽度</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><h2 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1">第一个Tab</button><button type="button" class="tab " data-href="test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button><button type="button" class="tab " data-href="test4-3"><i class="fas fa-bomb"></i>炸弹</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><h2 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 npm 安装 Tag Plugins Plus</title>
      <link href="/posts/49186.html"/>
      <url>/posts/49186.html</url>
      
        <content type="html"><![CDATA[<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure><p>考虑到hexo自带的markdown渲染插件<code>hexo-renderer-marked</code>与外挂标签语法的兼容性较差，建议您将其替换成<a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><h2 id="添加配置信息"><a href="#添加配置信息" class="headerlink" title="添加配置信息"></a>添加配置信息</h2><p>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">issues:</span> <span class="literal">false</span> <span class="comment">#issues标签依赖注入开关</span></span><br><span class="line">  <span class="attr">link:</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">/img/link.png</span> <span class="comment">#link_card标签默认的图标图片</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span></span><br><span class="line">    <span class="attr">tag_plugins_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span></span><br></pre></td></tr></table></figure><h2 id="参数释义"><a href="#参数释义" class="headerlink" title="参数释义"></a>参数释义</h2><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">enable</td><td style="text-align:left">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:left">priority</td><td style="text-align:left">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:left">issues</td><td style="text-align:left">true/false</td><td style="text-align:left">【可选】issues标签控制开关，默认为false</td></tr><tr><td style="text-align:left">link.placeholder</td><td style="text-align:left">【必选】link卡片外挂标签的默认图标</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">CDN.anima</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】动画标签anima的依赖</td></tr><tr><td style="text-align:left">CDN.jquery</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.issues</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.iconfont</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】iconfont标签symbol样式引入，如果不想引入，则设为false</td></tr><tr><td style="text-align:left">CDN.carousel</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】carousel旋转相册标签鼠标拖动依赖，如果不想引入则设为false</td></tr><tr><td style="text-align:left">CDN.tag_plugins_css</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】外挂标签样式的CSS依赖，为避免CDN缓存延迟，建议将@latest改为具体版本号</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章 文件内容查看</title>
      <link href="/posts/13783.html"/>
      <url>/posts/13783.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><div class="tip success faa-horizontal animated"><p> 那个老书生说，我们活在一个很复杂的世道里，很多人的言行，哪怕是学问极高的读书人，还是会自相矛盾，我们看多了没甚道理的事情，难免会问，是不是书上的道理，是错的，或者说，是那些道理还没有说透，没有说全。”<br>“那么问题来了，怎么办呢？我们该怎么看待这个许多嘴上讲道理、做事没道理的世界？办法是有的，一种是活得纯粹，我拳头很硬，剑术很强，道法很强，就用这些来打破一些东西。复杂问题给简单解决掉，只要我开心就好。天地有规矩约束我，我便一拳打破，世间有大道压我，我有一剑破万法。哪怕暂时做到如此酣畅淋漓，可总是如此想，坚定不移，一直朝这个方向走在道路上。这种人可以有，但是不能人人如此的。”一种是活得很聪明，怎么省心省力怎么来，规矩二字，就是用来钻漏洞的</p></div><p><a href="https://www.bilibili.com/video/BV1Nb421a7TV/?spm_id_from=333.999.list.card_archive.click"><br>    <img style="border: 1.5px solid #cbcbcb !important; max-width: 90%;"        src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/20240815134316.png"></a></p><p>查看文件内容的常见命令</p><ul><li>cat</li><li>more 和 less</li><li>head 和 tail</li><li>nl</li><li>tailf</li></ul><h1 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h1><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用法：cat [选项]... [文件]...</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">  -n, 对输出的所有行编号</span><br><span class="line">  -b, 对输出的所有行编号（不含空白行）</span><br><span class="line">  -t, 将制表符(tab)显示为^I</span><br><span class="line">  -e, 在每行结束处显示&quot;$&quot;</span><br><span class="line">  -s, 当连续空白行数量大于1时，合并为1个空白行</span><br></pre></td></tr></table></figure><p><strong>cat命令会一次性将文件的完整内容全部显示出来，不适合大文件。</strong></p><p>查看文件所有内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat HelloWorld.java</span><br></pre></td></tr></table></figure><p>查看文件所有内容，并且添加行号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n HelloWorld.java</span><br></pre></td></tr></table></figure><p>查看文件所有内容，添加行号，但空白行不加行号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -b HelloWorld.java</span><br></pre></td></tr></table></figure><p>查看文件所有内容，将制表符显示为^I</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -t HelloWorld.java</span><br></pre></td></tr></table></figure><p>查看文件所有内容，在每行结束处显示”$”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -e HelloWorld.java</span><br></pre></td></tr></table></figure><p>查看文件所有内容，合并多个连续的空白行为1个空白行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -s HelloWorld.java</span><br></pre></td></tr></table></figure><p>一次查看多个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt b.txt</span><br></pre></td></tr></table></figure><p>使用cat合并文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt b.txt &gt; c.txt</span><br></pre></td></tr></table></figure><p>加上行号之后输出到另一个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n HelloWorld.java &gt; HelloWorld2.java</span><br></pre></td></tr></table></figure><p>清空文件内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /dev/null &gt; HelloWorld.java</span><br></pre></td></tr></table></figure><h1 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h1><p>more命令和cat命令的相同点和不同点：</p><ul><li>相同点：more和cat在开始读取文件的时候，都是一次性的将文件全部内容装载到缓存中。</li><li>不同点：cat是一次性的全部输出打印。more可以进行部分打印（一屏一屏的打印）。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用法：</span><br><span class="line"> more [选项] &lt;文件&gt;...</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line"> -&lt;number&gt;  每个屏幕的行数</span><br><span class="line"> +&lt;number&gt;  从行号开始显示文件</span><br><span class="line"> +/&lt;pattern&gt;  从匹配的位置前两行开始显示内容</span><br><span class="line"> -p  以清除原内容的方式进行翻页。</span><br><span class="line"> </span><br><span class="line">常用操作：</span><br><span class="line">  回车键        【显示下一行】</span><br><span class="line">  空格键        【显示下一页】</span><br><span class="line">  ctrl + b     【显示上一页】</span><br><span class="line">  =            【显示行号】</span><br><span class="line">  :f           【显示文件名的同时显示行号】</span><br><span class="line">  q            【退出more命令】</span><br></pre></td></tr></table></figure><p>这里有日志文件：log.txt，内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">2021.10.1 zhangsan</span><br><span class="line">2021.10.2 lisi</span><br><span class="line">2021.10.3 wangwu</span><br><span class="line">2021.10.4 zhaoliu</span><br><span class="line">2021.10.5 admin</span><br><span class="line">2021.10.6 zhangsan</span><br><span class="line">2021.10.7 lisi</span><br><span class="line">2021.10.8 wangwu</span><br><span class="line">2021.10.9 zhaoliu</span><br><span class="line">2021.10.10 qianqi</span><br><span class="line">2021.10.11 zhouyu</span><br><span class="line">2021.10.12 huanggai</span><br><span class="line">2021.10.13 zhugeliang</span><br><span class="line">2021.10.14 simayi</span><br><span class="line">2021.10.15 maimaiti</span><br><span class="line">2021.10.16 erdaye</span><br><span class="line">2021.10.17 sandaye</span><br><span class="line">2021.10.18 zhangsan</span><br><span class="line">2021.10.19 lisi</span><br><span class="line">2021.10.20 wangwu</span><br><span class="line">2021.10.21 zhaoliu</span><br><span class="line">2021.10.22 qianqi</span><br><span class="line">2021.10.23 zhoubapi</span><br><span class="line">2021.10.24 doudizhu</span><br><span class="line">2021.10.25 nongmin</span><br><span class="line">2021.10.26 sunwukong</span><br><span class="line">2021.10.27 zhubajie</span><br><span class="line">2021.10.28 shaseng</span><br><span class="line">2021.10.29 wujing</span><br><span class="line">2021.10.30 baigujing</span><br><span class="line">2021.10.31 java</span><br><span class="line">2021.11.1 oracle</span><br><span class="line">2021.11.2 mysql</span><br><span class="line">2021.11.3 jdbc</span><br><span class="line">2021.11.4 servlet</span><br><span class="line">2021.11.5 jsp</span><br><span class="line">2021.11.6 spring</span><br><span class="line">2021.11.7 mybatis</span><br><span class="line">2021.11.8 springmvc</span><br><span class="line">2021.11.9 web</span><br><span class="line">2021.11.10 html</span><br><span class="line">2021.11.11 css</span><br><span class="line">2021.11.12 java</span><br><span class="line">2021.11.13 sun</span><br></pre></td></tr></table></figure><p>案例1：从第3行起，查看文件内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more +3 log.txt</span><br></pre></td></tr></table></figure><p>案例2：每屏显示4条记录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more -4 log.txt</span><br></pre></td></tr></table></figure><p>案例3：从文件中查找”java”字符串的行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more +/java log.txt</span><br></pre></td></tr></table></figure><p>案例4：查看进程，每5条为一屏，翻屏时清空原内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | more -5 -p</span><br></pre></td></tr></table></figure><h1 id="less命令"><a href="#less命令" class="headerlink" title="less命令"></a>less命令</h1><p>less 工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。less 的用法比起 more 更加的有弹性。使用less 时，可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件，更容易用来查看一个文件的内容！除此之外，在 less 中可以拥有更多的搜索功能。</p><h2 id="less命令用法"><a href="#less命令用法" class="headerlink" title="less命令用法"></a>less命令用法</h2><p>有这样的一个文件：usernames.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">ZHANGSAN</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">ZHANGSAN</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line">zhaoliu</span><br><span class="line">sunwukong</span><br><span class="line">zhubajie</span><br><span class="line">wusong</span><br><span class="line">linchong</span><br><span class="line">huanggai</span><br><span class="line">songjiang</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">用法：less [选项] 文件</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-g  只标志当前搜索到的关键词所在行</span><br><span class="line">-I  忽略搜索时的大小写（注意：是大写I）</span><br><span class="line">-m  显示类似more命令的百分比</span><br><span class="line">-N  显示每行的行号</span><br><span class="line">+num 从第num行开始显示</span><br><span class="line"></span><br><span class="line">常用操作：</span><br><span class="line">/字符串：向下搜索“字符串”的功能</span><br><span class="line">?字符串：向上搜索“字符串”的功能</span><br><span class="line"></span><br><span class="line">n：重复前一个搜索（与 / 或 ? 有关）</span><br><span class="line">N：反向重复前一个搜索（与 / 或 ? 有关）</span><br><span class="line"></span><br><span class="line">y  向前滚动一行</span><br><span class="line">回车键 向后滚动一行</span><br><span class="line"></span><br><span class="line">u  向前滚动半页</span><br><span class="line">d  向后滚动半页</span><br><span class="line"></span><br><span class="line">b  向前翻一页</span><br><span class="line">空格键 向后翻一页</span><br><span class="line"></span><br><span class="line">g  移动到第一行</span><br><span class="line">G  移动到最后一行</span><br><span class="line"></span><br><span class="line">= 显示详细信息（第几行，共多少行，内容的字节数量等）</span><br><span class="line"></span><br><span class="line">v  使用vim编辑器进行编辑</span><br><span class="line"></span><br><span class="line">q  退出less 命令</span><br><span class="line"></span><br><span class="line">[pagedown] 向下翻动一页</span><br><span class="line">[pageup] 向上翻动一页</span><br></pre></td></tr></table></figure><h2 id="less命令标记兴趣点"><a href="#less命令标记兴趣点" class="headerlink" title="less命令标记兴趣点"></a>less命令标记兴趣点</h2><p>在感兴趣的位置添加标记：</p><ul><li>先按m键 (set mark)</li><li>输入标记名称，例如标记名字为：x</li></ul><p>需要回到感兴趣的位置时：</p><ul><li>先按 ‘ 键 (goto mark)</li><li>输入标记名称 x</li></ul><h2 id="less命令实时监控文件动态变化"><a href="#less命令实时监控文件动态变化" class="headerlink" title="less命令实时监控文件动态变化"></a>less命令实时监控文件动态变化</h2><p>第一步：在窗口1中执行：less +F log.txt<br>第二步：在窗口2中执行：ps -ef &gt;&gt; log.txt</p><p>注意：在监控的过程中，按 ctrl + c是终止监控，可以继续使用less命令的相关操作。按大写F，再次进入监控模式。</p><p><strong>注意：log.txt是一个文件名。只有机器自动写入或通过输出重定向写入的才可以被监控。</strong></p><h2 id="less命令查看多个文件"><a href="#less命令查看多个文件" class="headerlink" title="less命令查看多个文件"></a>less命令查看多个文件</h2><p>less log.txt  log2.txt</p><ul><li>输入:n 跳转到log2.txt</li><li>输入:p 跳转到log.txt</li></ul><h2 id="less命令结合管道一起使用"><a href="#less命令结合管道一起使用" class="headerlink" title="less命令结合管道一起使用"></a>less命令结合管道一起使用</h2><p>ps -ef | less -N</p><h1 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h1><p>head命令：显示文件头部内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用法：head [选项]... [文件]...</span><br><span class="line">将每个指定文件的前 10 行输出到标准输出。</span><br><span class="line">如果指定了多于一个文件，在每块输出之前附加文件名称作为头部。</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">  -c 输出前几个字符</span><br><span class="line">  -n 指定行数</span><br><span class="line">  -q 不显示包含给定文件名的文件头</span><br></pre></td></tr></table></figure><p>前三行：<br>​<img src="https://i0.hdslb.com/bfs/article/628ddc5a1ed65c779e50866123428caa645325325.png" alt="image.png">​</p><p>前9个字符：<br><img src="https://i0.hdslb.com/bfs/article/748711647931e13cff80dc91b53d6f4d645325325.png" alt="image.png"></p><p>显示多个文件的前3行：<br><img src="https://i0.hdslb.com/bfs/article/bb0346a3d0198ebdcac9c465ebd06d91645325325.png" alt="image.png"></p><p>不带文件名标识：<br>​<img src="https://i0.hdslb.com/bfs/article/9306c129fd2e0990617f91ed4e3cae37645325325.png" alt="image.png">​</p><h1 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h1><p>tail命令：显示文件尾部内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">用法：tail [选项]... [文件]...</span><br><span class="line">显示每个指定文件的最后 10 行并输出至标准输出。</span><br><span class="line">若指定了多于一个文件，程序会在每段输出的开始添加相应文件名作为头。</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">  -c  输出最后几个字符</span><br><span class="line">  -f  随文件增长即时输出新增数据</span><br><span class="line">  -n  指定行数</span><br><span class="line">  -q  不输出文件名的头</span><br></pre></td></tr></table></figure><p>默认显示文件末尾的后10行：<br><img src="https://i0.hdslb.com/bfs/article/760058922835ae0392df1576d65ade3b645325325.png" alt="image.png"></p><p>指定行数：<br><img src="https://i0.hdslb.com/bfs/article/191c8af1d9290476ca1931a4720a28d3645325325.png" alt="image.png"></p><p>一次查看多个文件：<br><img src="https://i0.hdslb.com/bfs/article/810017a175a1b00e675bb995c0c31fa6645325325.png" alt="image.png"></p><p>不显示文件名：<br><img src="https://i0.hdslb.com/bfs/article/fc767b2a3c8dae29f4b833f37fc6f05b645325325.png" alt="image.png"></p><p>‍</p><p>监控文件变化：<br>在窗口1中：<br><img src="https://i0.hdslb.com/bfs/article/441f2777dfe4b4710fd363dea857e958645325325.png" alt="image.png"><br>在窗口2中：<br><img src="https://i0.hdslb.com/bfs/article/779dfa184751d98175a0e53afb5c68f1645325325.png" alt="image.png"><br>可以看到窗口1发生了变化：<br><img src="https://i0.hdslb.com/bfs/article/6071d01c59041ed2e73c44d58ec9559e645325325.png" alt="image.png"></p><p><img src="https://i0.hdslb.com/bfs/article/6f8ef8bf0b97285769d5171855ac5b6b645325325.jpg" alt="标头.jpg"></p><h1 id="nl命令"><a href="#nl命令" class="headerlink" title="nl命令"></a>nl命令</h1><p>nl命令是比较专业的显示行号的命令。<br>用法如下：</p><ul><li>nl -b a 所有行添加行号，包括空白行；</li><li>nl -b t 给行添加行号，不包括空白行（默认行为，和直接使用 nl 一样效果）；</li><li>nl -n ln 行号在自己栏位左侧显示；</li><li>nl -n rn 行号在自己栏位的右侧显示 ；</li><li>nl -n rz 显示行号，行号栏位不满时，自动补0 ；</li><li>nl -w 行号栏位的占用的位数。</li></ul><p>文件内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logout</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;system log out!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl HelloWorld.java</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/04c9bdd7d809c9789377ce87a6dc823f645325325.png" alt="image.png"><br>执行以下命令：显示所有行的行号，包括空白行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl -b a HelloWorld.java</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/25dc25ddd1d20ebca19d4da68bf966de645325325.png" alt="image.png"><br>执行以下命令：显示行号，不包括空白行。（<strong>这是一种默认的方式，和“nl HelloWorld.java”效果一样</strong>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl -b t HelloWorld.java</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/article/1ef677fe70db18fd0897c29c520f6933645325325.png" alt="image.png"><br>执行以下命令：行号在行号栏位左侧显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl -n ln HelloWorld.java</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/8e1840ff081f533bf9e318767b2cf531645325325.png" alt="image.png"></p><p>‍</p><p>执行以下命令：行号在行号栏位右侧显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl -n rn HelloWorld.java</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/dbf9bb157d15142016b8bd4077b6809b645325325.png" alt="image.png"><br>执行以下命令：行号栏位自动补0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl -n rz HelloWorld.java</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/847b7ade0b93be536ce415b83f03fd25645325325.png" alt="image.png"><br>执行以下命令：设置栏位的字符数量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl -n rz -w 3 HelloWorld.java</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/5ebac309050845fa419ae66204fbdfb9645325325.png" alt="image.png"></p><p>‍</p><h1 id="tailf命令"><a href="#tailf命令" class="headerlink" title="tailf命令"></a>tailf命令</h1><p>与tail -f不同的是，如果文件不增长，它不会去访问磁盘文件。tailf特别适合那些便携机上跟踪日志文件，因为它能省电，因为减少了磁盘访问。tailf命令不是个脚本，而是一个用C代码编译后的二进制执行文件，某些Linux安装之后没有这个命令。<br>CentOS系统是不支持该命令的，可以按照以下步骤添加这个命令：<br>第一步：cd命令切换到/usr/local目录下，新建tailf.c文件，该文件内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* tailf.c -- tail a log file and then follow it </span></span><br><span class="line"><span class="comment"> * Created: Tue Jan  9 15:49:21 1996 by faith@acm.org </span></span><br><span class="line"><span class="comment"> * Copyright 1996, 2003 Rickard E. Faith (faith@acm.org) </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a </span></span><br><span class="line"><span class="comment"> * copy of this software and associated documentation files (the &quot;Software&quot;), </span></span><br><span class="line"><span class="comment"> * to deal in the Software without restriction, including without limitation </span></span><br><span class="line"><span class="comment"> * the rights to use, copy, modify, merge, publish, distribute, sublicense, </span></span><br><span class="line"><span class="comment"> * and/or sell copies of the Software, and to permit persons to whom the </span></span><br><span class="line"><span class="comment"> * Software is furnished to do so, subject to the following conditions: </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * The above copyright notice and this permission notice shall be included </span></span><br><span class="line"><span class="comment"> * in all copies or substantial portions of the Software. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR </span></span><br><span class="line"><span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, </span></span><br><span class="line"><span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL </span></span><br><span class="line"><span class="comment"> * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR </span></span><br><span class="line"><span class="comment"> * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, </span></span><br><span class="line"><span class="comment"> * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR </span></span><br><span class="line"><span class="comment"> * OTHER DEALINGS IN THE SOFTWARE. </span></span><br><span class="line"><span class="comment"> *  </span></span><br><span class="line"><span class="comment"> * less -F and tail -f cause a disk access every five seconds.  This </span></span><br><span class="line"><span class="comment"> * program avoids this problem by waiting for the file size to change. </span></span><br><span class="line"><span class="comment"> * Hence, the file is not accessed, and the access time does not need to be </span></span><br><span class="line"><span class="comment"> * flushed back to disk.  This is sort of a &quot;stealth&quot; tail. </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">  </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span>  </span></span><br><span class="line"><span class="comment">//#include &quot;nls.h&quot;  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _(s) s  </span></span><br><span class="line">  </span><br><span class="line"><span class="type">static</span> <span class="type">size_t</span> <span class="title function_">filesize</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *filename)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">sb</span>;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (!stat(filename, &amp;sb)) <span class="keyword">return</span> sb.st_size;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">tailf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *filename, <span class="type">int</span> lines)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="type">char</span> **buffer;  </span><br><span class="line">    <span class="type">int</span>  head = <span class="number">0</span>;  </span><br><span class="line">    <span class="type">int</span>  tail = <span class="number">0</span>;  </span><br><span class="line">    FILE *str;  </span><br><span class="line">    <span class="type">int</span>  i;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (!(str = fopen(filename, <span class="string">&quot;r&quot;</span>))) &#123;  </span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, _(<span class="string">&quot;Cannot open \&quot;%s\&quot; for read\n&quot;</span>), filename);  </span><br><span class="line">    perror(<span class="string">&quot;&quot;</span>);  </span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    buffer = <span class="built_in">malloc</span>(lines * <span class="keyword">sizeof</span>(*buffer));  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; lines; i++) buffer[i] = <span class="built_in">malloc</span>(BUFSIZ + <span class="number">1</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> (fgets(buffer[tail], BUFSIZ, str)) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (++tail &gt;= lines) &#123;  </span><br><span class="line">        tail = <span class="number">0</span>;  </span><br><span class="line">        head = <span class="number">1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (head) &#123;  </span><br><span class="line">    <span class="keyword">for</span> (i = tail; i &lt; lines; i++) <span class="built_in">fputs</span>(buffer[i], <span class="built_in">stdout</span>);  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tail; i++)     <span class="built_in">fputs</span>(buffer[i], <span class="built_in">stdout</span>);  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">    <span class="keyword">for</span> (i = head; i &lt; tail; i++)  <span class="built_in">fputs</span>(buffer[i], <span class="built_in">stdout</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    fflush(<span class="built_in">stdout</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; lines; i++) <span class="built_in">free</span>(buffer[i]);  </span><br><span class="line">    <span class="built_in">free</span>(buffer);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="type">char</span>       buffer[BUFSIZ];  </span><br><span class="line">    <span class="type">size_t</span>     osize, nsize;  </span><br><span class="line">    FILE       *str;  </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *filename;  </span><br><span class="line">    <span class="type">int</span>        count;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//setlocale(LC_ALL, &quot;&quot;);  </span></span><br><span class="line">    <span class="comment">//bindtextdomain(PACKAGE, LOCALEDIR);  </span></span><br><span class="line">    <span class="comment">//textdomain(PACKAGE);  </span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;  </span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, _(<span class="string">&quot;Usage: tailf logfile\n&quot;</span>));  </span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    filename = argv[<span class="number">1</span>];  </span><br><span class="line">  </span><br><span class="line">    tailf(filename, <span class="number">10</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (osize = filesize(filename);;) &#123;  </span><br><span class="line">    nsize = filesize(filename);  </span><br><span class="line">    <span class="keyword">if</span> (nsize != osize) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (!(str = fopen(filename, <span class="string">&quot;r&quot;</span>))) &#123;  </span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, _(<span class="string">&quot;Cannot open \&quot;%s\&quot; for read\n&quot;</span>), filename);  </span><br><span class="line">        perror(argv[<span class="number">0</span>]);  </span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (!fseek(str, osize, SEEK_SET))  </span><br><span class="line">                <span class="keyword">while</span> ((count = fread(buffer, <span class="number">1</span>, <span class="keyword">sizeof</span>(buffer), str)) &gt; <span class="number">0</span>)  </span><br><span class="line">                    fwrite(buffer, <span class="number">1</span>, count, <span class="built_in">stdout</span>);  </span><br><span class="line">        fflush(<span class="built_in">stdout</span>);  </span><br><span class="line">        fclose(str);  </span><br><span class="line">        osize = nsize;  </span><br><span class="line">    &#125;  </span><br><span class="line">    usleep(<span class="number">250000</span>);     <span class="comment">/* 250mS */</span>  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>‍</p><p>第二步：首先确保当前目录在/usr/local下，如果不在该目录下，请使用cd命令切换到/usr/local。然后编译c语言程序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost local]# gcc -o /usr/bin/tailf tailf.c</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/article/b1fa90aa92220a0587e00e2d5a40988c645325325.png" alt="image.png"><br>出现以上提示信息表示当前系统中没有gcc编译器，需要安装，输入y表示同意安装，再有提示，则继续输入y即可。<br>第三步：测试tailf命令是否可用，直接输入tailf会出现以下提示，表示tailf命令可以使用了。<br><img src="https://i0.hdslb.com/bfs/article/9ddcc52eb101633f4b848009c71d5167645325325.png" alt="image.png"><br>tailf命令和“tail -f”一个效果，都是用来实时监控文件变动的。只不过tailf是专业的只负责监控日志文件变化的一个命令。我们来测试一下。<br>日志文件内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">日志信息第1行</span><br><span class="line">日志信息第2行</span><br><span class="line">日志信息第3行</span><br><span class="line">日志信息第4行</span><br><span class="line">日志信息第5行</span><br><span class="line">日志信息第6行</span><br><span class="line">日志信息第7行</span><br><span class="line">日志信息第8行</span><br><span class="line">日志信息第10行</span><br><span class="line">日志信息第11行</span><br><span class="line">日志信息第12行</span><br><span class="line">日志信息第13行</span><br><span class="line">日志信息第14行</span><br><span class="line">日志信息第15行</span><br><span class="line">日志信息第16行</span><br><span class="line">日志信息第17行</span><br><span class="line">日志信息第18行</span><br><span class="line">日志信息第19行</span><br><span class="line">日志信息第20行</span><br></pre></td></tr></table></figure><p>‍</p><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tailf localhost.log</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://i0.hdslb.com/bfs/article/e1ae18eccfb0e162eb8a5a2a63dcd731645325325.png" alt="image.png"><br>可以再开启一个新的命令窗口，然后向日志文件中追加内容，如下：<br><img src="https://i0.hdslb.com/bfs/article/4c0db171d43bdbd042374a938184a785645325325.png" alt="image.png"><br>这时可以看到tailf命令窗口如下：<br><img src="https://i0.hdslb.com/bfs/article/2b8fdd7597e9bf29955ec9dd68ee0c2b645325325.png" alt="image.png"></p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3章 系统命令</title>
      <link href="/posts/33222.html"/>
      <url>/posts/33222.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><div class="tip info faa-horizontal animated"><p>唯有读第一流的书，才有希望当第二流的人。读书一事，不可求全，贪多嚼不烂，以精读为上，细嚼慢咽，真正把一本经典的精妙，全部吃进肚子里，将那些美好的意象、真知灼见的道理、隐匿于句章之间的精气神，一一化为己用，这才叫读书，否则只是翻书，翻过千万卷，撑死也是个两脚书柜</p></div><p><a href="https://www.bilibili.com/video/BV1Nb421a7TV/?spm_id_from=333.999.list.card_archive.click"><br>    <img style="border: 1.5px solid #cbcbcb !important; max-width: 90%;"        src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/20240815134316.png"></a></p><h1 id="系统当前时间"><a href="#系统当前时间" class="headerlink" title="系统当前时间"></a>系统当前时间</h1><p>date命令：<br><img src="https://i0.hdslb.com/bfs/article/ac61633c6ae8381cbdba4e4e1a365039645325325.png" alt="image.png"></p><h1 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h1><p>su 用户名<br><img src="https://i0.hdslb.com/bfs/article/195d2457c60523f3e492a6aa6de711eb645325325.png" alt="image.png"></p><p><strong>sudo 命令</strong>：表示使用超级管理员身份执行该命令，如果你当前不是管理员，希望以管理员身份执行某个命令时，使用sudo，需要输入超级管理员的密码：<br>​<img src="https://i0.hdslb.com/bfs/article/8ae892174264e9a3695a0773ea27906b645325325.png" alt="image.png">​</p><h1 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h1><h2 id="输出字符串"><a href="#输出字符串" class="headerlink" title="输出字符串"></a>输出字符串</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Hello, world!&quot;</span><br></pre></td></tr></table></figure><p>这将会输出 <code>Hello, world!</code> 和一个换行符。<br><img src="https://i0.hdslb.com/bfs/article/53e1d0ba3a68e17f6455809eea3930b8645325325.png" alt="image.png"></p><h2 id="输出变量"><a href="#输出变量" class="headerlink" title="输出变量"></a>输出变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=&quot;John&quot;</span><br><span class="line">echo &quot;My name is $name&quot;</span><br></pre></td></tr></table></figure><p>这将会输出 <code>My name is John</code> 和一个换行符。在输出字符串时，使用 <code>$</code> 符号加上变量名即可。<br><img src="https://i0.hdslb.com/bfs/article/2166f1455c5c0ac2125a191be7d06fae645325325.png" alt="image.png"></p><h2 id="输出多行"><a href="#输出多行" class="headerlink" title="输出多行"></a>输出多行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;line 1</span><br><span class="line">line 2</span><br><span class="line">line 3&quot;</span><br></pre></td></tr></table></figure><p>这将会输出三行文本，每行一条。<br><img src="https://i0.hdslb.com/bfs/article/e4619d8953584dd006d02f0eb32a3200645325325.png" alt="image.png"></p><h2 id="输出特殊字符"><a href="#输出特殊字符" class="headerlink" title="输出特殊字符"></a>输出特殊字符</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;Line 1\nLine 2\tTable&quot;</span><br></pre></td></tr></table></figure><p>这将会输出两行文本，第一行后接一个换行符，第二行中的 <code>Table</code>​前有一个制表符。<br>​<img src="https://i0.hdslb.com/bfs/article/cb233822092d2cb40786e120435620c9645325325.png" alt="image.png">​</p><h1 id="sort命令"><a href="#sort命令" class="headerlink" title="sort命令"></a>sort命令</h1><p>sort命令可以对文件中的内容以“行”为单位进行升序和降序排列：<br>a.txt 文件内容如下：<br>![image.png](</p><p>升序：<br><img src="https://i0.hdslb.com/bfs/article/6f4c739cf1cc27940d492f0c4efad14f645325325.png" alt="image.png"></p><p>降序：<br><img src="https://i0.hdslb.com/bfs/article/5f45d05deabeea99c14d5db1b8691493645325325.png" alt="image.png"></p><p>将文件中的内容当做数字进行排序（不再当做字符串）：<br>a.txt文件内容：<br>​<img src="https://i0.hdslb.com/bfs/article/e6c4438adc4d9726f246697f506ac3d0645325325.png" alt="image.png"><br>当做数字进行排序：<br>​<img src="https://i0.hdslb.com/bfs/article/c2eb0b177073d226c72d9585e8106221645325325.png" alt="image.png">​</p><h1 id="diff命令"><a href="#diff命令" class="headerlink" title="diff命令"></a>diff命令</h1><p>diff命令可以用来比较两个文件的不同之处：</p><p>a.txt文件内容如下：<br><img src="https://i0.hdslb.com/bfs/article/d05dd81c7f9486b03f2a6ac7b89eaa8b645325325.png" alt="image.png"></p><p>b.txt文件内容如下：<br><img src="https://i0.hdslb.com/bfs/article/551da25f8afd5d1af0c227642d309461645325325.png" alt="image.png"></p><p>比较a.txt和b.txt文件之间的区别：<br><img src="https://i0.hdslb.com/bfs/article/f5b1f81910c8a1c9afdccc785f1cd689645325325.png" alt="image.png"></p><p>以上的比较结果中：1c1是什么含义？3c3,4是什么含义？<br>c 表示 change，改变的意思。<br>1c1表示：第一个文件的第1行 和 第二个文件的第1行 发生了改变。<br>3c3,4表示：第一个文件的第3行 和 第二个文件的第3,4行不同，发生了改变。</p><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><h2 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h2><blockquote><p>：以覆盖的形式写到文件中。</p><blockquote><p>：以追加的形式写到文件中。<br>凡是在控制台上能够打印出来的，统一都可以重定向，可以将其打印到控制台的行为重定向到文件或其它设备。例如：<br>​<img src="https://i0.hdslb.com/bfs/article/921b645640b61541559c85634e447dc3645325325.png" alt="image.png"><br>将 ls -al的执行结果重定向到 ls.txt 文件中。<br>ls.txt文件内容如下：<br>​<img src="https://i0.hdslb.com/bfs/article/8ebb0775396b5b111250293fa4dadd8f645325325.png" alt="image.png"><br>以上方式是采用覆盖的方式，所谓覆盖方式指的是，每一次执行时，都会把 ls.txt 文件全部清空，然后重新写入。<br>如果要以追加的方式，则需要使用 &gt;&gt; ，这个可以自行测试一下。</p></blockquote></blockquote><h2 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h2><p>&lt;：将文件内容输入给某个命令，这是一种默认的行为，通常 &lt; 是可以省略的。例如：<br>a.txt文件内容如下：<br><img src="https://i0.hdslb.com/bfs/article/5692a23ede05eae65d8b8cfbb82a7a5e645325325.png" alt="image.png"><br>将 a.txt 文件中的内容输入给 sort命令：<br><img src="https://i0.hdslb.com/bfs/article/9b9fc69ce16a4b582589ee78dd591d45645325325.png" alt="image.png"></p><p>&lt;&lt;：可以接收键盘的输入，例如：<br>​<img src="https://i0.hdslb.com/bfs/article/464515490743cb3718030ac6960537f9645325325.png" alt="image.png"><br>EOF是一个结束符，随意的，当键盘输入EOF之后，键盘输入则自动结束，然后sort命令将键盘输入的内容进行排序。</p><h1 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h1><p>在某段内容中搜索<br>例如： grep 0 a.txt （在a.txt中搜索0）</p><p><code>grep</code> 是一个强大的命令行文本搜索工具，用于在文件中查找匹配的字符串或模式，并将匹配行作为输出。以下是 <code>grep</code> 命令的用法详解：</p><p>基本用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;pattern&#x27; file</span><br></pre></td></tr></table></figure><ul><li><code>&#39;pattern&#39;</code> 表示要匹配的字符串或模式。</li><li><code>file</code> 表示要搜索的文件名。如果不指定文件名，则 <code>grep</code> 命令会从标准输入中读取数据，等待用户输入并匹配字符串。</li></ul><p>搜索多个文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;pattern&#x27; file1 file2</span><br><span class="line">grep &#x27;pattern&#x27; *.txt</span><br></pre></td></tr></table></figure><ul><li><code>file1</code> 和 <code>file2</code> 表示要搜索的多个文件名。也可以使用通配符 <code>*.txt</code> 搜索所有扩展名为 <code>.txt</code> 的文件。</li></ul><p>递归搜索目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r &#x27;pattern&#x27; dir</span><br></pre></td></tr></table></figure><ul><li><code>-r</code> 表示递归搜索目录。</li><li><code>dir</code> 表示要搜索的目录。</li></ul><p>显示匹配行前的几行或后的几行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -A 2 &#x27;pattern&#x27; file    # 显示匹配行后2行</span><br><span class="line">grep -B 2 &#x27;pattern&#x27; file    # 显示匹配行前2行</span><br><span class="line">grep -C 2 &#x27;pattern&#x27; file    # 显示匹配行前后各2行</span><br></pre></td></tr></table></figure><ul><li><code>-A</code> 表示显示匹配行后的几行。</li><li><code>-B</code> 表示显示匹配行前的几行。</li><li><code>-C</code> 表示同时显示匹配行前后的几行。这三个选项后面必须跟一个数字，表示要显示的行数。</li></ul><p>同时输出匹配结果的行号：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -n &#x27;pattern&#x27; file</span><br></pre></td></tr></table></figure><ul><li><code>-n</code> 表示只输出匹配结果所在的行号。</li></ul><p>忽略大小写：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -i &#x27;pattern&#x27; file</span><br></pre></td></tr></table></figure><ul><li><code>-i</code> 表示忽略大小写。</li></ul><p>找出不匹配的行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v &#x27;pattern&#x27; file</span><br></pre></td></tr></table></figure><ul><li><code>-v</code> 输出不匹配模式的行。</li></ul><p>使用正则表达式匹配：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E &#x27;pattern&#x27; file</span><br></pre></td></tr></table></figure><ul><li><code>-E</code>​ 表示使用正则表达式匹配。</li></ul><h1 id="管道"><a href="#管道" class="headerlink" title="管道 |"></a>管道 |</h1><p>将前面命令的输出作为后面命令的输入，可以叠加，例如：<br>​<img src="https://i0.hdslb.com/bfs/article/447e8c686ee3c8a2198ddfbb7b88d5e9645325325.png" alt="image.png">​</p><h1 id="查看系统进程"><a href="#查看系统进程" class="headerlink" title="查看系统进程"></a>查看系统进程</h1><p>ps [命令参数]</p><p>常用参数：<br>-e :显示当前所有进程<br>-f :显示 UID,PPID,C 与 STIME 栏位信息</p><p><img src="https://i0.hdslb.com/bfs/article/fc861966f94e9e0543641fa67e1ecc73645325325.png" alt="image.png"></p><p>UID：该进程的所属用户<br>PID：进程id<br>PPID：父进程id<br>C：CPU使用百分比<br>STIME：启动时间<br>TTY：启动该进程的终端设备是哪个<br>TIME：耗费的CPU时间<br>CMD：该进程对应的命令</p><p>‍</p><h1 id="sleep命令"><a href="#sleep命令" class="headerlink" title="sleep命令"></a>sleep命令</h1><p>在 Linux 中，<code>sleep</code> 是一个常用的命令，用于暂停程序的执行一段时间。<code>sleep</code> 命令的基本语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sleep NUMBER[SUFFIX]</span><br></pre></td></tr></table></figure><p>其中，<code>NUMBER</code> 为需要暂停的时间，单位是秒；<code>SUFFIX</code> 则可以是以下之一：</p><ul><li><code>s</code> ：秒（默认）；</li><li><code>m</code> ：分；</li><li><code>h</code> ：小时；</li><li><code>d</code> ：日。</li></ul><p>例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">暂停 3 秒</span></span><br><span class="line">sleep 3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">暂停 1 分钟</span></span><br><span class="line">sleep 1m</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">暂停 2 小时</span></span><br><span class="line">sleep 2h</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">暂停 1 天</span></span><br><span class="line">sleep 1d</span><br></pre></td></tr></table></figure><p>启动sleep进程，暂停1天：<br><img src="https://i0.hdslb.com/bfs/article/c87876037465906bdf6cc2eae436437f645325325.png" alt="image.png"><br>启动sleep进程，在后台暂停1天：<br><img src="https://i0.hdslb.com/bfs/article/f8ca3cad697cf455be759a4362b2b3f7645325325.png" alt="image.png"><br>5277是这个sleep进程的id。</p><p>‍</p><h1 id="kill进程"><a href="#kill进程" class="headerlink" title="kill进程"></a>kill进程</h1><p>kill 进程号<br>kill -9 进程号（强行杀死）<br>killall 进程名</p><p>找到进程：<br><img src="https://i0.hdslb.com/bfs/article/71110f3e2f6b398b63247b0c887fa32f645325325.png" alt="image.png"></p><p>杀死进程：<br><img src="https://i0.hdslb.com/bfs/article/717e8b9e27caf7da3f3446d5dd061ddc645325325.png" alt="image.png"></p><p>杀死所有的sleep进程：<br><img src="https://i0.hdslb.com/bfs/article/e1749d06116b8f446f2991785c2e5157645325325.png" alt="image.png"></p><p>‍</p><h1 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h1><p><code>top</code> 命令是用于查看正在运行的系统进程信息的命令。它会<strong>实时</strong>动态地显示系统资源的使用情况，如 CPU 占用率、内存使用情况、进程情况等。通常用于系统监控和性能调优。</p><p><img src="https://i0.hdslb.com/bfs/article/c6f82c8f109fe009c786f161164df1db645325325.png" alt="image.png"></p><p>僵尸进程：在操作系统中，僵尸进程 (Zombie Process) 是指一个已经执行结束的进程，但其进程描述符仍然留在进程列表中，它不再执行任何其他操作，但仍然占用一定内存空间。<br>交换分区（Swap），也称虚拟存储器，是一种在计算机内存不足时，为了增加内存所采用的一种技术。当系统内存不足时，操作系统会把暂时不需要的内存数据和程序信息通过交换机制存储到硬盘上的交换分区中，以节省内存的使用，从而保证共享内存的进程正常运行。</p><p>q：退出top命令。</p><p>‍</p><h1 id="free命令"><a href="#free命令" class="headerlink" title="free命令"></a>free命令</h1><p><code>free</code>命令可以用于查看物理内存和交换分区的使用情况。下面是一条可能的 <code>free</code> 命令的输出结果的示例：</p><p><img src="https://i0.hdslb.com/bfs/article/670f00f44993a55e716b795683581250645325325.png" alt="image.png"></p><h1 id="uptime命令"><a href="#uptime命令" class="headerlink" title="uptime命令"></a>uptime命令</h1><p>显示系统运行时间：<br><img src="https://i0.hdslb.com/bfs/article/32c86fb2b8ae6e0e29fc902e8ee22c25645325325.png" alt="image.png"></p><p>‍</p><h1 id="df命令"><a href="#df命令" class="headerlink" title="df命令"></a>df命令</h1><p><code>df</code> 命令是 Linux 系统中的一个磁盘空间使用情况查询命令，用于显示当前文件系统的磁盘空间使用状况，以及文件系统的挂载点、磁盘大小、已用空间、可用空间、使用占比等信息。<code>df</code>命令是 “disk free” 的缩写。<br><img src="https://i0.hdslb.com/bfs/article/cd5a3f2c3eb72c572a7a306487d808f8645325325.png" alt="image.png"><br>对于程序员来说，应该重点关注以上红框中的内容，已用空间超过80%则需要重点注意，以防磁盘已满导致数据无法写入而丢失。</p><p>‍</p><h1 id="du命令"><a href="#du命令" class="headerlink" title="du命令"></a>du命令</h1><p><code>du</code>命令是 Linux 系统中的一个磁盘空间占用查询命令，用于显示文件或目录占用的磁盘空间大小。<code>du</code>命令是 “disk usage” 的缩写：<br><img src="https://i0.hdslb.com/bfs/article/74f2cae0173a56ba3dc45ab2f01c3444645325325.png" alt="image.png"><br>4表示占用4个字节的空间。</p><h1 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h1><p>reboot</p><p>‍</p><h1 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h1><p>shutdown -h now<br>poweroff</p><p><code>shutdown -h now</code> 和 <code>poweroff</code> 都是用于关机的 Linux 命令，它们的区别如下：</p><ol><li><code>shutdown -h now</code> 命令会向系统发送信号，通知所有正在运行的进程停止运行，并保存当前的状态，然后关闭系统。通常会在关机前向所有用户发送通知消息。</li><li><code>poweroff</code> 命令相较于 <code>shutdown -h now</code> 更为强制，它会立即关闭系统电源，不会等待正在运行的进程结束。使用 <code>poweroff</code> 命令时需要特别小心，因为它可能会丢失尚未保存的数据。</li></ol><p>综上所述，<code>shutdown -h now</code> 命令会逐步关闭进程，允许程序释放资源并保存数据；而 <code>poweroff</code> 命令则会立即关闭系统电源，可能会丢失一些尚未保存的数据。因此，在正常关机的情况下，建议使用 <code>shutdown -h now</code> 命令；只有在意外情况下，比如系统出现严重故障等情况，才应该使用 <code>poweroff</code> 命令。</p><p>‍</p><h1 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h1><p>查看网卡的ip地址。在windows当中是：ipconfig。在linux当中是ifconfig。<br><img src="https://i0.hdslb.com/bfs/article/28c5b8f117a0c7857142204ef5f00fe2645325325.png" alt="image.png"></p><p>‍</p><h1 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h1><p>查看计算机之间是否可以正常通信<br>语法：</p><ul><li>ping ip地址</li><li>ping 域名</li></ul><p><img src="https://i0.hdslb.com/bfs/article/b939877ab678fe6f50a645d00e34b49c645325325.png" alt="image.png"></p><p><img src="https://i0.hdslb.com/bfs/article/e04f3b3d286276e2cc4f798e9f780b9e645325325.png" alt="image.png"></p><p>‍</p><h1 id="curl命令"><a href="#curl命令" class="headerlink" title="curl命令"></a>curl命令</h1><p>模拟用户访问，模拟浏览器行为。</p><ul><li>例如：curl <a href="http://www.baidu.com">http://www.baidu.com</a> （可以直接查看百度首页的前端代码。）</li></ul><p><code>curl</code> 命令是 Linux 系统中的一个用于发送 HTTP 请求的工具。它支持各种协议，包括 HTTP、HTTPS、FTP、IMAP、SMTP 等，可以用于从网络中获取数据、上传文件等。</p><p><code>curl</code> 命令的基本语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl [options] &lt;URL&gt;</span><br></pre></td></tr></table></figure><p>其中，<code>URL</code> 表示要请求的目标地址。</p><p><code>curl</code> 命令的常用选项如下：</p><ul><li><code>-i</code> ：显示响应头信息。</li><li><code>-I</code> ：只显示响应头信息，不显示响应体。</li><li><code>-X</code> ：设置请求方法，包括 GET、POST、PUT、DELETE 等。</li><li><code>-d</code> ：设置请求体数据（POST 请求）。</li><li><code>-H</code> ：设置请求头信息。</li><li><code>-o/-O</code> ：下载文件，并保存到本地。</li><li><code>-u</code> ：设置认证信息。</li><li><code>-A</code> ：设置 User-Agent。</li><li><code>-s</code> ：静默模式，不输出进度信息。</li></ul><p>以下是 <code>curl</code> 命令的一些使用示例：</p><ol><li>请求一个 URL 并输出响应信息：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl www.example.com</span><br></pre></td></tr></table></figure><ol><li>发送 POST 请求：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -d &quot;name=john&amp;age=30&quot; www.example.com/submit</span><br></pre></td></tr></table></figure><ol><li>下载一个文件：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O www.example.com/test.zip</span><br></pre></td></tr></table></figure><ol><li>设置请求头信息：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H &quot;User-Agent: Mozilla/5.0&quot; www.example.com</span><br></pre></td></tr></table></figure><p>总之，<code>curl</code> 命令是一个非常方便的工具，可以用于从网络中获取数据、上传文件等，并且支持多种协议和请求方式。需要注意的是，在实际使用 <code>curl</code> 命令时，还需要根据具体情况设置相应的选项和参数。</p><p>‍</p><h1 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h1><p>下载资源，语法：wget 资源地址<br>下载tomcat ：wget <a href="https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.20/bin/apache-tomcat-10.1.20.tar.gz">https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.20/bin/apache-tomcat-10.1.20.tar.gz</a></p><p><img src="https://i0.hdslb.com/bfs/article/5b884430cefadd738baab4f10480f22a645325325.png" alt="image.png"></p><p>下载结果：<br><img src="https://i0.hdslb.com/bfs/article/7aa9c0f4a48d1a70171f02a65248d667645325325.png" alt="image.png"></p><p>‍</p><h1 id="netstat查看网络连接状态及端口"><a href="#netstat查看网络连接状态及端口" class="headerlink" title="netstat查看网络连接状态及端口"></a>netstat查看网络连接状态及端口</h1><p>在实际开发中，netstat最常用的操作是查看网络连接情况。通过使用netstat命令，开发人员可以快速了解当前系统上的所有网络连接，包括正在监听的端口、建立的连接、连接状态等信息。这对于排查网络问题和监控系统状态非常有用。另外，netstat还可以用于检查网络安全，例如查看哪些端口正在被占用，是否有不安全的连接等。</p><p>以下是netstat命令的常用参数和用法：</p><ol><li>查看所有的网络连接状态：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -a</span><br><span class="line">netstat -an 添加-n参数的目的是：不将端口和IP地址转换为名称，而是直接显示数字格式的IP地址和端口号</span><br></pre></td></tr></table></figure><p><strong>LISTENING 状态</strong>：表示该端口已占用，正在监听，等待客户端的连接。<br><strong>CONNECTED状态</strong>：表示网络连接已建立，但并没有开始数据传输。<br><strong>ESTABLISHED 状态</strong>：表示网络已连接，数据正在传输中。<br><strong>TIME_WAIT 状态</strong>：表示连接已经被终止，在双方都完成数据传输后，该连接会进入<code>TIME_WAIT</code>状态，并等待一段时间后关闭。</p><ol><li>查看<strong>所有处于监听状态</strong>的连接：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -l</span><br></pre></td></tr></table></figure><ol><li>查看所有TCP连接状态：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -t</span><br></pre></td></tr></table></figure><ol><li>查看所有UDP连接状态：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -u</span><br></pre></td></tr></table></figure><ol><li>查看所有处于CONNECTED状态的连接：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -o</span><br></pre></td></tr></table></figure><ol><li>查看指定端口的网络连接状态：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep 端口号</span><br></pre></td></tr></table></figure><p>例如，查看80端口的网络连接状态：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep :80</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2章 磁盘与文件管理</title>
      <link href="/posts/15060.html"/>
      <url>/posts/15060.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><div class="tip info faa-horizontal animated"><p>少年的肩膀，就该这样才对嘛，什么家国仇恨，浩然正气的，都不要急，先挑起清风明月、杨柳依依和草长莺飞，少年郎的肩头，本就应当满是美好的事物啊</p></div><p><a href="https://www.bilibili.com/video/BV1Nb421a7TV/?spm_id_from=333.999.list.card_archive.click"><br>    <img style="border: 1.5px solid #cbcbcb !important; max-width: 90%;"        src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/20240815134316.png"></a></p><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><h2 id="windows和Linux磁盘管理的区别"><a href="#windows和Linux磁盘管理的区别" class="headerlink" title="windows和Linux磁盘管理的区别"></a>windows和Linux磁盘管理的区别</h2><h3 id="windows资源管理方式"><a href="#windows资源管理方式" class="headerlink" title="windows资源管理方式"></a>windows资源管理方式</h3><p><img src="https://i0.hdslb.com/bfs/article/a21d17262069dc999747d412e1e75776645325325.png" alt="image.png"></p><ul><li>系统一般安装在C盘</li><li>C盘下的”Windows”目录是操作系统的核心</li><li>C盘下的”Program Files”目录下安装软件</li><li>C盘下的”用户”目录是所有的用户，包括超级管理员也在其中</li><li>windows操作系统分为C盘、D盘、E盘等，每个磁盘下采用文档树的形式组织文件</li></ul><h3 id="Linux资源管理方式"><a href="#Linux资源管理方式" class="headerlink" title="Linux资源管理方式"></a>Linux资源管理方式</h3><p><img src="https://i0.hdslb.com/bfs/article/cab02e653fe467bc918337a044807a37645325325.png" alt="image.png"><br>linux操作系统采用一个文档树来组织所有的资源。<br>这棵树的根目录的名字叫做：/<br>/ 是一个目录名字，是linux操作系统中所有文件的根。<br>/ 目录下又有很多其他的子目录，比如：dev home lib …..</p><p>比较重要的几个目录概述：</p><ol><li>/bin目录：包含一些常用的二进制可执行文件，如cat、ls、mkdir、rm等。这些二进制文件在系统运行时始终可用，可以被任何用户运行。</li><li>/etc目录：包含了系统的大多数配置文件，如网络配置、用户登录信息、软件包安装配置等。大多数应用程序在安装后都会在这个目录下创建自己的子目录，以便存储自己的配置文件。</li><li>/home目录：包含Linux系统用户的家目录，每个用户的数据和个人文件都存放在这里。</li><li>/lib目录：包含一些共享库文件，应用程序可以通过这些共享库文件调用系统的功能，如libc.so，是C语言函数库的共享库。</li><li>/root目录：是系统管理者（超级用户）的家目录。</li><li>/tmp目录：是系统中的一个临时目录，所有用户都可以在这里创建临时文件，文件系统会定期清空该目录，以防止文件滞留。</li><li>/usr目录：包含系统启动后，所有用户能访问的应用程序和数据文件。</li><li>/var 目录：包含可变数据的文件。包括日志、数据库、Web服务器、邮件队列等文件。它是一个经常被修改的目录，如果在其他目录有可变数据的话，它们都应当被链接到 /var 中。</li></ol><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><p>在终端中输入该命令，可以查看当前所在位置，例如：<br><img src="https://i0.hdslb.com/bfs/article/2d5d514b5970307b876fdee0c380a772645325325.png" alt="image.png"><br>可以看到，当前所在位置是根目录。</p><h2 id="man和—help"><a href="#man和—help" class="headerlink" title="man和—help"></a>man和—help</h2><h3 id="man命令"><a href="#man命令" class="headerlink" title="man命令"></a>man命令</h3><p>man命令可以查看某个命令的具体用法，例如：man pwd。如果一个命令具体的用法你不知道的话，问那个男人就行了。<br>man命令怎么进行翻页？空格<br>man命令怎么退出？q</p><h3 id="—help参数"><a href="#—help参数" class="headerlink" title="—help参数"></a>—help参数</h3><p>—help，也可以查看一个命令的帮助，一次性列出。用法：touch —help</p><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><h3 id="ls-1"><a href="#ls-1" class="headerlink" title="ls"></a>ls</h3><p>ls命令是list的意思：列出，列表等。<br>通过ls命令可以查看当前目录下的子目录和子文件。例如：<br><img src="https://i0.hdslb.com/bfs/article/218c1b3c044ba85d97e12e898a6a20b7645325325.png" alt="image.png"></p><h3 id="ls-a"><a href="#ls-a" class="headerlink" title="ls -a"></a>ls -a</h3><p>a是all的意思，表示所有。<br>列出包含隐藏文件在内的所有的文件。（在Linux操作系统中隐藏文件的文件名通常以”.”开始）<br>​<img src="https://i0.hdslb.com/bfs/article/43eb43580ff8ad5ce4a3a8fe524d627e645325325.png" alt="image.png">​</p><h3 id="ls-l"><a href="#ls-l" class="headerlink" title="ls -l"></a>ls -l</h3><p>-l 参数表示使用长格式输出：long format<br>输出结果中每一列的含义如下：<br><img src="https://i0.hdslb.com/bfs/article/ebcbe2e619c8c230daa4b7a5b3d76998645325325.png" alt="image.png"></p><p>注意权限部分：<br><img src="https://i0.hdslb.com/bfs/article/f417d6df4b5430c52c17d36549003b2b645325325.png" alt="image.png"></p><p>ls -l 可以简写为：ll</p><h3 id="ls-al"><a href="#ls-al" class="headerlink" title="ls -al"></a>ls -al</h3><p>ls -al等同于：ls -a + ls -l的功能。<br>可以简写为：ll -a</p><h3 id="ll-a-home-powernode"><a href="#ll-a-home-powernode" class="headerlink" title="ll -a /home/powernode"></a>ll -a /home/powernode</h3><p>可以指定查看某个目录下的所有文件详情。</p><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><p>cd命令：change directory<br>cd命令用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 路径名</span><br></pre></td></tr></table></figure><p>cd .. 回到上级目录</p><p>cd ../.. 回到上级目录的上级目录</p><p>cd ~ 回到主目录</p><p>cd / 回到根目录</p><p>cd /home/powernode 切换到 /home/powernode目录下</p><p>cd abc 切换到当前目录下的abc目录中</p><ul><li>这里的abc没有以 / 开始，表示这个路径是相对路径，相对路径指的是从当前所在目录作为起点开始找。</li><li>以 / 开始的路径被称为绝对路径。</li><li>cd 命令后面既可以是相对路径，也可以是绝对路径。只要路径正确即可。</li></ul><h2 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h2><p>清屏</p><h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><h2 id="新建目录"><a href="#新建目录" class="headerlink" title="新建目录"></a>新建目录</h2><p>mkdir abc （mkdir是新建目录的命令，abc是一个目录名）<br>mkdir -p a/b/c （-p参数表示，一次创建多重目录）<br>mkdir -p a/kk/ff （虽然a已经存在了，但是不会报错，直接在a目录下新建kk目录，kk目录下新建ff目录。）</p><h2 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h2><p>touch 文件名，例如：touch Hello.java 表示在当前目录下新建一个文件Hello.java<br>touch a.txt b.txt c.txt 一次性在当前目录下，新建多个文件，文件名之间采用空格分隔。</p><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><p>用法：rm 文件名</p><p>rm a.txt（删除当前目录下的a.txt文件）。这种方式会询问，是否删除，输入y表示删除，输入n表示不删除。</p><p>不想让系统询问你是否删除，怎么进行强行删除呢？ -f 参数可以做到。</p><ul><li>rm -f a.txt（强行删除a.txt文件，不询问）</li></ul><p>删除多个文件</p><ul><li>rm -f b.txt c.txt （删除b.txt和c.txt文件）</li><li>rm -f *.java（删除所有.java结尾的文件，模糊匹配的方式。）</li></ul><h2 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h2><p>删除目录的时候，必须添加-r参数，这个-r表示删除一个目录，或者递归删除目录下的所有子目录以及子文件。<br>rm -r x（删除当前目录下的x目录，以及x目录下所有的子目录），但是这种方式需要用户自己输入y进行确认删除。<br>rm -rf x （强行删除x目录以及x目录下所有的子目录，并且不询问。包括子文件也全部删除。）</p><h2 id="文件拷贝"><a href="#文件拷贝" class="headerlink" title="文件拷贝"></a>文件拷贝</h2><p>cp a.txt aa.txt（复制当前目录下的a.txt文件，粘贴到当前目录下并且生成新文件aa.txt）</p><p>语法如下：</p><ul><li>cp file1 file2</li><li>file1就是被拷贝的文件</li><li>file2就是粘贴之后的文件</li><li>file1和file2可以添加路径。</li><li>cp 被拷贝文件的路径 粘贴到哪里的路径</li></ul><p>cp Hello2.java a/Hello3.java</p><h2 id="目录拷贝"><a href="#目录拷贝" class="headerlink" title="目录拷贝"></a>目录拷贝</h2><p>cp 目录名1 目录名2</p><ul><li>目录名1 是拷贝源</li><li>目录名2 是拷贝到哪里</li></ul><p>-rf （-r递归拷贝，-f强行拷贝）</p><p>cp -rf a abc（将当前目录下的a目录拷贝到当前目录下的abc目录当中）</p><p>cp -rf /home/powernode/a /home/powernode/x （将/home/powernode/a目录拷贝到/home/powernode/x目录下）</p><h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><p>mv Hello.java x（将当前目录下的Hello.java文件移动到x目录下）</p><p>mv /home/bjpowernode/Hello2.java /home/bjpowernode/x （将/home/bjpowernode/Hello2.java 移动到 /home/bjpowernode/x目录下）</p><p>mv x f（将x目录移动到f目录下）</p><h2 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h2><p>在CentOS中，可以使用以下方式进行文件搜索：</p><ol><li>find命令：使用find命令可以在指定目录下搜索文件。可以使用不同的选项来指定搜索的文件类型、大小、修改时间等条件。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /usr/local -name &quot;catalina.out&quot;</span><br></pre></td></tr></table></figure><ol><li>whereis命令：使用whereis命令可以在系统中搜索指定的命令的位置。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis startup.sh</span><br></pre></td></tr></table></figure><ol><li>which命令：使用which命令也可以在系统中搜索指定的命令的位置。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which command</span><br></pre></td></tr></table></figure><h2 id="文件的inode号"><a href="#文件的inode号" class="headerlink" title="文件的inode号"></a>文件的inode号</h2><p>在Linux操作系统中，每一个文件都有自己的身份证号：inode号（index node：索引节点号）<br>每个文件都有自己的inode号，并且不会重复，在Linux操作系统中通过inode来区分两个文件。<br>查看文件的inode号：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -i HelloWorld.java</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/article/4abf40fe4336fb8ee6aa82c371e5fc77645325325.png" alt="image.png">​</p><h1 id="软链接与硬链接"><a href="#软链接与硬链接" class="headerlink" title="软链接与硬链接"></a>软链接与硬链接</h1><h2 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h2><p>软链接类似于windows操作系统中的快捷方式。</p><p>软链接的作用：方便操作。快捷。。。有些经常被操作的文件，藏的很深，每一次找很麻烦，怎么办，可以给这些经常操作的文件创建软链接。通过软链接快捷的操作目标文件。</p><p>怎么创建软链接呢（在linux当中怎么创建快捷方式呢）？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s HelloWorld.java HelloWorld.java2</span><br></pre></td></tr></table></figure><ul><li>表示给hello.java文件创建一个hello2.java的快捷方式（软链接）</li><li>hello.java是目标文件。hello2.java文件是软链接，属于快捷方式</li></ul><p>软链接和目标文件实际上是两个文件，在软链接中存储的是目标文件的路径。软链接关联的目标文件如果被删除，软链接这个快捷方式也就失效了。<br>可以通过查看inode号，来证明软链接是两个不同的文件：<br>​<img src="https://i0.hdslb.com/bfs/article/128750097ccb31a72d0938dd08818365645325325.png" alt="image.png">​</p><h2 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h2><p>怎么创建硬链接？（把软链接创建过程中的 -s 去掉就是创建硬链接的语法。）</p><p>创建硬链接的语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln HelloWorld.java HelloWorld.java2</span><br></pre></td></tr></table></figure><p>通过测试得知：inode号一致，说明创建的硬链接和原文件是同一个文件。<br><img src="https://i0.hdslb.com/bfs/article/b0b7bbdf6e0bae52be886703723318df645325325.png" alt="image.png"></p><p>通过操作硬链接，目标文件会改变吗？操作目标文件，硬链接会改变吗？ 答案是：当然会。</p><p>硬链接的特点：</p><ul><li>主要是用来做：重要文件备份。</li><li>目标文件删除之后，硬链接只要在，文件其实就没有被删除。或者说硬链接删除之后，目标文件还在。总结一句话：目标文件或者硬链接只要有一个存在，文件就没有被真正的删除。</li><li>硬链接机制和复制粘贴还不一样，复制粘贴之后的文件，修改其中之一，另一个不会变，但是硬链接就不一样了。</li></ul><h1 id="文件压缩与解压缩"><a href="#文件压缩与解压缩" class="headerlink" title="文件压缩与解压缩"></a>文件压缩与解压缩</h1><p>tar是在linux系统当中完成压缩和解压缩的命令。<br>压缩后的文件又被称为<strong>归档文件</strong>。</p><h2 id="tar命令详解"><a href="#tar命令详解" class="headerlink" title="tar命令详解"></a>tar命令详解</h2><p>tar命令语法格式： tar 参数 要压缩的或解压的文件或目录<br>tar命令的常用参数：</p><ul><li>z：指定是否使用gzip压缩方式压缩。（扩展名通常为：tar.gz。特点：速度最快）</li><li>j：是否需要用 bzip2 压缩方式压缩。（扩展名通常为：tar.bz2。特点：体积最小）</li><li>c：创建压缩（create）</li><li>x：解压缩</li><li>v：是否在压缩的过程中显示文件</li><li>f：指定归档文件名（file）。f参数后面必须紧跟文件名，不能在f参数后面再加其他参数。</li><li>t：查看 tarfile 里面的文件</li><li>C：指定解压到的具体目录。注意是大写C。</li></ul><p>注意：c、x、t，这三个参数不能共存，只能出现一个。</p><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><p>压缩一个文件</p><ul><li>tar -zcvf mytxt.tar.gz log1.txt</li></ul><p>压缩多个文件</p><ul><li>tar -zcvf mytxt2.tar.gz log1.txt log2.txt log3.txt</li><li>tar -zcvf mytxt3.tar.gz *.txt</li></ul><p>压缩目录</p><ul><li>tar -zcvf mytxt4.tar.gz test 【将test目录压缩为mytxt4.tar.gz】</li></ul><h2 id="查看归档文件"><a href="#查看归档文件" class="headerlink" title="查看归档文件"></a>查看归档文件</h2><ul><li>tar -tf mytxt.tar.gz</li></ul><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>tar -zxvf mytxt.tar.gz 【解压到当前目录下】<br>tar -zxvf mytxt.tar.gz -C test【将mytxt.tar.gz压缩包解压到test目录】</p><h1 id="文件编辑vi-amp-vim"><a href="#文件编辑vi-amp-vim" class="headerlink" title="文件编辑vi &amp; vim"></a>文件编辑vi &amp; vim</h1><h2 id="vi与vim概述"><a href="#vi与vim概述" class="headerlink" title="vi与vim概述"></a>vi与vim概述</h2><p>vi 和 vim 都是在 Linux 和 Unix 中常用的基于字符终端的文本编辑器。<br>vi 是 Unix 早期提供的标准命令行下的文本编辑器，是一款非常强大、高效的编辑器，可以对文本进行快速修改和编辑，具有常见编辑器的基本功能。<br>vim（Vi Improved）是在vi基础上进行了改进和扩展的一个版本，它保留了vi的全部功能，并添加了许多新功能，如基本的 GUI 界面、语法高亮、多级撤销/重做、对齐、插件支持等等。可以说 vim 是强大的文本编辑器之一，被众多的开发者、管理员、写作人员和爱好者使用。<br>通过 vi 和 vim 命令，我们可以在终端中打开并编辑文本文件，进行各种修改和编辑，保存后退出，是 Linux 和 Unix 系统中非常基础、常用的一种文本编辑方式。<br>总之，vi 和 vim 均是一款 Linux 和 Unix 中常用的基于字符终端的文本编辑器，其中 vim 是在 vi 基础上进行了改进和扩展的版本。</p><p>在 CentOS 中，系统默认安装的是 vim 编辑器，但是为了兼容 vi 编辑器的使用习惯，CentOS 将 vim 的执行文件命名为 vi。因此，实际上在 CentOS 中使用 vi 和 vim 是等价的，都是使用 vim 编辑器进行文本编辑。</p><h2 id="vi-编辑器使用"><a href="#vi-编辑器使用" class="headerlink" title="vi 编辑器使用"></a>vi 编辑器使用</h2><p>第一步：使用vi编辑器打开文件，语法：vi 文件的路径</p><ul><li>vi Hello.java（打开当前路径下的Hello.java）</li><li>vi /home/bjpowernode/Hello.java（打开/home/bjpowernode目录下的Hello.java文件。）</li></ul><p>第二步：编辑文件（vi编辑器为用户准备了两个模式）</p><ul><li>第一个模式：命令行模式。（此时键入的都是命令）</li><li>第二个模式：编辑模式。（此时键入的内容都会写入文件）</li><li>进入vi编辑器时是命令模式：键入i命令进入编辑模式</li><li>从编辑模式回到命令模式：按一下esc键</li></ul><p>第三步：保存。在命令模式下，输入以下命令：</p><ul><li>:wq  这是一个命令，这个命令可以保存并退出。</li><li>:q! 这是一个命令，这个命令可以强行退出vi编辑器，并且不保存。</li></ul><p>注意：vi编辑器打开的文件如果不存在，则自动新建。</p><h2 id="vi编辑器常用命令"><a href="#vi编辑器常用命令" class="headerlink" title="vi编辑器常用命令"></a>vi编辑器常用命令</h2><p>dd：删除光标所在行<br>yy：复制光标所在行到缓冲区<br>p：粘贴缓冲区中的内容<br>gg：光标回到文件第一行<br>GG：光标回到文件最后一行<br>^ ：光标移动至当前行的行首<br>$ ：光标移动至当前行的行尾<br>/关键字：按斜杠/键，可以输入想搜索的字符，然后确定进行搜索，如果第一次查找的关键字不是想要的，可以一直按 n 键往后查找到想要的关键字为止<br>o命令：在下一行插入。<br>x命令：命令行模式下，x命令会删除单个字符。<br>a命令：在光标后面插入。</p><h1 id="nano编辑器"><a href="#nano编辑器" class="headerlink" title="nano编辑器"></a>nano编辑器</h1><p>nano编辑器相对于vi编辑器来说出现的较晚，1999年诞生。vi编辑器时1976年诞生。nano编辑器更加简单一些。<br>以下是nano常用的快捷键，这些快捷键多数是无法在windows环境下使用的，也就是说在xshell中无法使用，因为和windows很多快捷键是冲突的，在linux环境中可以用：</p><ol><li>打开文件：nano Test.java</li><li>保存文件：ctrl + o</li><li>退出nano：ctrl + x</li><li>选中多个字符：shift + 左方向/右方向</li><li>剪切：ctrl + k</li><li>粘贴：ctrl + u</li><li>搜索：ctrl + w</li><li>替换：ctrl + \</li><li>复制选中的：alt + 6</li><li>撤销：alt + u</li><li>重做：alt + e</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第1章 环境准备</title>
      <link href="/posts/1210.html"/>
      <url>/posts/1210.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><div class="tip info faa-horizontal animated"><p>自由看似条条框框但是总有一笔出头，牢笼看着透风却被罩住了头</p></div><p><a href="https://www.bilibili.com/video/BV1Nb421a7TV/?spm_id_from=333.999.list.card_archive.click"><br>    <img style="border: 1.5px solid #cbcbcb !important; max-width: 90%;"        src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/20240815134316.png"></a></p><h1 id="Linux-概述"><a href="#Linux-概述" class="headerlink" title="Linux 概述"></a>Linux 概述</h1><h2 id="常见的操作系统"><a href="#常见的操作系统" class="headerlink" title="常见的操作系统"></a>常见的操作系统</h2><p>操作系统可以分为多种类型，包括但不限于以下几种：</p><ol><li>Windows 操作系统：由微软公司开发的操作系统，广泛应用于个人电脑、服务器、游戏机等设备中。</li><li>win xp</li><li>win7/win8/win10/win11 等</li><li>Unix 操作系统（1960 年代诞生）：由贝尔实验室开发的一类操作系统，主要应用于服务器、工作站、超级计算机等领域，具有稳定、安全等特点。</li><li>Solaris：SUN 公司开发</li><li>AIX：IBM 开发</li><li>HP-UX：惠普公司开发</li><li>macOS：苹果公司开发，主要应用于苹果公司的电脑和笔记本电脑上</li><li>……</li><li><p>Linux 操作系统（1991 年诞生）：<strong>Linux 操作系统是一种开源的、免费的、类 UNIX 操作系统，用于服务器、工作站、超级计算机等领域。</strong></p></li><li><p>Debian：一种流行的稳定 Linux 操作系统</p></li><li><p>Ubuntu：基于 Debian 构建的一种流行的 Linux 桌面操作系统</p></li><li><p>Red Hat：一种商业 Linux 操作系统，由 Red Hat 公司开发</p></li><li><p>CentOS：通过重新编译 Red Hat 而得到的 Linux 操作系统，免费且源代码开放</p></li><li><p>Fedora：由 Red Hat 公司赞助的基于开源的 Linux 桌面和服务器操作系统</p></li><li><p>……</p></li><li><p>Chrome OS 操作系统：由 Google 公司开发的基于 Chrome 浏览器的操作系统，主要应用于 Chromebook 笔记本电脑上。</p></li><li><p>Android 操作系统：由 Google 公司开发的操作系统，主要应用于手机、平板电脑等移动设备中。</p></li><li><p>iOS 操作系统：由苹果公司开发的操作系统，主要应用于 iPhone、iPad 等移动设备中。</p></li><li><p>HarmonyOS 鸿蒙也是一种操作系统，由华为公司自主开发。</p></li></ol><p>‍</p><p>总之，不同的操作系统在不同的领域和设备中有各自的应用，针对不同的应用场景和需求，可以选择不同的操作系统进行应用和开发。</p><h2 id="Linux-发展史"><a href="#Linux-发展史" class="headerlink" title="Linux 发展史"></a>Linux 发展史</h2><p>Linux 操作系统的历史可以追溯到 1991 年，当时 Linus Torvalds（林纳斯·托瓦兹） 是一名芬兰赫尔辛基大学的学生，并且对 MINIX，一种类 UNIX 操作系统，感到不满意。他开始编写自己的操作系统内核，最终发布了第一个版本，命名为 Linux。从此，Linux 这个开源、自由和可定制化的操作系统内核就开始了它的发展之旅。</p><p><img src="https://i0.hdslb.com/bfs/article/0600441c59d3f76a09e43bd835c9db14645325325.png" alt="image.png"></p><p>以下是 Linux 操作系统的发展史中一些重要的时间节点和里程碑：</p><ul><li>1991 年：Linus Torvalds 发布 Linux 内核的第一个版本。</li><li>1992 年：大量的程序员和开发者开始参与到 Linux 的开发中，这使得 Linux 开始迅速发展，不断壮大。</li><li>1993 年：Debian（第一个社区驱动的 Linux 发行版）出现。</li><li>1994 年：Red Hat（最著名的商业 Linux 发行版）成立。Linux 社区也制定了第一个 Linux 标准基准（Linux Standard Base 1.0）。</li><li>1995 年：KDE 和 GNOME 两个桌面环境诞生。这标志着 Linux 开始关注桌面应用以及用户友好度。</li><li>1996 年：Apache 服务器成为主流 Web 服务器。</li><li>2003 年：SuSE 成为 Novell 公司的一部分，这是 Linux 巨头中第一家被收购的公司。</li><li>2008 年：Google 发布基于 Linux 的 Android 操作系统。</li><li>2011 年：Linux 内核 3.0 发布，该版本具有更好的性能、支持新的硬件技术和文件系统。</li><li>2015 年：微软宣布支持 Linux，并将一些 Linux 工具整合到他们的操作系统 Windows 10 中。</li><li>2018 年：Red Hat 被 IBM 收购，该交易是迄今为止 Linux 社区中最大的交易之一。</li><li>2020 年：Linux 内核 5.10 发布，具有改进的性能、新的安全功能和更好的硬件支持。</li></ul><p>总之，Linux 操作系统的发展史充满了许多令人惊叹的里程碑。它已成为了供应商和开发者的首选操作系统，全世界各个组织和机构都在使用 Linux 以及基于 Linux 的解决方案。</p><h1 id="安装-VMware"><a href="#安装-VMware" class="headerlink" title="安装 VMware"></a>安装 VMware</h1><p>安装 VMware 17。通过这个软件可以新建虚拟机。然后我们可以在虚拟机上安装操作系统 CentOS。<br><strong>第一步：双击安装</strong><br><img src="https://i0.hdslb.com/bfs/article/418d1c9390372740c2c5dd43289fd9d8645325325.png" alt="image.png"><br>可能会出现以下弹窗：弹窗后重启即可。<br><img src="https://i0.hdslb.com/bfs/article/89fce349dad95e6373fecce3efa51bd6645325325.png" alt="image.png"></p><p><img src="https://i0.hdslb.com/bfs/article/0f0aa028d1afe1e23c2d03aacb7f79cb645325325.png" alt="image.png"><br><strong>第二步：点击上图下一步，选择接受协议</strong><br><img src="https://i0.hdslb.com/bfs/article/06bd4feb2a4a50b841938d2fd37a671c645325325.png" alt="image.png"></p><p><strong>第三步：点击上图下一步</strong><br>​<img src="https://i0.hdslb.com/bfs/article/e29715a407f4c516e094800d7e60787d645325325.png" alt="image.png"><br><strong>第四步：点击上图下一步</strong><br>​<img src="https://i0.hdslb.com/bfs/article/aed23e36108fa75d4f3d3761191a92bc645325325.png" alt="image.png">​</p><p><strong>第五步：点击上图下一步</strong><br>​<img src="https://i0.hdslb.com/bfs/article/9307bbfbb5fd8dbc2738a8ffe3f0a1a7645325325.png" alt="image.png"><br><strong>第六步：点击上图下一步</strong><br>​<img src="https://i0.hdslb.com/bfs/article/bf07742f2de72cb626c005a499affa86645325325.png" alt="image.png">​</p><p><strong>第七步：点击安装</strong><br>​<img src="https://i0.hdslb.com/bfs/article/44ec549e37e50c2042e9ebd26d77c54b645325325.png" alt="image.png"><br>​<img src="https://i0.hdslb.com/bfs/article/5365fd9449914e70a62d38ea328e60ec645325325.png" alt="image.png">​</p><p><strong>第八步：点击完成，桌面上图标</strong><br>​<img src="https://i0.hdslb.com/bfs/article/1fd771fbbd16cbfe3668628b5d0daf0b645325325.png" alt="image.png"><br>到此虚拟机这个软件就安装成功了！！！！<br><strong>注意：该软件需要输入密钥，大家自己想办法获取，这个很容易的。</strong></p><p>‍</p><h1 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h1><p>虚拟机软件安装成功之后，就可以新建虚拟机了。一个虚拟机软件可以创建多个虚拟机，一个虚拟机就代表一台新的电脑。新建虚拟机的过程就相当于去电脑商城购买电脑是一样的。<br><strong>第一步：双击桌面图标，打开虚拟机软件，点击下图中的创建新的虚拟机</strong><br><img src="https://i0.hdslb.com/bfs/article/bdee02991d08bd7a67798d8d2d3e9b2d645325325.png" alt="image.png"><br><strong>第二步：选择自定义安装。了解更详细的过程</strong><br><img src="https://i0.hdslb.com/bfs/article/cbb05a69d5a80b69a63d9bac2c307dc2645325325.png" alt="image.png"></p><p><strong>第三步：选择硬件兼容性（默认选项即可）</strong><br>​<img src="https://i0.hdslb.com/bfs/article/cde8612c6cb95fb0262f6d47c6e87b52645325325.png" alt="image.png">​</p><p><strong>第四步：稍后安装操作系统，只创建一台裸机</strong><br>​<img src="https://i0.hdslb.com/bfs/article/aadeabeec21608fac44c8906b9dd42d0645325325.png" alt="image.png"><br><strong>第五步：选择操作系统类型</strong><br>​<img src="https://i0.hdslb.com/bfs/article/2958b55f6672ffc24cbe6ac34fc2a2e7645325325.png" alt="image.png">​</p><p><strong>第六步：给你的电脑起个名字，还有它放在哪里</strong><br>​<img src="https://i0.hdslb.com/bfs/article/e4adee7574cfdc2f80aa791e3fe9fce2645325325.png" alt="image.png"><br><strong>第七步：设置电脑的 CPU 数量</strong><br>​<img src="https://i0.hdslb.com/bfs/article/2d35a35909d79ec8fa05fd6fbe6b7d5d645325325.png" alt="image.png">​</p><p><strong>第八步：设置内存大小</strong><br>​<img src="https://i0.hdslb.com/bfs/article/1bfb502cf4d68d681c7f2757fef16a6c645325325.png" alt="image.png">​</p><p><strong>第九步：指定网络连接方式为 NAT</strong><br>​<img src="https://i0.hdslb.com/bfs/article/f6000e113ea97e584a2c0ae16f664d5d645325325.png" alt="image.png">​</p><p>在创建虚拟机时，网络连接模式有桥接模式和 NAT 模式，应该根据个人实际需求来选择。</p><ul><li>桥接模式：虚拟机会直接接入宿主机网络中，相当于虚拟机相当于网络中的一个普通计算机，有自己的 ip 地址和 MAC 地址，可以访问网络上其他的设备。适用于需要虚拟机与宿主机处于同一网段的场景，如测试、网络应用开发等。</li><li>NAT 模式：虚拟机通过虚拟化的 NAT 网络与宿主机连接，宿主机向虚拟机提供网络访问能力，虚拟机之间不能相互访问。NAT 模式适用于虚拟机需要访问外部网络，但只有一个公共 IP 地址的情况下使用。</li></ul><p>总之，根据个人实际需求来选择适合自己的网络连接模式，有需要虚拟机与宿主机处于同一网段的情况选桥接模式，有需要虚拟机访问外部网络的情况选 NAT 模式。</p><p>‍</p><p><strong>第十步：选择 IO 控制器类型（默认即可）</strong><br><img src="https://i0.hdslb.com/bfs/article/966c115674837a63dd101d7e4655b54a645325325.png" alt="image.png"><br><strong>第十一步：选择硬盘类型（默认即可）</strong><br><img src="https://i0.hdslb.com/bfs/article/ef5d14bc9b26dfea3b81dc6bd7054bc7645325325.png" alt="image.png"></p><p><strong>第十二步：选择创建新的虚拟磁盘</strong><br>​<img src="https://i0.hdslb.com/bfs/article/c92a40511576da222a5f0b8b743ab355645325325.png" alt="image.png"><br><strong>第十三步：指定硬盘容量</strong><br>​<img src="https://i0.hdslb.com/bfs/article/80a62f56840d5e84f9132ef937adf1e6645325325.png" alt="image.png">​</p><p><strong>第十四步：指定硬盘对应的文件</strong><br>​<img src="https://i0.hdslb.com/bfs/article/4516e3b090a1f12f50b7a47a5e57e9dd645325325.png" alt="image.png"><br><strong>第十五步：已准备好，查看电脑的配置，感觉不行的话，可以点击下图自定义硬件进行修改配置。</strong><br>​<img src="https://i0.hdslb.com/bfs/article/d04e086cca89a465521cbffafb169dd8645325325.png" alt="image.png">​</p><p><strong>第十六步：点击完成</strong><br>​<img src="https://i0.hdslb.com/bfs/article/e59f5d8fc2e2e9693313413b1d1b5abd645325325.png" alt="image.png"><br>到此为止相当于你已经购买了一台新电脑了，只不过这个电脑中还没有任何操作系统，只是一台裸机。接下来你需要安装操作系统。</p><p>‍</p><h1 id="安装操作系统"><a href="#安装操作系统" class="headerlink" title="安装操作系统"></a>安装操作系统</h1><p>安装操作系统之前，你需要先下载这个操作系统的镜像文件：<br><img src="https://i0.hdslb.com/bfs/article/caeeae28baf93594cacaefdea3ec7c9d645325325.png" alt="image.png"><br>这个文件其实就相当于现实生活中的系统盘（光盘）。把这个文件放到虚拟机的 DVD 当中：<br><img src="https://i0.hdslb.com/bfs/article/79f0da39c65b647ac36b39f53fd1f67d645325325.png" alt="image.png"><br><img src="https://i0.hdslb.com/bfs/article/57722227cc95e80b6e94c0a5f30ac2fc645325325.png" alt="image.png"></p><p>点击确定，如下图：<br>​<img src="https://i0.hdslb.com/bfs/article/796518e5ed7879cf7f17927e6c877c41645325325.png" alt="image.png"><br>接下来点击：开启此虚拟机（相当于现实生活中电脑通电）：<br>​<img src="https://i0.hdslb.com/bfs/article/56ced699a338c3550c682192f83d1828645325325.png" alt="image.png"><br>按照下面一步一步安装操作系统：<br>按上下键，移动到：Install CentOS Stream 9，然后回车。<br><strong>注意：从虚拟机中释放鼠标的组合键是 ctrl + alt</strong><br>​<img src="https://i0.hdslb.com/bfs/article/f1ec35985453268fcce11092fcd95403645325325.png" alt="image.png">​</p><p>正在安装：<br>​<img src="https://i0.hdslb.com/bfs/article/8ca013afd3a6bc2c25f480adbf121117645325325.png" alt="image.png"><br>语言选择：简体中文，英文不错的话，可以使用英文，都可以<br>​<img src="https://i0.hdslb.com/bfs/article/db4e3ba5fcb7202690dfa36123d5e1fa645325325.png" alt="image.png">​</p><p>接下来，要处理三件事：<br>第一个：安装目的地<br>第二个：设置 root 密码<br>第三个：软件选择<br>​<img src="https://i0.hdslb.com/bfs/article/aaa40337c5366defcfdab1d2c1f1c1d2645325325.png" alt="image.png"><br>安装目的地，默认即可，点击完成：<br>​<img src="https://i0.hdslb.com/bfs/article/562c9dc47af820381c4d9fd93e27db3a645325325.png" alt="image.png"><br>设置 root 密码时允许 root 远程 SSH 登录：<br>​<img src="https://i0.hdslb.com/bfs/article/e795fcd5028d7bebf2e9a2d859c1f99b645325325.png" alt="image.png">​</p><p>软件选择：<br>​<img src="https://i0.hdslb.com/bfs/article/92834c5b2b42508caeb1870dcb369817645325325.png" alt="image.png"><br>点击开始安装：<br>​<img src="https://i0.hdslb.com/bfs/article/a670b8cc72b9e6ee5123a3e41fcc3531645325325.png" alt="image.png">​</p><p>安装中，请稍后：<br>​<img src="https://i0.hdslb.com/bfs/article/aa13b35606e774c550a58407c3d3b995645325325.png" alt="image.png"><br>安装完成后，点击右下角的重启系统即可！！！</p><p>‍</p><h1 id="配置操作系统"><a href="#配置操作系统" class="headerlink" title="配置操作系统"></a>配置操作系统</h1><p>点击下图的开始配置：<br><img src="https://i0.hdslb.com/bfs/article/8de23f9097da076bcab851f55890129e645325325.png" alt="image.png"><br>设置定位服务，这属于隐私，可以打开，也可以关闭：<br><img src="https://i0.hdslb.com/bfs/article/594150724a0851d621ff02c85a6fb978645325325.png" alt="image.png"></p><p>设置在线账号，这里跳过：<br>​<img src="https://i0.hdslb.com/bfs/article/e3bfe296cf034e033bbaef33fe9d5dad645325325.png" alt="image.png">​</p><p>这是开启除了 root 管理员之外，开启的其他账户：<br>​<img src="https://i0.hdslb.com/bfs/article/1ae2e3c1563197bf4744fa5bfe14020c645325325.png" alt="image.png"><br>设置密码：<br>​<img src="https://i0.hdslb.com/bfs/article/4d91a5fa9e1acbe937db0ad1cf4979b5645325325.png" alt="image.png">​</p><p>完成，点击开始使用：<br>​<img src="https://i0.hdslb.com/bfs/article/65839dd9cc15cb99ce25effda3c75cb8645325325.png" alt="image.png"><br>记得查看一下网络是否正常：<br>​<img src="https://i0.hdslb.com/bfs/article/a7134a6a611fd21ddae08bb531159e32645325325.png" alt="image.png">​</p><p>‍</p><h1 id="xshell-的安装与使用"><a href="#xshell-的安装与使用" class="headerlink" title="xshell 的安装与使用"></a>xshell 的安装与使用</h1><p>Xshell 是一款用于在本地计算机上远程连接到服务器，并进行命令操作，文件管理等功能的 SSH 客户端软件。<br><strong>在 Xshell 中编写 Linux 命令和在 Linux 系统中的终端上编写命令是一样的。</strong></p><h2 id="xshell-的安装"><a href="#xshell-的安装" class="headerlink" title="xshell 的安装"></a>xshell 的安装</h2><p>第一步：双击安装<br><img src="https://i0.hdslb.com/bfs/article/164bf5ffe84da1dc61f29d1fec053fcb645325325.png" alt="image.png"><br><img src="https://i0.hdslb.com/bfs/article/838930d10ee65b4b5b02785c01a41354645325325.png" alt="image.png"></p><p>第二步：点击下一步<br><img src="https://i0.hdslb.com/bfs/article/fa8d9d758d176d0109cb928055219303645325325.png" alt="image.png"></p><p>第三步：接受许可证协议<br><img src="https://i0.hdslb.com/bfs/article/dd15c89aa6420360f97b331d73a52697645325325.png" alt="image.png"></p><p>‍</p><p>第四步：选择安装位置<br><img src="https://i0.hdslb.com/bfs/article/67b3d7f13e9d2e04099f3dfbb69a4565645325325.png" alt="image.png"></p><p>第五步：选择程序文件夹<br><img src="https://i0.hdslb.com/bfs/article/fde19a4ae0e9ec47905f7097f3c90534645325325.png" alt="image.png"></p><p>‍</p><p>第六步：安装<br><img src="https://i0.hdslb.com/bfs/article/74b29bc311d3f719550cf02bbd061d15645325325.png" alt="image.png"></p><p>‍</p><p>第七步：完成<br><img src="https://i0.hdslb.com/bfs/article/afffe266d3d47682ba134d5bfafd8294645325325.png" alt="image.png"><br><img src="https://i0.hdslb.com/bfs/article/aa43772c7283d1f46bf4c013122675bb645325325.png" alt="image.png"></p><p>‍</p><h2 id="xshell-的使用"><a href="#xshell-的使用" class="headerlink" title="xshell 的使用"></a>xshell 的使用</h2><p>第一步：使用终端的 ifconfig 命令查看服务器的 IP 地址：<br><img src="https://i0.hdslb.com/bfs/article/bd1ac7dc9bbbad651a3d68c28164e975645325325.png" alt="image.png"></p><p>第二步：新建会话<br>​<img src="https://i0.hdslb.com/bfs/article/2dd7eec2859a92b3fe3ba00c5fd5ed44645325325.png" alt="image.png">​</p><p>第三步：设置连接属性<br>​<img src="https://i0.hdslb.com/bfs/article/03e79c75f2be5541e34104151ef671be645325325.png" alt="image.png">​</p><p>第四步：设置用户身份验证<br>​<img src="https://i0.hdslb.com/bfs/article/0bdc9de48caa966607a751cddca21706645325325.png" alt="image.png">​</p><p>第五步：设置外观<br>​<img src="https://i0.hdslb.com/bfs/article/e13136516c69d91891ff01e998195b74645325325.png" alt="image.png">​</p><p>第六步：接受并保存（安全警告）<br>​<img src="https://i0.hdslb.com/bfs/article/c1408068556888ddcb9d6478d910e8a0645325325.png" alt="image.png">​</p><p>使用 xshell 就像在使用终端是一样的。</p><p>‍</p><h1 id="xftp-的安装与使用"><a href="#xftp-的安装与使用" class="headerlink" title="xftp 的安装与使用"></a>xftp 的安装与使用</h1><p>Xftp 是一款功能强大的 Windows 环境下的 FTP 客户端软件，用于在本地计算机与远程 FTP 服务器之间进行文件传输。</p><h2 id="xftp-的安装"><a href="#xftp-的安装" class="headerlink" title="xftp 的安装"></a>xftp 的安装</h2><p>第一步：双击安装包<br><img src="https://i0.hdslb.com/bfs/article/d9d322c759d6a7ed12f24f0cbee6ff34645325325.png" alt="image.png"><br><img src="https://i0.hdslb.com/bfs/article/787cd0f97c61957866bf8aa78574169a645325325.png" alt="image.png"></p><p>第二步：接受协议<br><img src="https://i0.hdslb.com/bfs/article/4e8b9775d8ac3ac1d672dcdeb0f09a48645325325.png" alt="image.png"></p><p>‍</p><p>第三步：设置安装位置<br><img src="https://i0.hdslb.com/bfs/article/c4132c6c9fa7cab6877e1ce4ff910d90645325325.png" alt="image.png"></p><p>第四步：选择程序文件夹<br><img src="https://i0.hdslb.com/bfs/article/498575fc2cfa8ae7d4ee7cbb9e62f35e645325325.png" alt="image.png"></p><p>‍</p><p>第五步：完成<br><img src="https://i0.hdslb.com/bfs/article/968430fbf8dcc02acf2edf3c6f6b8ca1645325325.png" alt="image.png"></p><p>‍</p><h2 id="xftp-的使用"><a href="#xftp-的使用" class="headerlink" title="xftp 的使用"></a>xftp 的使用</h2><p>第一步：新建会话<br><img src="https://i0.hdslb.com/bfs/article/1ad03b167d459966dfcc6f4b2b0c11cf645325325.png" alt="image.png"><br><img src="https://i0.hdslb.com/bfs/article/18b452fa26d80ab228b99f3c4d6519c5645325325.png" alt="image.png"></p><p>‍</p><p>第二步：接受并保存<br><img src="https://i0.hdslb.com/bfs/article/555ba54f90c8aaa12aafc2174de3774e645325325.png" alt="image.png"></p><p>第三步：拖拽上传<br><img src="https://i0.hdslb.com/bfs/article/9503e983e6151777553c6a6d6b51d3c1645325325.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA安装后的设置</title>
      <link href="/posts/5109.html"/>
      <url>/posts/5109.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p><img src="https://i0.hdslb.com/bfs/article/550ed5f2d7d4a3e4486d6af342e9331d645325325.png" alt="">​</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p><img src="https://i0.hdslb.com/bfs/article/ee854b4088f0c221272f7498c445703a645325325.png" alt="">​</p><h2 id="第三部"><a href="#第三部" class="headerlink" title="第三部"></a>第三部</h2><p><img src="https://i0.hdslb.com/bfs/article/f91ae7aeac3307075e94b5fe05ceba11645325325.png" alt="">​</p><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p><img src="https://i0.hdslb.com/bfs/article/396d5c4d3338f61b445b8cfeaf7bbc55645325325.png" alt="">​</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK 1.8 的安装</title>
      <link href="/posts/47295.html"/>
      <url>/posts/47295.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p>地址：<a href="https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html</a></p><h1 id="jdk？jre？jvm？"><a href="#jdk？jre？jvm？" class="headerlink" title="jdk？jre？jvm？"></a>jdk？jre？jvm？</h1><ul><li>Java development kit             java开发工具包  jdk</li><li>Java Runtime Environment  java运行环境  jre</li><li>Java Virtual Machine              java虚拟机  jvm</li></ul><h1 id="jdk安装方法：以下可以用来复制粘贴"><a href="#jdk安装方法：以下可以用来复制粘贴" class="headerlink" title="jdk安装方法：以下可以用来复制粘贴"></a>jdk安装方法：以下可以用来复制粘贴</h1><h2 id="1-新建系统变量：JAVA-HOME"><a href="#1-新建系统变量：JAVA-HOME" class="headerlink" title="1.新建系统变量：JAVA_HOME"></a>1.新建系统变量：JAVA_HOME</h2><p>路径取jdk路径</p><p><strong>E:\xxx\jdk1.8</strong></p><h2 id="2-在系统变量Path后面追加"><a href="#2-在系统变量Path后面追加" class="headerlink" title="2.在系统变量Path后面追加"></a>2.在系统变量Path后面追加</h2><p>%JAVA_HOME%\bin</p><p>%JAVA_HOME%\jre\bin</p><h2 id="3-添加classpath"><a href="#3-添加classpath" class="headerlink" title="3. 添加classpath"></a>3. 添加classpath</h2><p>CLASSPATH</p><p>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</p><h2 id="4-验证"><a href="#4-验证" class="headerlink" title="4. 验证"></a>4. 验证</h2><ul><li>javac -version</li><li>javac 1.8.0_241</li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VM 注册使用</title>
      <link href="/posts/32514.html"/>
      <url>/posts/32514.html</url>
      
        <content type="html"><![CDATA[<h2 id="VMware-Workstation-17-Pro-密钥"><a href="#VMware-Workstation-17-Pro-密钥" class="headerlink" title="VMware Workstation 17 Pro 密钥"></a>VMware Workstation 17 Pro 密钥</h2><ul><li>4A4RR-813DK-M81A9-4U35H-06KND</li><li>NZ4RR-FTK5H-H81C1-Q30QH-1V2LA</li><li>JU090-6039P-08409-8J0QH-2YR7F</li><li>4Y09U-AJK97-089Z0-A3054-83KLA</li><li>4C21U-2KK9Q-M8130-4V2QH-CF810</li><li>MC60H-DWHD5-H80U9-6V85M-8280D</li><li>ZA30U-DXF84-4850Q-UMMXZ-W6K8F</li><li>AC590-2XW97-48EFZ-TZPQE-MYHEA</li><li>YF39K-DLFE5-H856Z-6NWZE-XQ2XD</li><li>AC15R-FNZ16-H8DWQ-WFPNV-M28E2</li><li>CZ1J8-A0D82-489LZ-ZMZQT-P3KX6</li><li>YA11K-6YE8H-H89ZZ-EXM59-Y6AR0</li></ul><h2 id="VMware-Workstation16-密钥："><a href="#VMware-Workstation16-密钥：" class="headerlink" title="VMware Workstation16 密钥："></a>VMware Workstation16 密钥：</h2><ul><li>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</li><li>YF390-0HF8P-M81RQ-2DXQE-M2UT6</li><li>ZF71R-DMX85-08DQY-8YMNC-PPHV8</li></ul><h2 id="VMware-Workstation-Pro-15-激活许可证："><a href="#VMware-Workstation-Pro-15-激活许可证：" class="headerlink" title="VMware Workstation Pro 15 激活许可证："></a>VMware Workstation Pro 15 激活许可证：</h2><ul><li>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</li><li>VF750-4MX5Q-488DQ-9WZE9-ZY2D6</li><li>UU54R-FVD91-488PP-7NNGC-ZFAX6</li><li>YC74H-FGF92-081VZ-R5QNG-P6RY4</li><li>YC34H-6WWDK-085MQ-JYPNX-NZRA2</li></ul><h2 id="VMware-Workstation-Pro-14-激活许可证："><a href="#VMware-Workstation-Pro-14-激活许可证：" class="headerlink" title="VMware Workstation Pro 14 激活许可证："></a>VMware Workstation Pro 14 激活许可证：</h2><ul><li>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA</li><li>CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</li></ul><h2 id="VMware-Workstation-Pro-12-激活许可证："><a href="#VMware-Workstation-Pro-12-激活许可证：" class="headerlink" title="VMware Workstation Pro 12 激活许可证："></a>VMware Workstation Pro 12 激活许可证：</h2><ul><li>5A02H-AU243-TZJ49-GTC7K-3C61N</li><li>VF5XA-FNDDJ-085GZ-4NXZ9-N20E6</li><li>UC5MR-8NE16-H81WY-R7QGV-QG2D8</li><li>ZG1WH-ATY96-H80QP-X7PEX-Y30V4</li><li>AA3E0-0VDE1-0893Z-KGZ59-QGAVF</li></ul>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/posts/41070.html"/>
      <url>/posts/41070.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="1-卸载旧版"><a href="#1-卸载旧版" class="headerlink" title="1.卸载旧版"></a>1.卸载旧版</h1><p>首先如果系统中已经存在旧的Docker，则先卸载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">    docker-client \</span><br><span class="line">    docker-client-latest \</span><br><span class="line">    docker-common \</span><br><span class="line">    docker-latest \</span><br><span class="line">    docker-latest-logrotate \</span><br><span class="line">    docker-logrotate \</span><br><span class="line">    docker-engine \</span><br><span class="line">    docker-selinux </span><br></pre></td></tr></table></figure><h1 id="2-配置Docker的yum库"><a href="#2-配置Docker的yum库" class="headerlink" title="2.配置Docker的yum库"></a>2.配置Docker的yum库</h1><p>首先要安装一个yum工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>安装成功后，执行命令，配置Docker的yum源（已更新为阿里云源）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s+download.docker.com+mirrors.aliyun.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><p>更新yum，建立缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum makecache fast</span><br></pre></td></tr></table></figure><h1 id="3-安装Docker"><a href="#3-安装Docker" class="headerlink" title="3.安装Docker"></a>3.安装Docker</h1><p>最后，执行命令，安装Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><h1 id="4-启动和校验"><a href="#4-启动和校验" class="headerlink" title="4.启动和校验"></a>4.启动和校验</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动Docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止Docker</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行docker ps命令，如果不报错，说明安装启动成功</span></span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h1 id="5-配置镜像加速"><a href="#5-配置镜像加速" class="headerlink" title="5.配置镜像加速"></a>5.配置镜像加速</h1><p>镜像地址可能会变更，如果失效可以百度找最新的docker镜像。</p><p>配置镜像步骤如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制内容，注意把其中的镜像加速地址改成你自己的</span></span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;http://mirrors.sohu.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://ustc-edu-cn.mirror.aliyuncs.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://ccr.ccs.tencentyun.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://docker.awsl9527.cn&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Docker</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="5-配置镜像加速-阿里云已停用）"><a href="#5-配置镜像加速-阿里云已停用）" class="headerlink" title="5.配置镜像加速(阿里云已停用）"></a>5.配置镜像加速(阿里云已停用）</h1><p>这里以阿里云镜像加速为例。</p><h2 id="5-1-注册阿里云账号"><a href="#5-1-注册阿里云账号" class="headerlink" title="5.1.注册阿里云账号"></a>5.1.注册阿里云账号</h2><p>首先访问阿里云网站:</p><p><a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p>注册一个账号。</p><h2 id="5-2-开通镜像服务"><a href="#5-2-开通镜像服务" class="headerlink" title="5.2.开通镜像服务"></a>5.2.开通镜像服务</h2><p>在首页的产品中，找到阿里云的<strong>容器镜像服务</strong>：</p><p><img src="https://i0.hdslb.com/bfs/article/e5fdc96e9b7801cb735d9f6fcd550d9e645325325.png" alt="img"></p><p>点击后进入控制台：</p><p><img src="https://i0.hdslb.com/bfs/article/ca35f5110bac0e539cee2da0f91f6ea8645325325.png" alt="img"></p><p>首次可能需要选择立刻开通，然后进入控制台。</p><h2 id="5-3-配置镜像加速"><a href="#5-3-配置镜像加速" class="headerlink" title="5.3.配置镜像加速"></a>5.3.配置镜像加速</h2><p>找到<strong>镜像工具</strong>下的<strong>镜像**</strong>加速器**：</p><p><img src="https://i0.hdslb.com/bfs/article/ea9c66a01669367115d6679813ca63a7645325325.png" alt="img"></p><p>页面向下滚动，即可找到配置的文档说明：</p><p><img src="https://i0.hdslb.com/bfs/article/43a13114af74eb85fc1abba0b81ff607645325325.png" alt="img"></p><p>具体命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制内容，注意把其中的镜像加速地址改成你自己的</span></span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://xxxx.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Docker</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下搭建Docker环境</title>
      <link href="/posts/52689.html"/>
      <url>/posts/52689.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="1-准备Linux环境"><a href="#1-准备Linux环境" class="headerlink" title="1.准备Linux环境"></a>1.准备Linux环境</h1><p>首先，我们要准备一个Linux的系统，成本最低的方式就是在本地安装一台虚拟机。为了统一学习环境，不管是使用MacOS还是Windows系统的同学，都建议安装一台虚拟机。</p><p>windows采用VMware，Mac则采用Fusion</p><h2 id="1-1-安装VMware"><a href="#1-1-安装VMware" class="headerlink" title="1.1.安装VMware"></a>1.1.安装VMware</h2><p>VMware是业界最好用的虚拟机软件之一。</p><p>windows版本的网站如下：</p><p><a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p><p>Mac下也有对应版本，叫做VMware Fusion：</p><p><a href="https://www.vmware.com/cn/products/fusion.html">https://www.vmware.com/cn/products/fusion.html</a></p><p>特别注意，Windows10以上版本操作系统需要下载安装VMware Workstation Pro16及以上版本，安装方式此处略。</p><p>如果自己电脑上已经有了低版本的VMware，则需要先卸载，再重新安装。卸载过程比较麻烦。</p><h3 id="1-1-1-卸载旧版VMware（可选）"><a href="#1-1-1-卸载旧版VMware（可选）" class="headerlink" title="1.1.1.卸载旧版VMware（可选）"></a>1.1.1.卸载旧版VMware（可选）</h3><p>首先，在控制面板找到程序和功能选项，找到VMware，进行卸载操作：</p><p><img src="https://i0.hdslb.com/bfs/article/2f07fd9b47c3f21a452f3554df63aa03645325325.png" alt="img"></p><p>弹出确认框, 点击”下一步”:</p><p><img src="https://i0.hdslb.com/bfs/article/331412756a48eba0c4577958675fbf40645325325.png" alt="img"></p><p>下一步之后, 选择删除:</p><p><img src="https://i0.hdslb.com/bfs/article/2429c653c72005c1ae56d5b7e9c079c7645325325.png" alt="img"></p><p>接下来，按照提示完成卸载操作即可。</p><p>卸载完成后，还需要看看VMware的安装目录是否有旧数据，一并清理掉。</p><p>比如安装在<strong>C盘的**</strong>Program Files<strong><strong>(</strong></strong>x86<strong>**)</strong>：</p><p><img src="https://i0.hdslb.com/bfs/article/f74a9a058a13ff6f345250521430b995645325325.png" alt="img"></p><p>则需要直接删除整个VMware目录：</p><p><img src="https://i0.hdslb.com/bfs/article/e62dec4be580eb55b4b987fafcbaeaea645325325.png" alt="img"></p><p>接下来要清理注册表：</p><p>首先，按住Windows + R , 在弹出框中输入 “regedit” 调出注册表：</p><p><img src="https://i0.hdslb.com/bfs/article/511f204c591f912420076a3136959127645325325.png" alt="img"></p><p>进入注册表编辑器，如图：</p><p><img src="https://i0.hdslb.com/bfs/article/e3c3479f3c586d386d7fcd135204ea0b645325325.png" alt="img"></p><p>打开<strong><code>HKEY_CURRENT_USER</code></strong>文件夹，找到<strong><code>Software</code></strong>文件夹并打开</p><p><img src="https://i0.hdslb.com/bfs/article/1dc6a671248fbb962659da34c3baaa58645325325.png" alt="img"></p><p>找到“VMware.Inc”，右键删除：</p><p><img src="https://i0.hdslb.com/bfs/article/b1b1b6f38220f71dbb6c019a774b22f1645325325.png" alt="img"></p><h3 id="1-1-2-安装VMware"><a href="#1-1-2-安装VMware" class="headerlink" title="1.1.2.安装VMware"></a>1.1.2.安装VMware</h3><p>安装步骤略。。</p><p>安装以后可以免费试用，大家可以去官网购买正版许可证，或者去网上看看有没有好心人赠送你一个许可证。启动后的界面如图所示：</p><p><img src="https://i0.hdslb.com/bfs/article/ad973da49016bd1a891264233d29e8e8645325325.png" alt="img"></p><h3 id="1-1-3-常见错误"><a href="#1-1-3-常见错误" class="headerlink" title="1.1.3.常见错误"></a>1.1.3.常见错误</h3><p>如果VMware虚拟机运行报错，例如：</p><p><img src="https://i0.hdslb.com/bfs/article/44e4fcba1f0d4f6adde572d5f5457afa645325325.png" alt="img"></p><p>这个是由于英特尔的虚拟化技术, 没有开启, 需要进入系统的BIOS界面 , 开启英特尔的虚拟化技术 ; 不同的电脑型号 , 进入BIOS界面的方式不同, 需要百度查询一下自己电脑的型号 , 如何进BIOS ;</p><p>windows10系统可以参考: <a href="https://blog.csdn.net/biu_code/article/details/107504627">https://blog.csdn.net/biu_code/article/details/107504627</a></p><p>以ThinkPad为例，如图：</p><p><img src="https://i0.hdslb.com/bfs/article/d07ca10de8f7e45145b81032db503deb645325325.png" alt="img"></p><h2 id="1-2-创建虚拟机"><a href="#1-2-创建虚拟机" class="headerlink" title="1.2.创建虚拟机"></a>1.2.创建虚拟机</h2><p>Centos7是比较常用的一个Linux发行版本，在国内的使用比例还是比较高的。</p><p>大家首先要下载一个Centos7的iso文件，我在资料中给大家准备了一个mini的版本，体积不到1G，推荐大家使用：</p><p><img src="https://i0.hdslb.com/bfs/article/ad4a6250dcd48754a13c5c4beab8b0e8645325325.png" alt="img"></p><p>我们在VMware《主页》界面中点击《创建新的虚拟机》按钮：</p><p><img src="https://i0.hdslb.com/bfs/article/7497ba151fc4841372f987a8915d0cc8645325325.png" alt="img"></p><p>然后会弹出一个窗口，我们直接点击下一步：</p><p><img src="https://i0.hdslb.com/bfs/article/aaae45616f176682832b1a6b92c86095645325325.png" alt="img"></p><p>然后页面中选择你准备好的ISO文件，继续点击下一步：</p><p><img src="https://i0.hdslb.com/bfs/article/dd1c88a03aa9b5c683747dc567e2861a645325325.png" alt="img"></p><p>然后填写<code>虚拟机的名称</code>以及虚拟机将来<code>保存的位置</code>：</p><p><img src="https://i0.hdslb.com/bfs/article/f6618fa89d0c71249dc323a787b4102d645325325.png" alt="img"></p><p>再次下一步，填写虚拟机磁盘大小。这里建议给大一点，否则将来不够用调整起来麻烦。而且这里设置大小并不是立刻占用这么多，而是设置一个上限：</p><p><img src="https://i0.hdslb.com/bfs/article/3e9c3b919cd7d76eb97e75cb8826d57a645325325.png" alt="img"></p><p>继续下一步，然后选择虚拟机硬件设置：</p><p><img src="https://i0.hdslb.com/bfs/article/94a31baf537eed69567b0990c89625b4645325325.png" alt="img"></p><p>在弹出的窗口中设置虚拟机硬件，建议CPU给到4核，内存给到8G：</p><p><img src="https://i0.hdslb.com/bfs/article/eca9a4d13383ee098b07f5cecd94e7c8645325325.png" alt="img"></p><p>配置完成后，点击<code>关闭</code>，回到上一页面，继续点击<code>完成</code>：</p><p><img src="https://i0.hdslb.com/bfs/article/da3c311e082c7bbe7cebb2c5298f1153645325325.png" alt="img"></p><p>虚拟机就创建完毕了：</p><p><img src="https://i0.hdslb.com/bfs/article/cc2837244a6581ed631278dd09ebd8a2645325325.png" alt="img"></p><h2 id="1-3-安装Centos7"><a href="#1-3-安装Centos7" class="headerlink" title="1.3.安装Centos7"></a>1.3.安装Centos7</h2><p>接下来，我们启动刚刚创建的虚拟机，开始安装Centos7系统：</p><p><img src="https://i0.hdslb.com/bfs/article/9dd573c7fb87272650bd72098502a3c2645325325.png" alt="img"></p><p>启动后需要选择安装菜单，将鼠标移入黑窗口中后，将无法再使用鼠标，需要按上下键选择菜单。选中Install Centos 7 后按下回车：</p><p><img src="https://i0.hdslb.com/bfs/article/f63605e29248dba3f28b2266c61e0655645325325.png" alt="img"></p><p>然后会提示我们按下enter键继续：</p><p><img src="https://i0.hdslb.com/bfs/article/9692d998fa438e03cb042bb74a73a242645325325.png" alt="img"></p><p>过一会儿后，会进入语言选择菜单，这里可以使用鼠标选择。选择中文-简体中文，然后继续：</p><p><img src="https://i0.hdslb.com/bfs/article/72589b84d410b0197af1beb8672ca79c645325325.png" alt="img"></p><p>接下来，会进入安装配置页面：</p><p><img src="https://i0.hdslb.com/bfs/article/558e50c33b0f248308b62a27ee3b7d21645325325.png" alt="img"></p><p>鼠标向下滚动后，找到系统-安装位置配置，点击：</p><p><img src="https://i0.hdslb.com/bfs/article/60f824e56003175439a3a0e9ee4674ea645325325.png" alt="img"></p><p>选择刚刚添加的磁盘，并点击完成：</p><p><img src="https://i0.hdslb.com/bfs/article/c60556bdc94fcfbec2930f1cb4649ec2645325325.png" alt="img"></p><p>然后回到配置页面，这次点击《网络和主机名》：</p><p><img src="https://i0.hdslb.com/bfs/article/a2cb2982e5f260dc7d167d387dac4055645325325.png" alt="img"></p><p>在网络页面做下面的几件事情：</p><ol><li>修改主机名为自己喜欢的主机名，不要出现中文和特殊字符，建议用localhost</li><li>点击应用</li><li>将网络连接打开</li><li>点击配置，设置详细网络信息</li></ol><p><img src="https://i0.hdslb.com/bfs/article/a830c111e9d1270fb5d9eab2fe0e8b1d645325325.png" alt="img"></p><p>最好用一个截图软件，记住上图中的网络详细信息，接下来的配置要参考：</p><p><img src="https://i0.hdslb.com/bfs/article/4b606ca23f9883671bec903e380b0805645325325.png" alt="img"></p><p>点击配置按钮后，我们需要把网卡地址改为静态IP，这样可以避免每次启动虚拟机IP都变化。所有配置照搬你自己截图的网络信息填写，不要照抄我的：</p><p><img src="https://i0.hdslb.com/bfs/article/4980c7eda43c85ef5068141675a2e875645325325.png" alt="img"></p><p>上图中的四个信息参考之前的<strong>以太网**</strong>(ens33)<strong>**网卡</strong>的截图，不要照搬我的来写。</p><p>最后，点击完成按钮：</p><p><img src="https://i0.hdslb.com/bfs/article/67b63d5713f45dcde2ada79cd6f1dac8645325325.png" alt="img"></p><p>回到配置界面后，点击<code>开始安装</code>：</p><p><img src="https://i0.hdslb.com/bfs/article/3215f798fe87c0457cc3c9b78b5751f5645325325.png" alt="img"></p><p>接下来需要设置root密码：</p><p><img src="https://i0.hdslb.com/bfs/article/462b0780bffcd264b9a76bf88ea44e2e645325325.png" alt="img"></p><p>填写你要使用的root密码，然后点击完成：</p><p><img src="https://i0.hdslb.com/bfs/article/6cc801ddfe7e7fb88b56bdd17041649e645325325.png" alt="img"></p><p>接下来，耐心等待安装即可。</p><p><img src="https://i0.hdslb.com/bfs/article/25739c7dae60ef5d9de7a25febfc15db645325325.png" alt="img"></p><p>等待安装完成后，点击<strong>重启</strong>：</p><p><img src="https://i0.hdslb.com/bfs/article/f4f2f49c793c59afa50df42f3b35d281645325325.png" alt="img"></p><p>耐心等待一段时间，不要做任何操作，虚拟机即可启动完毕：</p><p><img src="https://i0.hdslb.com/bfs/article/b10006c6604f6be19d1d108149e9e6df645325325.png" alt="img"></p><p>输入用户名root，然后点击回车，会要求你输入密码：</p><p><img src="https://i0.hdslb.com/bfs/article/bfe1aa74ed1fbedd3e6ecff180f8c716645325325.png" alt="img"></p><p>此时你要输入密码，不过需要注意的是密码是<strong>隐藏</strong>的，输入了也看不见。所以放心输入，完成后回车即可：</p><p><img src="https://i0.hdslb.com/bfs/article/2749ce3f2a244a0552e5db4d46649322645325325.png" alt="img"></p><p>只要密码输入正确，就可以正常登录。此时可以用命令测试虚拟机网络是否畅通：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p>如果看到这样的结果代表网络畅通：</p><p><img src="https://i0.hdslb.com/bfs/article/fd4a5a4773d616a9fa8576384e7916ec645325325.png" alt="img"></p><p>默认ping命令会持续执行，按下<code>CTRL</code>+ <code>C</code>后命令即可停止。</p><h2 id="1-4-设置虚拟机快照"><a href="#1-4-设置虚拟机快照" class="headerlink" title="1.4.设置虚拟机快照"></a>1.4.设置虚拟机快照</h2><p>在虚拟机安装完成后，最好立刻设置一个快照，这样一旦将来虚拟机出现问题，可以快速恢复。</p><p>我们先停止虚拟机，点击VMware顶部菜单中的<code>暂停</code><strong><code>下拉选框</code></strong>，选择<code>关闭客户机</code>：</p><p><img src="https://i0.hdslb.com/bfs/article/5649db35099ce698f827733446ddd8a7645325325.png" alt="img"></p><p>接着，点击VMware菜单中的🔧按钮:</p><p><img src="https://i0.hdslb.com/bfs/article/1c860ae7b7fb84fbe0528e2d7639de7c645325325.png" alt="img"></p><p>然后在弹出的快照管理窗口中，点击<strong>拍摄快照</strong>，填写新的快照信息：</p><p><img src="https://i0.hdslb.com/bfs/article/a95a0ddf10cd0efe0128d021d576343c645325325.png" alt="img"></p><p>快照拍摄完成了！而且我们可以在不同阶段拍摄多个不同快照作为备份，方便后期恢复数据。</p><p>假如以后虚拟机文件受损，需要恢复到初始状态的话，可以选中要恢复的快照，点击转到即可：</p><p><img src="https://i0.hdslb.com/bfs/article/f3b4045e22dc32024c51d8d447c1336e645325325.png" alt="img"></p><h1 id="2-SSH客户端"><a href="#2-SSH客户端" class="headerlink" title="2.SSH客户端"></a>2.SSH客户端</h1><p>在VMware界面中操作虚拟机非常不友好，所以一般推荐使用专门的SSH客户端。市面上常见的有：</p><ul><li>Xshell：个人免费，商业收费，之前爆出过有隐藏后门。不推荐</li><li>Finshell：基础功能免费，高级功能收费，基于Java，内存占用较高（在1个G左右）。不推荐</li><li>MobarXterm：基础功能免费、高级功能收费。开源、功能强大、内存占用低（只有10m左右），但是界面不太漂亮。推荐使用</li></ul><h2 id="2-1-安装MobarXterm"><a href="#2-1-安装MobarXterm" class="headerlink" title="2.1.安装MobarXterm"></a>2.1.安装MobarXterm</h2><p>这里我们会选择内存占用较低的MobarXterm作为SSH客户端，其官网地址：</p><p><a href="https://mobaxterm.mobatek.net/">https://mobaxterm.mobatek.net/</a></p><p>安装完成后界面如图所示：</p><p><img src="https://i0.hdslb.com/bfs/article/89b59772d91c2d446b84794600e7510a645325325.png" alt="img"></p><p>点击session按钮，进入会话管理：</p><p><img src="https://i0.hdslb.com/bfs/article/9331ad5c992910b8d9e9d807adb13234645325325.png" alt="img"></p><p>在弹出的session管理页面中，按照下图填写信息并保存：</p><p><img src="https://i0.hdslb.com/bfs/article/e01c25cc5235a3858e930ee7c65989c6645325325.png" alt="img"></p><p>点击OK后会提示你是第一次连接，询问你是信任连接的服务：</p><p><img src="https://i0.hdslb.com/bfs/article/3380d8ee2db528a028ad760cf12be8e3645325325.png" alt="img"></p><p>选择accept之后，会询问你是否要记住密码，选择yes：</p><p><img src="https://i0.hdslb.com/bfs/article/9e93ce5e3806be9b1233066bce15223b645325325.png" alt="img"></p><p>紧接着需要你设置一个MobarXterm的全局密码用于做密码管理，建议设置一个与虚拟机密码不同的：</p><p>输入密码：</p><p><img src="https://i0.hdslb.com/bfs/article/9f48ec7b9674da4aee74c7552d1eee01645325325.png" alt="img"></p><p>输入成功后，就会连接成功，并进入操作界面了：</p><p><img src="https://i0.hdslb.com/bfs/article/867f44ebf3871558f723b831f0397bac645325325.png" alt="img"></p><p>这里需要做一些基础的配置：</p><p><img src="https://i0.hdslb.com/bfs/article/79d1da0356cca425426c4ed30e3f9e64645325325.png" alt="img"></p><h2 id="2-2-配置默认编辑器"><a href="#2-2-配置默认编辑器" class="headerlink" title="2.2.配置默认编辑器"></a>2.2.配置默认编辑器</h2><p>首先建议设置一下默认编辑器，这样我们通过MobarXterm的FTP工具打开文件时会以指定的编辑器打开，方便修改。我这里配置的是vscode：</p><p><img src="https://i0.hdslb.com/bfs/article/803169276a026d5e4eb6a6dfda17daa2645325325.png" alt="img"></p><h2 id="2-3-配置右键粘贴"><a href="#2-3-配置右键粘贴" class="headerlink" title="2.3.配置右键粘贴"></a>2.3.配置右键粘贴</h2><p>复制粘贴是很常用的配置，MobarXterm默认左键选中即<strong>复制</strong>，但是需要配置右键点击为<strong>粘贴：</strong></p><p><img src="https://i0.hdslb.com/bfs/article/61d55313766f7286b0325cdb54f3f939645325325.png" alt="img"></p><p>这样，复制和粘贴可以全部通过鼠标操作，无需按键。</p><h2 id="2-4-SSH配置"><a href="#2-4-SSH配置" class="headerlink" title="2.4.SSH配置"></a>2.4.SSH配置</h2><p>接下来还有几个ssh配置：</p><p><img src="https://i0.hdslb.com/bfs/article/bd302b510f78a64f6d9dc33c018a3359645325325.png" alt="img"></p><p>分别是：</p><ul><li>默认的登录用户</li><li>ssh保持连接</li><li>取消连接成功后的欢迎banner</li></ul><h2 id="2-5-关闭X-Server服务"><a href="#2-5-关闭X-Server服务" class="headerlink" title="2.5.关闭X-Server服务"></a>2.5.关闭X-Server服务</h2><p>大多数情况下，我们没有x-server的需求，因此可以选择不要自启动：</p><p><img src="https://i0.hdslb.com/bfs/article/4d915dd7257704861f8f7e556a6f7d82645325325.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习笔记</title>
      <link href="/posts/10048.html"/>
      <url>/posts/10048.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="1-快速入门"><a href="#1-快速入门" class="headerlink" title="1.快速入门"></a>1.快速入门</h1><h2 id="1-1-部署MySQL"><a href="#1-1-部署MySQL" class="headerlink" title="1.1.部署MySQL"></a>1.1.部署MySQL</h2><p>首先，我们利用Docker来安装一个MySQL软件，大家可以对比一下之前传统的安装方式，看看哪个效率更高一些。</p><p>如果是利用传统方式部署MySQL，大概的步骤有：</p><ul><li>搜索并下载MySQL安装包</li><li>上传至Linux环境</li><li>编译和配置环境</li><li>安装</li></ul><p>而使用Docker安装，仅仅需要一步即可，在命令行输入下面的命令（建议采用CV大法）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-d</span> \</span><br><span class="line">  <span class="literal">--name</span> mysql \</span><br><span class="line">  <span class="literal">-p</span> <span class="number">3306</span>:<span class="number">3306</span> \</span><br><span class="line">  <span class="literal">-e</span> TZ=Asia/Shanghai \</span><br><span class="line">  <span class="literal">-e</span> MYSQL_ROOT_PASSWORD=<span class="number">123</span> \</span><br><span class="line">  mysql</span><br></pre></td></tr></table></figure><p>运行效果如图：</p><p><img src="https://i0.hdslb.com/bfs/article/082b0f5b5c6c7d41bffaaa7589874325645325325.png" alt="img"></p><p>MySQL安装完毕！通过任意客户端工具即可连接到MySQL.</p><p>大家可以发现，当我们执行命令后，Docker做的第一件事情，是去自动搜索并下载了MySQL，然后会自动运行MySQL，我们完全不用插手，是不是非常方便。</p><p>而且，这种安装方式你完全不用考虑运行的操作系统环境，它不仅仅在CentOS系统是这样，在Ubuntu系统、macOS系统、甚至是装了WSL的Windows下，都可以使用这条命令来安装MySQL。</p><p>要知道，<strong>不同操作系统下其安装包、运行环境是都不相同的</strong>！如果是<strong>手动安装，必须手动解决安装包不同、环境不同的、配置不同的问题</strong>！</p><p>而使用Docker，这些完全不用考虑。就是因为Docker会自动搜索并下载MySQL。注意：这里下载的不是安装包，而是<strong>镜像。</strong>镜像中不仅包含了MySQL本身，还包含了其运行所需要的环境、配置、系统级函数库。因此它在运行时就有自己独立的环境，就可以跨系统运行，也不需要手动再次配置环境了。这套独立运行的隔离环境我们称为<strong>容器</strong>。</p><p>说明：</p><ul><li>镜像：英文是image</li><li>容器：英文是container</li></ul><blockquote><p>因此，Docker安装软件的过程，就是自动搜索下载镜像，然后创建并运行容器的过程。</p></blockquote><p>Docker会根据命令中的镜像名称自动搜索并下载镜像，那么问题来了，它是去哪里搜索和下载镜像的呢？这些镜像又是谁制作的呢？</p><p>Docker官方提供了一个专门管理、存储镜像的网站，并对外开放了镜像上传、下载的权利。Docker官方提供了一些基础镜像，然后各大软件公司又在基础镜像基础上，制作了自家软件的镜像，全部都存放在这个网站。这个网站就成了Docker镜像交流的社区：</p><p><a href="https://hub.docker.com/">https://hub.docker.com/</a></p><p>基本上我们常用的各种软件都能在这个网站上找到，我们甚至可以自己制作镜像上传上去。</p><p>像这种提供存储、管理Docker镜像的服务器，被称为DockerRegistry，可以翻译为镜像仓库。DockerHub网站是官方仓库，阿里云、华为云会提供一些第三方仓库，我们也可以自己搭建私有的镜像仓库。</p><p>官方仓库在国外，下载速度较慢，一般我们都会使用第三方仓库提供的镜像加速功能，提高下载速度。而企业内部的机密项目，往往会采用私有镜像仓库。</p><p>总之，镜像的来源有两种：</p><ul><li>基于官方基础镜像自己制作</li><li>直接去DockerRegistry下载</li></ul><p><strong>总结一下</strong>：</p><p>Docker本身包含一个后台服务，我们可以利用Docker命令告诉Docker服务，帮助我们快速部署指定的应用。Docker服务部署应用时，首先要去搜索并下载应用对应的镜像，然后根据镜像创建并允许容器，应用就部署完成了。</p><p>用一幅图标示如下：</p><p><img src="https://i0.hdslb.com/bfs/article/0352c747db4ecc27b68af7e5072c25d0645325325.png" alt="image-20240815184207816"></p><h2 id="1-2-命令解读"><a href="#1-2-命令解读" class="headerlink" title="1.2.命令解读"></a>1.2.命令解读</h2><p>利用Docker快速的安装了MySQL，非常的方便，不过我们执行的命令到底是什么意思呢？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-d</span> \</span><br><span class="line">  <span class="literal">--name</span> mysql \</span><br><span class="line">  <span class="literal">-p</span> <span class="number">3306</span>:<span class="number">3306</span> \</span><br><span class="line">  <span class="literal">-e</span> TZ=Asia/Shanghai \</span><br><span class="line">  <span class="literal">-e</span> MYSQL_ROOT_PASSWORD=<span class="number">123</span> \</span><br><span class="line">  mysql</span><br></pre></td></tr></table></figure><div class="note danger no-icon flat"><p>解读：</p><ul><li><code>docker run -d</code> ：创建并运行一个容器，<code>-d</code>则是让容器以后台进程运行</li><li><code>--name`` mysql</code> : 给容器起个名字叫<code>mysql</code>，你可以叫别的</li><li><code>-p 3306:3306</code> : 设置端口映射。<ul><li><strong>容器是隔离环境</strong>，外界不可访问。但是可以<strong>将**</strong>宿主机<strong><strong>端口</strong></strong>映射容器内到端口**，当访问宿主机指定端口时，就是在访问容器内的端口了。</li><li>容器内端口往往是由容器内的进程决定，例如MySQL进程默认端口是3306，因此容器内端口一定是3306；而宿主机端口则可以任意指定，一般与容器内保持一致。</li><li>格式： <code>-p 宿主机端口:容器内端口</code>，示例中就是将宿主机的3306映射到容器内的3306端口</li></ul></li><li><code>-``e`` TZ=Asia/Shanghai</code> : 配置容器内进程运行时的一些参数<ul><li>格式：<code>-e KEY=VALUE</code>，KEY和VALUE都由容器内进程决定</li><li>案例中，<code>TZ``=Asia/Shanghai</code>是设置时区；<code>MYSQL_ROOT_PASSWORD=123</code>是设置MySQL默认密码</li></ul></li><li><code>mysql</code> : 设置<strong>镜像</strong>名称，Docker会根据这个名字搜索并下载镜像<ul><li>格式：<code>REPOSITORY:TAG</code>，例如<code>mysql:8.0</code>，其中<code>REPOSITORY</code>可以理解为镜像名，<code>TAG</code>是版本号</li><li>在未指定<code>TAG</code>的情况下，默认是最新版本，也就是<code>mysql:latest</code></li></ul></li></ul></div><p>镜像的名称不是随意的，而是要到DockerRegistry中寻找，镜像运行时的配置也不是随意的，要参考镜像的帮助文档，这些在DockerHub网站或者软件的官方网站中都能找到。</p><p>如果我们要安装其它软件，也可以到DockerRegistry中寻找对应的镜像名称和版本，阅读相关配置即可。</p><h1 id="2-Docker基础"><a href="#2-Docker基础" class="headerlink" title="2.Docker基础"></a>2.Docker基础</h1><p>接下来，我们一起来学习Docker使用的一些基础知识，为将来部署项目打下基础。具体用法可以参考Docker官方文档：</p><p><a href="https://docs.docker.com/">https://docs.docker.com/</a></p><h2 id="2-1-常见命令"><a href="#2-1-常见命令" class="headerlink" title="2.1.常见命令"></a>2.1.常见命令</h2><p>首先我们来学习Docker中的常见命令，可以参考官方文档：</p><p><a href="https://docs.docker.com/engine/reference/commandline/cli/">https://docs.docker.com/engine/reference/commandline/cli/</a></p><h3 id="2-1-1-命令介绍"><a href="#2-1-1-命令介绍" class="headerlink" title="2.1.1.命令介绍"></a>2.1.1.命令介绍</h3><p>其中，比较常见的命令有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>命令</strong></th><th style="text-align:left"><strong>说明</strong></th><th style="text-align:left"><strong>文档地址</strong></th></tr></thead><tbody><tr><td style="text-align:left">docker pull</td><td style="text-align:left">拉取镜像</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/pull/">docker pull</a></td></tr><tr><td style="text-align:left">docker push</td><td style="text-align:left">推送镜像到DockerRegistry</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/push/">docker push</a></td></tr><tr><td style="text-align:left">docker images</td><td style="text-align:left">查看本地镜像</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/images/">docker images</a></td></tr><tr><td style="text-align:left">docker rmi</td><td style="text-align:left">删除本地镜像</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/rmi/">docker rmi</a></td></tr><tr><td style="text-align:left">docker run</td><td style="text-align:left">创建并运行容器（不能重复创建）</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/run/">docker run</a></td></tr><tr><td style="text-align:left">docker stop</td><td style="text-align:left">停止指定容器</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/stop/">docker stop</a></td></tr><tr><td style="text-align:left">docker start</td><td style="text-align:left">启动指定容器</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/start/">docker start</a></td></tr><tr><td style="text-align:left">docker restart</td><td style="text-align:left">重新启动容器</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/restart/">docker restart</a></td></tr><tr><td style="text-align:left">docker rm</td><td style="text-align:left">删除指定容器</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/rm/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker ps</td><td style="text-align:left">查看容器</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/ps/">docker ps</a></td></tr><tr><td style="text-align:left">docker logs</td><td style="text-align:left">查看容器运行日志</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/logs/">docker logs</a></td></tr><tr><td style="text-align:left">docker exec</td><td style="text-align:left">进入容器</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/exec/">docker exec</a></td></tr><tr><td style="text-align:left">docker save</td><td style="text-align:left">保存镜像到本地压缩文件</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/save/">docker save</a></td></tr><tr><td style="text-align:left">docker load</td><td style="text-align:left">加载本地压缩文件到镜像</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/load/">docker load</a></td></tr><tr><td style="text-align:left">docker inspect</td><td style="text-align:left">查看容器详细信息</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/inspect/">docker inspect</a></td></tr></tbody></table></div><p>用一副图来表示这些命令的关系：</p><p><img src="https://i0.hdslb.com/bfs/article/36323eb5b52f6f6ea7c2ac56b5525f05645325325.png" alt="image-20240815184138146"></p><p>补充：</p><p>默认情况下，每次重启虚拟机我们都需要手动启动Docker和Docker中的容器。通过命令可以实现开机自启：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker开机自启</span></span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker容器开机自启</span></span><br><span class="line">docker update <span class="literal">--restart</span>=always [容器名/容器<span class="type">id</span>]</span><br></pre></td></tr></table></figure><h3 id="2-1-2-演示"><a href="#2-1-2-演示" class="headerlink" title="2.1.2.演示"></a>2.1.2.演示</h3><p>教学环节说明：我们以Nginx为例给大家演示上述命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第1步，去DockerHub查看nginx镜像仓库及相关信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第2步，拉取Nginx镜像</span></span><br><span class="line">docker pull nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第3步，查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 结果如下：</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">nginx        latest    <span class="number">605</span>c77e624dd   <span class="number">16</span> months ago   <span class="number">141</span>MB</span><br><span class="line">mysql        latest    <span class="number">3218</span>b38490ce   <span class="number">17</span> months ago   <span class="number">516</span>MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第4步，创建并允许Nginx容器</span></span><br><span class="line">docker run <span class="literal">-d</span> <span class="literal">--name</span> nginx <span class="literal">-p</span> <span class="number">80</span>:<span class="number">80</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第5步，查看运行中容器</span></span><br><span class="line">docker <span class="built_in">ps</span></span><br><span class="line"><span class="comment"># 也可以加格式化方式访问，格式会更加清爽</span></span><br><span class="line">docker <span class="built_in">ps</span> <span class="literal">--format</span> <span class="string">&quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第6步，访问网页，地址：http://虚拟机地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第7步，停止容器</span></span><br><span class="line">docker stop nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第8步，查看所有容器</span></span><br><span class="line">docker <span class="built_in">ps</span> <span class="literal">-a</span> <span class="literal">--format</span> <span class="string">&quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第9步，再次启动nginx容器</span></span><br><span class="line">docker <span class="built_in">start</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第10步，再次查看容器</span></span><br><span class="line">docker <span class="built_in">ps</span> <span class="literal">--format</span> <span class="string">&quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第11步，查看容器详细信息</span></span><br><span class="line">docker inspect nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第12步，进入容器,查看容器内目录</span></span><br><span class="line">docker exec <span class="literal">-it</span> nginx bash</span><br><span class="line"><span class="comment"># 或者，可以进入MySQL</span></span><br><span class="line">docker exec <span class="literal">-it</span> mysql mysql <span class="literal">-uroot</span> <span class="literal">-p</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第13步，删除容器</span></span><br><span class="line">docker <span class="built_in">rm</span> nginx</span><br><span class="line"><span class="comment"># 发现无法删除，因为容器运行中，强制删除容器</span></span><br><span class="line">docker <span class="built_in">rm</span> <span class="operator">-f</span> nginx</span><br></pre></td></tr></table></figure><h3 id="2-1-3-命令别名"><a href="#2-1-3-命令别名" class="headerlink" title="2.1.3.命令别名"></a>2.1.3.命令别名</h3><p>给常用Docker命令起别名，方便我们访问：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改/root/.bashrc文件</span></span><br><span class="line">vi /root/.bashrc</span><br><span class="line">内容如下：</span><br><span class="line"><span class="comment"># .bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific aliases and functions</span></span><br><span class="line"></span><br><span class="line">alias <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line">alias <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line">alias <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br><span class="line">alias dps=<span class="string">&#x27;docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;&#x27;</span></span><br><span class="line">alias dis=<span class="string">&#x27;docker images&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source global definitions</span></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">f</span> /<span class="type">etc</span>/<span class="type">bashrc</span> ]; then</span><br><span class="line">        . /etc/bashrc</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>然后，执行命令使别名生效</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /root/.bashrc</span><br></pre></td></tr></table></figure><p>接下来，试试看新的命令吧。</p><h2 id="2-2-数据卷"><a href="#2-2-数据卷" class="headerlink" title="2.2.数据卷"></a>2.2.数据卷</h2><p>容器是隔离环境，容器内程序的文件、配置、运行时产生的容器都在容器内部，我们要读写容器内的文件非常不方便。大家思考几个问题：</p><ul><li>如果要升级MySQL版本，需要销毁旧容器，那么数据岂不是跟着被销毁了？</li><li>MySQL、Nginx容器运行后，如果我要修改其中的某些配置该怎么办？</li><li>我想要让Nginx代理我的静态资源怎么办？</li></ul><p>因此，容器提供程序的运行环境，但是<strong>程序运行产生的数据、程序运行依赖的配置都应该与容器**</strong>解耦**。</p><h3 id="2-2-1-什么是数据卷"><a href="#2-2-1-什么是数据卷" class="headerlink" title="2.2.1.什么是数据卷"></a>2.2.1.什么是数据卷</h3><p><strong>数据卷（volume）</strong>是一个虚拟目录，是<strong>容器内目录</strong>与<strong>宿主机**</strong>目录**之间映射的桥梁。</p><p>以Nginx为例，我们知道Nginx中有两个关键的目录：</p><ul><li><code>html</code>：放置一些静态资源</li><li><code>conf</code>：放置配置文件</li></ul><p>如果我们要让Nginx代理我们的静态资源，最好是放到<code>html</code>目录；如果我们要修改Nginx的配置，最好是找到<code>conf</code>下的<code>nginx.conf</code>文件。</p><p>但遗憾的是，容器运行的Nginx所有的文件都在容器内部。所以我们必须利用数据卷将两个目录与宿主机目录关联，方便我们操作。如图：</p><p><img src="https://i0.hdslb.com/bfs/article/0bda30d3d0072fddf4eff420cc00d3e6645325325.png" alt="image-20240815184236280"></p><p>在上图中：</p><ul><li>我们创建了两个数据卷：<code>conf</code>、<code>html</code></li><li>Nginx容器内部的<code>conf</code>目录和<code>html</code>目录分别与两个数据卷关联。</li><li>而数据卷conf和html分别指向了宿主机的<code>/var/lib/docker/volumes/conf/_data</code>目录和<code>/var/lib/docker/volumes/html/_data</code>目录</li></ul><p>这样以来，容器内的<code>conf</code>和<code>html</code>目录就 与宿主机的<code>conf</code>和<code>html</code>目录关联起来，我们称为<strong>挂载</strong>。此时，我们操作宿主机的<code>/var/lib/docker/volumes/html/_data</code>就是在操作容器内的<code>/usr/share/nginx/html/_data</code>目录。只要我们将静态资源放入宿主机对应目录，就可以被Nginx代理了。</p><p><strong>小提示</strong>：</p><p><code>/var/lib/docker/volumes</code>这个目录就是默认的存放所有容器数据卷的目录，其下再根据数据卷名称创建新目录，格式为<code>/数据卷名/_data</code>。</p><p><strong>为什么不让容器目录直接指向**</strong>宿主机<strong>**目录呢</strong>？</p><ul><li>因为直接指向宿主机目录就与宿主机强耦合了，如果切换了环境，宿主机目录就可能发生改变了。由于容器一旦创建，目录挂载就无法修改，这样容器就无法正常工作了。</li><li>但是容器指向数据卷，一个逻辑名称，而数据卷再指向宿主机目录，就不存在强耦合。如果宿主机目录发生改变，只要改变数据卷与宿主机目录之间的映射关系即可。</li></ul><p>不过，我们通过由于数据卷目录比较深，不好寻找，通常我们也<strong>允许让容器直接与**</strong>宿主机<strong>**目录挂载而不使用数据卷</strong>，具体参考2.2.3小节。</p><h3 id="2-2-2-数据卷命令"><a href="#2-2-2-数据卷命令" class="headerlink" title="2.2.2.数据卷命令"></a>2.2.2.数据卷命令</h3><p>数据卷的相关命令有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>命令</strong></th><th style="text-align:left"><strong>说明</strong></th><th style="text-align:left"><strong>文档地址</strong></th></tr></thead><tbody><tr><td style="text-align:left">docker volume create</td><td style="text-align:left">创建数据卷</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/volume_create/">docker volume create</a></td></tr><tr><td style="text-align:left">docker volume ls</td><td style="text-align:left">查看所有数据卷</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/volume_ls/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker volume rm</td><td style="text-align:left">删除指定数据卷</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/volume_prune/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker volume inspect</td><td style="text-align:left">查看某个数据卷的详情</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/volume_inspect/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker volume prune</td><td style="text-align:left">清除数据卷</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/volume_prune/">docker volume prune</a></td></tr></tbody></table></div><p>注意：容器与数据卷的挂载要在创建容器时配置，对于创建好的容器，是不能设置数据卷的。而且<strong>创建容器的过程中，数据卷会自动创建</strong>。</p><p>教学<strong>演示环节</strong>：演示一下nginx的html目录挂载</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.首先创建容器并指定数据卷，注意通过 -v 参数来指定数据卷</span></span><br><span class="line">docker run <span class="literal">-d</span> <span class="literal">--name</span> nginx <span class="literal">-p</span> <span class="number">80</span>:<span class="number">80</span> <span class="literal">-v</span> html:/usr/share/nginx/html nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.然后查看数据卷</span></span><br><span class="line">docker volume <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">DRIVER    VOLUME NAME</span><br><span class="line">local     <span class="number">29524</span>ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f</span><br><span class="line">local     html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看数据卷详情</span></span><br><span class="line">docker volume inspect html</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;CreatedAt&quot;</span>: <span class="string">&quot;2024-05-17T19:57:08+08:00&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Driver&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Labels&quot;</span>: <span class="type">null</span>,</span><br><span class="line">        <span class="string">&quot;Mountpoint&quot;</span>: <span class="string">&quot;/var/lib/docker/volumes/html/_data&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;html&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Options&quot;</span>: <span class="type">null</span>,</span><br><span class="line">        <span class="string">&quot;Scope&quot;</span>: <span class="string">&quot;local&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看/var/lib/docker/volumes/html/_data目录</span></span><br><span class="line">ll /var/lib/docker/volumes/html/_data</span><br><span class="line"><span class="comment"># 可以看到与nginx的html目录内容一样，结果如下：</span></span><br><span class="line">总用量 <span class="number">8</span></span><br><span class="line"><span class="literal">-rw-r--r--</span>. <span class="number">1</span> root root <span class="number">497</span> <span class="number">12</span>月 <span class="number">28</span> <span class="number">2021</span> <span class="number">50</span>x.html</span><br><span class="line"><span class="literal">-rw-r--r--</span>. <span class="number">1</span> root root <span class="number">615</span> <span class="number">12</span>月 <span class="number">28</span> <span class="number">2021</span> index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.进入该目录，并随意修改index.html内容</span></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/volumes/html/_data</span><br><span class="line">vi index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.打开页面，查看效果</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.进入容器内部，查看/usr/share/nginx/html目录内的文件是否变化</span></span><br><span class="line">docker exec <span class="literal">-it</span> nginx bash</span><br></pre></td></tr></table></figure><p>教学<strong>演示环节</strong>：演示一下MySQL的匿名数据卷</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.查看MySQL容器详细信息</span></span><br><span class="line">docker inspect mysql</span><br><span class="line"><span class="comment"># 关注其中.Config.Volumes部分和.Mounts部分</span></span><br></pre></td></tr></table></figure><p>我们关注两部分内容，第一是<code>.Config.Volumes</code>部分：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// ... 略</span></span><br><span class="line">    <span class="attr">&quot;Volumes&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;/var/lib/mysql&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="comment">// ... 略</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以发现这个容器声明了一个本地目录，需要挂载数据卷，但是<strong>数据卷未定义</strong>。这就是匿名卷。</p><p>然后，我们再看结果中的<code>.Mounts</code>部分：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Mounts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;volume&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Destination&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/lib/mysql&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以发现，其中有几个关键属性：</p><ul><li>Name：数据卷名称。由于定义容器未设置容器名，这里的就是匿名卷自动生成的名字，一串hash值。</li><li>Source：宿主机目录</li><li>Destination : 容器内的目录</li></ul><p>上述配置是将容器内的<code>/var/lib/mysql</code>这个目录，与数据卷<code>29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f</code>挂载。于是在宿主机中就有了<code>/var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data</code>这个目录。这就是匿名数据卷对应的目录，其使用方式与普通数据卷没有差别。</p><p>接下来，可以查看该目录下的MySQL的data文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data</span><br></pre></td></tr></table></figure><p>注意：每一个不同的镜像，将来创建容器后内部有哪些目录可以挂载，可以参考DockerHub对应的页面</p><h3 id="2-2-3-挂载本地目录或文件"><a href="#2-2-3-挂载本地目录或文件" class="headerlink" title="2.2.3.挂载本地目录或文件"></a>2.2.3.挂载本地目录或文件</h3><p>可以发现，数据卷的目录结构较深，如果我们去操作数据卷目录会不太方便。在很多情况下，我们会直接将容器目录与宿主机指定目录挂载。挂载语法与数据卷类似：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载本地目录</span></span><br><span class="line">-v 本地目录:容器内目录</span><br><span class="line"><span class="comment"># 挂载本地文件</span></span><br><span class="line">-v 本地文件:容器内文件</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：本地目录或文件必须以 <code>/</code> 或 <code>./</code>开头，如果直接以名字开头，会被识别为数据卷名而非本地目录名。</p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-v mysql:/var/lib/mysql <span class="comment"># 会被识别为一个数据卷叫mysql，运行时会自动创建这个数据卷</span></span><br><span class="line">-v ./mysql:/var/lib/mysql <span class="comment"># 会被识别为当前目录下的mysql目录，运行时如果不存在会创建目录</span></span><br></pre></td></tr></table></figure><p><strong>教学演示</strong>，删除并重新创建mysql容器，并完成本地目录挂载：</p><ul><li>挂载<code>/root/mysql/data</code>到容器内的<code>/var/lib/mysql</code>目录</li><li>挂载<code>/root/mysql/init</code>到容器内的<code>/docker-entrypoint-initdb.d</code>目录（初始化的SQL脚本目录）</li><li>挂载<code>/root/mysql/conf</code>到容器内的<code>/etc/mysql/conf.d</code>目录（这个是MySQL配置文件目录）</li></ul><p>在课前资料中已经准备好了mysql的<code>init</code>目录和<code>conf</code>目录：</p><p><img src="https://i0.hdslb.com/bfs/article/69713f9bc4c38c2b3944b2c192ccee9f645325325.png" alt="img"></p><p>以及对应的初始化SQL脚本和配置文件：</p><p><img src="https://i0.hdslb.com/bfs/article/931bc742734f30260b76d6599cdc4fbf645325325.png" alt="img"></p><p><img src="https://i0.hdslb.com/bfs/article/d4f0f313c8f1a24e590d7dd3598a478d645325325.png" alt="img"></p><p>其中，hm.cnf主要是配置了MySQL的默认编码，改为utf8mb4；而hmall.sql则是后面我们要用到的黑马商城项目的初始化SQL脚本。</p><p>我们直接将整个mysql目录上传至虚拟机的<code>/root</code>目录下：</p><p><img src="https://i0.hdslb.com/bfs/article/0247b26ef22104b3889977724cbff547645325325.png" alt="img"></p><p>接下来，我们演示本地目录挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.删除原来的MySQL容器</span></span><br><span class="line">docker <span class="built_in">rm</span> -f mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.进入root目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建并运行新mysql容器，挂载本地目录</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name mysql \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">  -v ./mysql/data:/var/lib/mysql \</span><br><span class="line">  -v ./mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">  -v ./mysql/init:/docker-entrypoint-initdb.d \</span><br><span class="line">  mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看root目录，可以发现~/mysql/data目录已经自动创建好了</span></span><br><span class="line"><span class="built_in">ls</span> -l mysql</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 2 root    root   20 5月  19 15:11 conf</span><br><span class="line">drwxr-xr-x. 7 polkitd root 4096 5月  19 15:11 data</span><br><span class="line">drwxr-xr-x. 2 root    root   23 5月  19 15:11 init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看data目录，会发现里面有大量数据库数据，说明数据库完成了初始化</span></span><br><span class="line"><span class="built_in">ls</span> -l data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.查看MySQL容器内数据</span></span><br><span class="line"><span class="comment"># 5.1.进入MySQL</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql mysql -uroot -p123</span><br><span class="line"><span class="comment"># 5.2.查看编码表</span></span><br><span class="line">show variables like <span class="string">&quot;%char%&quot;</span>;</span><br><span class="line"><span class="comment"># 5.3.结果，发现编码是utf8mb4没有问题</span></span><br><span class="line">+--------------------------+--------------------------------+</span><br><span class="line">| Variable_name            | Value                          |</span><br><span class="line">+--------------------------+--------------------------------+</span><br><span class="line">| character_set_client     | utf8mb4                        |</span><br><span class="line">| character_set_connection | utf8mb4                        |</span><br><span class="line">| character_set_database   | utf8mb4                        |</span><br><span class="line">| character_set_filesystem | binary                         |</span><br><span class="line">| character_set_results    | utf8mb4                        |</span><br><span class="line">| character_set_server     | utf8mb4                        |</span><br><span class="line">| character_set_system     | utf8mb3                        |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql-8.0/charsets/ |</span><br><span class="line">+--------------------------+--------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.查看数据</span></span><br><span class="line"><span class="comment"># 6.1.查看数据库</span></span><br><span class="line">show databases;</span><br><span class="line"><span class="comment"># 结果，hmall是黑马商城数据库</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| hmall              |</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"><span class="comment"># 6.2.切换到hmall数据库</span></span><br><span class="line">use hmall;</span><br><span class="line"><span class="comment"># 6.3.查看表</span></span><br><span class="line">show tables;</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">+-----------------+</span><br><span class="line">| Tables_in_hmall |</span><br><span class="line">+-----------------+</span><br><span class="line">| address         |</span><br><span class="line">| cart            |</span><br><span class="line">| item            |</span><br><span class="line">| order           |</span><br><span class="line">| order_detail    |</span><br><span class="line">| order_logistics |</span><br><span class="line">| pay_order       |</span><br><span class="line">| user            |</span><br><span class="line">+-----------------+</span><br><span class="line"><span class="comment"># 6.4.查看address表数据</span></span><br><span class="line">+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+</span><br><span class="line">| <span class="built_in">id</span> | user_id | province | city   | town     | mobile      | street        | contact   | is_default | notes |</span><br><span class="line">+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+</span><br><span class="line">| 59 |       1 | 北京     | 北京   | 朝阳区    | 13900112222 | 金燕龙办公楼   | 李佳诚    | 0          | NULL  |</span><br><span class="line">| 60 |       1 | 北京     | 北京   | 朝阳区    | 13700221122 | 修正大厦       | 李佳红    | 0          | NULL  |</span><br><span class="line">| 61 |       1 | 上海     | 上海   | 浦东新区  | 13301212233 | 航头镇航头路   | 李佳星    | 1          | NULL  |</span><br><span class="line">| 63 |       1 | 广东     | 佛山   | 永春      | 13301212233 | 永春武馆       | 李晓龙    | 0          | NULL  |</span><br><span class="line">+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="2-3-镜像"><a href="#2-3-镜像" class="headerlink" title="2.3.镜像"></a>2.3.镜像</h2><p>前面我们一直在使用别人准备好的镜像，那如果我要部署一个Java项目，把它打包为一个镜像该怎么做呢？</p><h3 id="2-3-1-镜像结构"><a href="#2-3-1-镜像结构" class="headerlink" title="2.3.1.镜像结构"></a>2.3.1.镜像结构</h3><p>要想自己构建镜像，必须先了解镜像的结构。</p><p>之前我们说过，镜像之所以能让我们快速跨操作系统部署应用而忽略其运行环境、配置，就是因为镜像中包含了程序运行需要的系统函数库、环境、配置、依赖。</p><p>因此，自定义镜像本质就是依次准备好程序运行的基础环境、依赖、应用本身、运行配置等文件，并且打包而成。</p><p>举个例子，我们要从0部署一个Java应用，大概流程是这样：</p><ul><li>准备一个linux服务（CentOS或者Ubuntu均可）</li><li>安装并配置JDK</li><li>上传Jar包</li><li>运行jar包</li></ul><p>那因此，我们打包镜像也是分成这么几步：</p><ul><li>准备Linux运行环境（java项目并不需要完整的操作系统，仅仅是基础运行环境即可）</li><li>安装并配置JDK</li><li>拷贝jar包</li><li>配置启动脚本</li></ul><p>上述步骤中的每一次操作其实都是在生产一些文件（系统运行环境、函数库、配置最终都是磁盘文件），所以<strong>镜像就是一堆文件的集合</strong>。</p><p>但需要注意的是，镜像文件不是随意堆放的，而是按照操作的步骤分层叠加而成，每一层形成的文件都会单独打包并标记一个唯一id，称为<strong>Layer</strong>（<strong>层</strong>）。这样，如果我们构建时用到的某些层其他人已经制作过，就可以直接拷贝使用这些层，而不用重复制作。</p><p>例如，第一步中需要的Linux运行环境，通用性就很强，所以Docker官方就制作了这样的只包含Linux运行环境的镜像。我们在制作java镜像时，就无需重复制作，直接使用Docker官方提供的CentOS或Ubuntu镜像作为基础镜像。然后再搭建其它层即可，这样逐层搭建，最终整个Java项目的镜像结构如图所示：</p><p><img src="https://i0.hdslb.com/bfs/article/1714ad2b5e760fa81b2407903b3a56bd645325325.png" alt="img"></p><h3 id="2-3-2-Dockerfile"><a href="#2-3-2-Dockerfile" class="headerlink" title="2.3.2.Dockerfile"></a>2.3.2.Dockerfile</h3><p>由于制作镜像的过程中，需要逐层处理和打包，比较复杂，所以Docker就提供了自动打包镜像的功能。我们只需要将打包的过程，每一层要做的事情用固定的语法写下来，交给Docker去执行即可。</p><p>而这种记录镜像结构的文件就称为<strong>Dockerfile</strong>，其对应的语法可以参考官方文档：</p><p><a href="https://docs.docker.com/engine/reference/builder/">https://docs.docker.com/engine/reference/builder/</a></p><p>其中的语法比较多，比较常用的有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>指令</strong></th><th style="text-align:left"><strong>说明</strong></th><th style="text-align:left"><strong>示例</strong></th></tr></thead><tbody><tr><td style="text-align:left"><strong>FROM</strong></td><td style="text-align:left">指定基础镜像</td><td style="text-align:left"><code>FROM centos:6</code></td></tr><tr><td style="text-align:left"><strong>ENV</strong></td><td style="text-align:left">设置环境变量，可在后面指令使用</td><td style="text-align:left"><code>ENV key value</code></td></tr><tr><td style="text-align:left"><strong>COPY</strong></td><td style="text-align:left">拷贝本地文件到镜像的指定目录</td><td style="text-align:left"><code>COPY ./xx.jar /tmp/app.jar</code></td></tr><tr><td style="text-align:left"><strong>RUN</strong></td><td style="text-align:left">执行Linux的shell命令，一般是安装过程的命令</td><td style="text-align:left"><code>RUN yum install gcc</code></td></tr><tr><td style="text-align:left"><strong>EXPOSE</strong></td><td style="text-align:left">指定容器运行时监听的端口，是给镜像使用者看的</td><td style="text-align:left">EXPOSE 8080</td></tr><tr><td style="text-align:left"><strong>ENTRYPOINT</strong></td><td style="text-align:left">镜像中应用的启动命令，容器运行时调用</td><td style="text-align:left">ENTRYPOINT java -jar xx.jar</td></tr></tbody></table></div><p>例如，要基于Ubuntu镜像来构建一个Java应用，其Dockerfile内容如下：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span></span><br><span class="line"><span class="comment"># 配置环境变量，JDK的安装目录、容器内时区</span></span><br><span class="line"><span class="keyword">ENV</span> JAVA_DIR=/usr/local</span><br><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line"><span class="comment"># 拷贝jdk和java项目的包</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./jdk8.tar.gz <span class="variable">$JAVA_DIR</span>/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./docker-demo.jar /tmp/app.jar</span></span><br><span class="line"><span class="comment"># 设定时区</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span></span><br><span class="line"><span class="comment"># 安装JDK</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> <span class="variable">$JAVA_DIR</span> \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; tar -xf ./jdk8.tar.gz \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; <span class="built_in">mv</span> ./jdk1.8.0_144 ./java8</span></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="keyword">ENV</span> JAVA_HOME=$JAVA_DIR/java8</span><br><span class="line"><span class="keyword">ENV</span> PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"><span class="comment"># 指定项目监听的端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="comment"># 入口，java项目的启动命令</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>同学们思考一下：以后我们会有很多很多java项目需要打包为镜像，他们都需要Linux系统环境、JDK环境这两层，只有上面的3层不同（因为jar包不同）。如果每次制作java镜像都重复制作前两层镜像，是不是很麻烦。</p><p>所以，就有人提供了基础的系统加JDK环境，我们在此基础上制作java镜像，就可以省去JDK的配置了：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">11.0</span>-jre-buster</span><br><span class="line"><span class="comment"># 设定时区</span></span><br><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span></span><br><span class="line"><span class="comment"># 拷贝jar包</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> docker-demo.jar /app.jar</span></span><br><span class="line"><span class="comment"># 入口</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>是不是简单多了。</p><h3 id="2-3-3-构建镜像"><a href="#2-3-3-构建镜像" class="headerlink" title="2.3.3.构建镜像"></a>2.3.3.构建镜像</h3><p>当Dockerfile文件写好以后，就可以利用命令来构建镜像了。</p><p>在课前资料中，我们准备好了一个demo项目及对应的Dockerfile：</p><p><img src="https://i0.hdslb.com/bfs/article/340547d80e3ad12520e50f6d300e710c645325325.png" alt="img"></p><p>首先，我们将课前资料提供的<code>docker-demo.jar</code>包以及<code>Dockerfile</code>拷贝到虚拟机的<code>/root/demo</code>目录：</p><p><img src="https://i0.hdslb.com/bfs/article/e4b279f2def1b5716fcaa9546c01b844645325325.png" alt="img"></p><p>然后，执行命令，构建镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入镜像目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/demo</span><br><span class="line"><span class="comment"># 开始构建</span></span><br><span class="line">docker build -t docker-demo:1.0 .</span><br></pre></td></tr></table></figure><p>命令说明：</p><ul><li><code>docker build</code>: 就是构建一个docker镜像</li><li><code>-t docker-demo:1.0</code> ：<code>-t</code>参数是指定镜像的名称（<code>repository</code>和<code>tag</code>）</li><li><code>.</code> : 最后的点是指构建时Dockerfile所在路径，由于我们进入了demo目录，所以指定的是<code>.</code>代表当前目录，也可以直接指定Dockerfile目录：<ul><li>```Bash<h1 id="直接指定Dockerfile目录"><a href="#直接指定Dockerfile目录" class="headerlink" title="直接指定Dockerfile目录"></a>直接指定Dockerfile目录</h1>docker build -t docker-demo:1.0 /root/demo<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">结果：</span><br><span class="line"></span><br><span class="line">![img](https://i0.hdslb.com/bfs/article/95e8e280adadcc6721533da831610219645325325.png)</span><br><span class="line"></span><br><span class="line">查看镜像列表：</span><br><span class="line"></span><br><span class="line">```Bash</span><br><span class="line"># 查看镜像列表：</span><br><span class="line">docker images</span><br><span class="line"># 结果</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">docker-demo   1.0       d6ab0b9e64b9   27 minutes ago   327MB</span><br><span class="line">nginx         latest    605c77e624dd   16 months ago    141MB</span><br><span class="line">mysql         latest    3218b38490ce   17 months ago    516MB</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>然后尝试运行该镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建并运行容器</span></span><br><span class="line">docker run -d --name <span class="built_in">dd</span> -p 8080:8080 docker-demo:1.0</span><br><span class="line"><span class="comment"># 2.查看容器</span></span><br><span class="line">dps</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">CONTAINER ID   IMAGE             PORTS                                                  STATUS         NAMES</span><br><span class="line">78a000447b49   docker-demo:1.0   0.0.0.0:8080-&gt;8080/tcp, :::8090-&gt;8090/tcp              Up 2 seconds   <span class="built_in">dd</span></span><br><span class="line">f63cfead8502   mysql             0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   Up 2 hours     mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.访问</span></span><br><span class="line">curl localhost:8080/hello/count</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">&lt;h5&gt;欢迎访问黑马商城, 这是您第1次访问&lt;h5&gt;</span><br></pre></td></tr></table></figure><h2 id="2-4-网络"><a href="#2-4-网络" class="headerlink" title="2.4.网络"></a>2.4.网络</h2><p>上节课我们创建了一个Java项目的容器，而Java项目往往需要访问其它各种中间件，例如MySQL、Redis等。现在，我们的容器之间能否互相访问呢？我们来测试一下</p><p>首先，我们查看下MySQL容器的详细信息，重点关注其中的网络IP地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.用基本命令，寻找Networks.bridge.IPAddress属性</span></span><br><span class="line">docker inspect mysql</span><br><span class="line"><span class="comment"># 也可以使用format过滤结果</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;println .IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> mysql</span><br><span class="line"><span class="comment"># 得到IP地址如下：</span></span><br><span class="line">172.17.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.然后通过命令进入dd容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="built_in">dd</span> bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.在容器内，通过ping命令测试网络</span></span><br><span class="line">ping 172.17.0.2</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.053 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.059 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.058 ms</span><br></pre></td></tr></table></figure><p>发现可以互联，没有问题。</p><p>但是，容器的网络IP其实是一个虚拟的IP，其值并不固定与某一个容器绑定，如果我们在开发时写死某个IP，而在部署时很可能MySQL容器的IP会发生变化，连接会失败。</p><p>所以，我们必须借助于docker的网络功能来解决这个问题，官方文档：</p><p><a href="https://docs.docker.com/engine/reference/commandline/network/">https://docs.docker.com/engine/reference/commandline/network/</a></p><p>常见命令有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>命令</strong></th><th style="text-align:left"><strong>说明</strong></th><th style="text-align:left"><strong>文档地址</strong></th></tr></thead><tbody><tr><td style="text-align:left">docker network create</td><td style="text-align:left">创建一个网络</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_create/">docker network create</a></td></tr><tr><td style="text-align:left">docker network ls</td><td style="text-align:left">查看所有网络</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_ls/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker network rm</td><td style="text-align:left">删除指定网络</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_rm/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker network prune</td><td style="text-align:left">清除未使用的网络</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_prune/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker network connect</td><td style="text-align:left">使指定容器连接加入某网络</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_connect/">docs.docker.com</a></td></tr><tr><td style="text-align:left">docker network disconnect</td><td style="text-align:left">使指定容器连接离开某网络</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_disconnect/">docker network disconnect</a></td></tr><tr><td style="text-align:left">docker network inspect</td><td style="text-align:left">查看网络详细信息</td><td style="text-align:left"><a href="https://docs.docker.com/engine/reference/commandline/network_inspect/">docker network inspect</a></td></tr></tbody></table></div><p>教学演示：自定义网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.首先通过命令创建一个网络</span></span><br><span class="line">docker network create hmall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.然后查看网络</span></span><br><span class="line">docker network <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">639bc44d0a87   bridge    bridge    <span class="built_in">local</span></span><br><span class="line">403f16ec62a2   hmall     bridge    <span class="built_in">local</span></span><br><span class="line">0dc0f72a0fbb   host      host      <span class="built_in">local</span></span><br><span class="line">cd8d3e8df47b   none      null      <span class="built_in">local</span></span><br><span class="line"><span class="comment"># 其中，除了hmall以外，其它都是默认的网络</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.让dd和mysql都加入该网络，注意，在加入网络时可以通过--alias给容器起别名</span></span><br><span class="line"><span class="comment"># 这样该网络内的其它容器可以用别名互相访问！</span></span><br><span class="line"><span class="comment"># 3.1.mysql容器，指定别名为db，另外每一个容器都有一个别名是容器名</span></span><br><span class="line">docker network connect hmall mysql --<span class="built_in">alias</span> db</span><br><span class="line"><span class="comment"># 3.2.db容器，也就是我们的java项目</span></span><br><span class="line">docker network connect hmall <span class="built_in">dd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.进入dd容器，尝试利用别名访问db</span></span><br><span class="line"><span class="comment"># 4.1.进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="built_in">dd</span> bash</span><br><span class="line"><span class="comment"># 4.2.用db别名访问</span></span><br><span class="line">ping db</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">PING db (172.18.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=1 ttl=64 time=0.070 ms</span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=2 ttl=64 time=0.056 ms</span><br><span class="line"><span class="comment"># 4.3.用容器名访问</span></span><br><span class="line">ping mysql</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">PING mysql (172.18.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=1 ttl=64 time=0.044 ms</span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=2 ttl=64 time=0.054 ms</span><br></pre></td></tr></table></figure><p>OK，现在无需记住IP地址也可以实现容器互联了。</p><p><strong>总结</strong>：</p><ul><li>在自定义网络中，可以给容器起多个别名，默认的别名是容器名本身</li><li>在同一个自定义网络中的容器，可以通过别名互相访问</li></ul><h1 id="3-项目部署"><a href="#3-项目部署" class="headerlink" title="3.项目部署"></a>3.项目部署</h1><p>好了，我们已经熟悉了Docker的基本用法，接下来可以尝试部署项目了。</p><p>在课前资料中已经提供了一个黑马商城项目给大家，如图：</p><p>项目说明：</p><ul><li>hmall：商城的后端代码</li><li>hmall-portal：商城用户端的前端代码</li><li>hmall-admin：商城管理端的前端代码</li></ul><p>部署的容器及端口说明：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>项目</strong></th><th style="text-align:left"><strong>容器名</strong></th><th style="text-align:left"><strong>端口</strong></th><th style="text-align:left"><strong>备注</strong></th></tr></thead><tbody><tr><td style="text-align:left">hmall</td><td style="text-align:left">hmall</td><td style="text-align:left">8080</td><td style="text-align:left">黑马商城后端API入口</td></tr><tr><td style="text-align:left">hmall-portal</td><td style="text-align:left">nginx</td><td style="text-align:left">18080</td><td style="text-align:left">黑马商城用户端入口</td></tr><tr><td style="text-align:left">hmall-admin</td><td style="text-align:left">18081</td><td style="text-align:left">黑马商城管理端入口</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">mysql</td><td style="text-align:left">mysql</td><td style="text-align:left">3306</td><td style="text-align:left">数据库</td></tr></tbody></table></div><p>在正式部署前，我们先删除之前的nginx、dd两个容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f nginx <span class="built_in">dd</span></span><br></pre></td></tr></table></figure><p>mysql容器中已经准备好了商城的数据，所以就不再删除了。</p><h2 id="3-1-部署Java项目"><a href="#3-1-部署Java项目" class="headerlink" title="3.1.部署Java项目"></a>3.1.部署Java项目</h2><p><code>hmall</code>项目是一个maven聚合项目，使用IDEA打开<code>hmall</code>项目，查看项目结构如图：</p><p><img src="https://i0.hdslb.com/bfs/article/57df5ad4e2f3802d1791227f0bf02e81645325325.png" alt="img"></p><p>我们要部署的就是其中的<code>hm-service</code>，其中的配置文件采用了多环境的方式：</p><p><img src="https://i0.hdslb.com/bfs/article/e1384cf237e137cd6db7c6228dbf9c16645325325.png" alt="img"></p><p>其中的<code>application-dev.yaml</code>是部署到开发环境的配置，<code>application-local.yaml</code>是本地运行时的配置。</p><p>查看application.yaml，你会发现其中的JDBC地址并未写死，而是读取变量：</p><p><img src="https://i0.hdslb.com/bfs/article/79f016ab015522b045a9e56ebabf1bb6645325325.png" alt="img"></p><p>这两个变量在<code>application-dev.yaml</code>和<code>application-local.yaml</code>中并不相同：</p><p><img src="https://i0.hdslb.com/bfs/article/d2583b6e4a043ee5fce902890043e84b645325325.png" alt="img"></p><p>在dev开发环境（也就是Docker部署时）采用了mysql作为地址，刚好是我们的mysql容器名，只要两者在一个网络，就一定能互相访问。</p><p>我们将项目打包：</p><p><img src="https://i0.hdslb.com/bfs/article/5ffdfc84dc1673a826a0a2c1074a33e3645325325.png" alt="img"></p><p>结果：</p><p><img src="https://i0.hdslb.com/bfs/article/4932ec87eddd453fdd468eaacc04ae42645325325.png" alt="img"></p><p>将<code>hm-service</code>目录下的<code>Dockerfile</code>和<code>hm-service/target</code>目录下的<code>hm-service.jar</code>一起上传到虚拟机的<code>root</code>目录：</p><p><img src="https://i0.hdslb.com/bfs/article/c8b495ce1034c6ce3e1e2e1c228ce518645325325.png" alt="img"></p><p>部署项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.构建项目镜像，不指定tag，则默认为latest</span></span><br><span class="line">docker build -t hmall .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">hmall         latest    0bb07b2c34b9   43 seconds ago   362MB</span><br><span class="line">docker-demo   1.0       49743484da68   24 hours ago     327MB</span><br><span class="line">nginx         latest    605c77e624dd   16 months ago    141MB</span><br><span class="line">mysql         latest    3218b38490ce   17 months ago    516MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建并运行容器，并通过--network将其加入hmall网络，这样才能通过容器名访问mysql</span></span><br><span class="line">docker run -d --name hmall --network hmall -p 8080:8080 hmall</span><br></pre></td></tr></table></figure><p>测试，通过浏览器访问：<a href="http://你的虚拟机地址:8080/search/list">http://你的虚拟机地址:8080/search/list</a></p><h2 id="3-2-部署前端"><a href="#3-2-部署前端" class="headerlink" title="3.2.部署前端"></a>3.2.部署前端</h2><p><code>hmall-portal</code>和<code>hmall-admin</code>是前端代码，需要基于nginx部署。在课前资料中已经给大家提供了nginx的部署目录：</p><p><img src="https://i0.hdslb.com/bfs/article/4c0e95846cc679e855c3e31ab773b662645325325.png" alt="img"></p><p>其中：</p><ul><li><code>html</code>是静态资源目录，我们需要把<code>hmall-portal</code>以及<code>hmall-admin</code>都复制进去</li><li><code>nginx.conf</code>是nginx的配置文件，主要是完成对<code>html</code>下的两个静态资源目录做代理</li></ul><p>我们现在要做的就是把整个nginx目录上传到虚拟机的<code>/root</code>目录下：</p><p><img src="https://i0.hdslb.com/bfs/article/ae0a0e7d419ca1cd07e8c615f09e0199645325325.png" alt="img"></p><p>然后创建nginx容器并完成两个挂载：</p><ul><li>把<code>/root/nginx/nginx.conf</code>挂载到<code>/etc/nginx/nginx.conf</code></li><li>把<code>/root/nginx/html</code>挂载到<code>/usr/share/nginx/html</code></li></ul><p>由于需要让nginx同时代理hmall-portal和hmall-admin两套前端资源，因此我们需要暴露两个端口：</p><ul><li>18080：对应hmall-portal</li><li>18081：对应hmall-admin</li></ul><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name nginx \</span><br><span class="line">  -p 18080:18080 \</span><br><span class="line">  -p 18081:18081 \</span><br><span class="line">  -v /root/nginx/html:/usr/share/nginx/html \</span><br><span class="line">  -v /root/nginx/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">  --network hmall \</span><br><span class="line">  nginx</span><br></pre></td></tr></table></figure><p>测试，通过浏览器访问：<a href="http://你的虚拟机ip:18080">http://你的虚拟机ip:18080</a></p><p><img src="https://i0.hdslb.com/bfs/article/65a25367961ad775cd893a1873c8ba3f645325325.png" alt="img"></p><h2 id="3-3-DockerCompose"><a href="#3-3-DockerCompose" class="headerlink" title="3.3.DockerCompose"></a>3.3.DockerCompose</h2><p>大家可以看到，我们部署一个简单的java项目，其中包含3个容器：</p><ul><li>MySQL</li><li>Nginx</li><li>Java项目</li></ul><p>而稍微复杂的项目，其中还会有各种各样的其它中间件，需要部署的东西远不止3个。如果还像之前那样手动的逐一部署，就太麻烦了。</p><p>而Docker Compose就可以帮助我们实现<strong>多个相互关联的Docker容器的快速部署</strong>。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器。</p><h3 id="3-3-1-基本语法"><a href="#3-3-1-基本语法" class="headerlink" title="3.3.1.基本语法"></a>3.3.1.基本语法</h3><p>docker-compose.yml文件的基本语法可以参考官方文档：</p><p><a href="https://docs.docker.com/compose/compose-file/compose-file-v3/">https://docs.docker.com/compose/compose-file/compose-file-v3/</a></p><p>docker-compose文件中可以定义多个相互关联的应用容器，每一个应用容器被称为一个服务（service）。由于service就是在定义某个应用的运行时参数，因此与<code>docker run</code>参数非常相似。</p><p>举例来说，用docker run部署MySQL的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name mysql \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">  -v ./mysql/data:/var/lib/mysql \</span><br><span class="line">  -v ./mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">  -v ./mysql/init:/docker-entrypoint-initdb.d \</span><br><span class="line">  --network hmall</span><br><span class="line">  mysql</span><br></pre></td></tr></table></figure><p>如果用<code>docker-compose.yml</code>文件来定义，就是这样：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/conf:/etc/mysql/conf.d&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/data:/var/lib/mysql&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">new</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">new:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hmall</span></span><br></pre></td></tr></table></figure><p>对比如下：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>docker run 参数</strong></th><th style="text-align:left"><strong>docker compose 指令</strong></th><th style="text-align:left"><strong>说明</strong></th></tr></thead><tbody><tr><td style="text-align:left">—name</td><td style="text-align:left">container_name</td><td style="text-align:left">容器名称</td></tr><tr><td style="text-align:left">-p</td><td style="text-align:left">ports</td><td style="text-align:left">端口映射</td></tr><tr><td style="text-align:left">-e</td><td style="text-align:left">environment</td><td style="text-align:left">环境变量</td></tr><tr><td style="text-align:left">-v</td><td style="text-align:left">volumes</td><td style="text-align:left">数据卷配置</td></tr><tr><td style="text-align:left">—network</td><td style="text-align:left">networks</td><td style="text-align:left">网络</td></tr></tbody></table></div><p>明白了其中的对应关系，相信编写<code>docker-compose</code>文件应该难不倒大家。</p><p>黑马商城部署文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/conf:/etc/mysql/conf.d&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/data:/var/lib/mysql&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/init:/docker-entrypoint-initdb.d&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hm-net</span></span><br><span class="line">  <span class="attr">hmall:</span></span><br><span class="line">    <span class="attr">build:</span> </span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hmall</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hm-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;18080:18080&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;18081:18081&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./nginx/nginx.conf:/etc/nginx/nginx.conf&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./nginx/html:/usr/share/nginx/html&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hmall</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hm-net</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">hm-net:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hmall</span></span><br></pre></td></tr></table></figure><h3 id="3-3-2-基础命令"><a href="#3-3-2-基础命令" class="headerlink" title="3.3.2.基础命令"></a>3.3.2.基础命令</h3><p>编写好docker-compose.yml文件，就可以部署项目了。常见的命令：</p><p><a href="https://docs.docker.com/compose/reference/">https://docs.docker.com/compose/reference/</a></p><p>基本语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose [OPTIONS] [COMMAND]</span><br></pre></td></tr></table></figure><p>其中，OPTIONS和COMMAND都是可选参数，比较常见的有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>类型</strong></th><th style="text-align:left"><strong>参数或指令</strong></th><th style="text-align:left"><strong>说明</strong></th></tr></thead><tbody><tr><td style="text-align:left">Options</td><td style="text-align:left">-f</td><td style="text-align:left">指定compose文件的路径和名称</td></tr><tr><td style="text-align:left">-p</td><td style="text-align:left">指定project名称。project就是当前compose文件中设置的多个service的集合，是逻辑概念</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">Commands</td><td style="text-align:left">up</td><td style="text-align:left">创建并启动所有service容器</td></tr><tr><td style="text-align:left">down</td><td style="text-align:left">停止并移除所有容器、网络</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">ps</td><td style="text-align:left">列出所有启动的容器</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">logs</td><td style="text-align:left">查看指定容器的日志</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">stop</td><td style="text-align:left">停止容器</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">start</td><td style="text-align:left">启动容器</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">restart</td><td style="text-align:left">重启容器</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">top</td><td style="text-align:left">查看运行的进程</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">exec</td><td style="text-align:left">在指定的运行中容器中执行命令</td></tr></tbody></table></div><p>教学演示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.进入root目录</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.删除旧容器</span></span><br><span class="line">docker <span class="built_in">rm</span> -f $(docker ps -qa)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.删除hmall镜像</span></span><br><span class="line">docker rmi hmall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.清空MySQL数据</span></span><br><span class="line"><span class="built_in">rm</span> -rf mysql/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.启动所有, -d 参数是后台启动</span></span><br><span class="line">docker compose up -d</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">[+] Building 15.5s (8/8) FINISHED</span><br><span class="line"> =&gt; [internal] load build definition from Dockerfile                                    0.0s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 358B                                                    0.0s</span><br><span class="line"> =&gt; [internal] load .dockerignore                                                       0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B                                                         0.0s</span><br><span class="line"> =&gt; [internal] load metadata <span class="keyword">for</span> docker.io/library/openjdk:11.0-jre-buster             15.4s</span><br><span class="line"> =&gt; [1/3] FROM docker.io/library/openjdk:11.0-jre-buster@sha256:3546a17e6fb4ff4fa681c3  0.0s</span><br><span class="line"> =&gt; [internal] load build context                                                       0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 98B                                                        0.0s</span><br><span class="line"> =&gt; CACHED [2/3] RUN <span class="built_in">ln</span> -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="built_in">echo</span>   0.0s</span><br><span class="line"> =&gt; CACHED [3/3] COPY hm-service.jar /app.jar                                           0.0s</span><br><span class="line"> =&gt; exporting to image                                                                  0.0s</span><br><span class="line"> =&gt; =&gt; exporting layers                                                                 0.0s</span><br><span class="line"> =&gt; =&gt; writing image sha256:32eebee16acde22550232f2eb80c69d2ce813ed099640e4cfed2193f71  0.0s</span><br><span class="line"> =&gt; =&gt; naming to docker.io/library/root-hmall                                           0.0s</span><br><span class="line">[+] Running 4/4</span><br><span class="line"> ✔ Network hmall    Created                                                             0.2s</span><br><span class="line"> ✔ Container mysql  Started                                                             0.5s</span><br><span class="line"> ✔ Container hmall  Started                                                             0.9s</span><br><span class="line"> ✔ Container nginx  Started                                                             1.5s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.查看镜像</span></span><br><span class="line">docker compose images</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">CONTAINER           REPOSITORY          TAG                 IMAGE ID            SIZE</span><br><span class="line">hmall               root-hmall          latest              32eebee16acd        362MB</span><br><span class="line">mysql               mysql               latest              3218b38490ce        516MB</span><br><span class="line">nginx               nginx               latest              605c77e624dd        141MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.查看容器</span></span><br><span class="line">docker compose ps</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">NAME                IMAGE               COMMAND                  SERVICE             CREATED             STATUS              PORTS</span><br><span class="line">hmall               root-hmall          <span class="string">&quot;java -jar /app.jar&quot;</span>     hmall               54 seconds ago      Up 52 seconds       0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp</span><br><span class="line">mysql               mysql               <span class="string">&quot;docker-entrypoint.s…&quot;</span>   mysql               54 seconds ago      Up 53 seconds       0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp</span><br><span class="line">nginx               nginx               <span class="string">&quot;/docker-entrypoint.…&quot;</span>   nginx               54 seconds ago      Up 52 seconds       80/tcp, 0.0.0.0:18080-18081-&gt;18080-18081/tcp, :::18080-18081-&gt;18080-18081/tcp</span><br></pre></td></tr></table></figure><p>打开浏览器，访问：<a href="http://yourIp:8080">http://yourIp:8080</a></p>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MybatisPlus学习笔记</title>
      <link href="/posts/18374.html"/>
      <url>/posts/18374.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="1-快速入门"><a href="#1-快速入门" class="headerlink" title="1. 快速入门"></a>1. 快速入门</h1><h2 id="1-1-常见注解"><a href="#1-1-常见注解" class="headerlink" title="1.1 常见注解"></a>1.1 常见注解</h2><p>在刚刚的入门案例中，我们仅仅引入了依赖，继承了 <code>BaseMapper</code>就能使用 MybatisPlus，非常简单。但是问题来了： MybatisPlus如何知道我们要查询的是哪张表？表中有哪些字段呢？</p><p>大家回忆一下，UserMapper 在继承 BaseMapper 的时候指定了一个泛型：</p><p><img src="https://i0.hdslb.com/bfs/article/908d7bb2784a2898ef4e62058a34a8ae645325325.png" alt="img"></p><p>泛型中的 User 就是与数据库对应的 PO。</p><p>Mybatis Plus 就是根据 PO 实体的信息来推断出表的信息，从而生成 SQL 的。默认情况下：</p><ul><li>MybatisPlus 会把 PO 实体的类名驼峰转下划线作为表名</li><li>MybatisPlus 会把 PO 实体的所有变量名驼峰转下划线作为表的字段名，并根据变量类型推断字段类型</li><li>MybatisPlus 会把名为 id 的字段作为主键</li></ul><p>但很多情况下，默认的实现与实际场景不符，因此 MybatisPlus 提供了一些注解便于我们声明表信息。</p><h3 id="1-1-1-TableName"><a href="#1-1-1-TableName" class="headerlink" title="1.1.1 @TableName"></a>1.1.1 <strong>@TableName</strong></h3><p>说明：</p><ul><li>描述：表名注解，标识实体类对应的表</li><li>使用位置：实体类</li></ul><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TableName 注解除了指定表名以外，还可以指定很多其它属性：</p><div class="table-container"><table><thead><tr><th><strong>属性</strong></th><th><strong>类型</strong></th><th><strong>必须指定</strong></th><th><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>value</td><td>String</td><td>否</td><td>“”</td><td>表名</td></tr><tr><td>schema</td><td>String</td><td>否</td><td>“”</td><td>schema</td></tr><tr><td>keepGlobalPrefix</td><td>boolean</td><td>否</td><td>false</td><td>是否保持使用全局的 tablePrefix 的值（当全局 tablePrefix 生效时）</td></tr><tr><td>resultMap</td><td>String</td><td>否</td><td>“”</td><td>xml 中 resultMap 的 id（用于满足特定类型的实体类对象绑定）</td></tr><tr><td>autoResultMap</td><td>boolean</td><td>否</td><td>false</td><td>是否自动构建 resultMap 并使用（如果设置 resultMap 则不会进行 resultMap 的自动构建与注入）</td></tr><tr><td>excludeProperty</td><td>String[]</td><td>否</td><td>{}</td><td>需要排除的属性名 @since 3.3.1</td></tr></tbody></table></div><h3 id="1-1-2-TableId"><a href="#1-1-2-TableId" class="headerlink" title="1.1.2 @TableId"></a>1.1.2 <strong>@TableId</strong></h3><p>说明：</p><ul><li>描述：主键注解，标识实体类中的主键字段</li><li>使用位置：实体类的主键字段</li></ul><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>TableId</code>注解支持两个属性：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>属性</strong></th><th style="text-align:left"><strong>类型</strong></th><th style="text-align:left"><strong>必须指定</strong></th><th style="text-align:left"><strong>默认值</strong></th><th style="text-align:left"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left">value</td><td style="text-align:left">String</td><td style="text-align:left">否</td><td style="text-align:left">“”</td><td style="text-align:left">表名</td></tr><tr><td style="text-align:left">type</td><td style="text-align:left">Enum</td><td style="text-align:left">否</td><td style="text-align:left">IdType.NONE</td><td style="text-align:left">指定主键类型</td></tr></tbody></table></div><p><code>IdType</code>支持的类型有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>值</strong></th><th style="text-align:left"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left">AUTO</td><td style="text-align:left">数据库 ID 自增</td></tr><tr><td style="text-align:left">NONE</td><td style="text-align:left">无状态，该类型为未设置主键类型（注解里等于跟随全局，全局里约等于 INPUT）</td></tr><tr><td style="text-align:left">INPUT</td><td style="text-align:left">insert 前自行 set 主键值</td></tr><tr><td style="text-align:left">ASSIGN_ID</td><td style="text-align:left">分配 ID(主键类型为 Number(Long 和 Integer)或 String)(since 3.3.0),使用接口IdentifierGenerator的方法nextId(默认实现类为DefaultIdentifierGenerator雪花算法)</td></tr><tr><td style="text-align:left">ASSIGN_UUID</td><td style="text-align:left">分配 UUID,主键类型为 String(since 3.3.0),使用接口IdentifierGenerator的方法nextUUID(默认 default 方法)</td></tr><tr><td style="text-align:left">ID_WORKER</td><td style="text-align:left">分布式全局唯一 ID 长整型类型(please use ASSIGN_ID)</td></tr><tr><td style="text-align:left">UUID</td><td style="text-align:left">32 位 UUID 字符串(please use ASSIGN_UUID)</td></tr><tr><td style="text-align:left">ID_WORKER_STR</td><td style="text-align:left">分布式全局唯一 ID 字符串类型(please use ASSIGN_ID)</td></tr></tbody></table></div><p>这里比较常见的有三种：</p><ul><li><code>AUTO</code>：利用数据库的id自增长</li><li><code>INPUT</code>：手动生成id</li><li><code>ASSIGN_ID</code>：雪花算法生成<code>Long</code>类型的全局唯一id，这是默认的ID策略</li></ul><h3 id="1-1-3-TableField"><a href="#1-1-3-TableField" class="headerlink" title="1.1.3  @TableField"></a>1.1.3  <strong>@TableField</strong></h3><p>说明：</p><blockquote><p>描述：普通字段注解</p></blockquote><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@TableField(&quot;isMarried&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isMarried;</span><br><span class="line">    <span class="meta">@TableField(&quot;concat&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String concat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般情况下我们并不需要给字段添加 <code>@TableField</code> 注解，一些特殊情况除外：</p><ul><li>成员变量名与数据库字段名不一致</li><li>成员变量是以 <code>isXXX</code> 命名，按照 <code>JavaBean</code> 的规范，<code>MybatisPlus</code> 识别字段时会把 <code>is</code> 去除，这就导致与数据库不符。</li><li>成员变量名与数据库一致，但是与数据库的关键字冲突。使用 <code>@TableField</code>注解给字段名添加````转义</li></ul><p>支持的其它属性如下：</p><p><img src="https://i0.hdslb.com/bfs/article/5c8452a9b933bebd25f94405e0812d25645325325.png" alt="image-20240812115447764"></p><h2 id="1-2-常见配置"><a href="#1-2-常见配置" class="headerlink" title="1.2 常见配置"></a>1.2 常见配置</h2><p>大多数的配置都有默认值，因此我们都无需配置。但还有一些是没有默认值的，例如:</p><ul><li>实体类的别名扫描包</li><li>全局 id 类型</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.itheima.mp.domain.po</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span> <span class="comment"># 全局id类型为自增长</span></span><br></pre></td></tr></table></figure><p>需要注意的是，MyBatisPlus 也支持手写 SQL 的，而 mapper 文件的读取地址可以自己配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">&quot;classpath*:/mapper/**/*.xml&quot;</span> <span class="comment"># Mapper.xml文件地址，当前这个是默认值。</span></span><br></pre></td></tr></table></figure><p>可以看到默认值是 <code>classpath*:/mapper/**/*.xml</code>，也就是说我们只要把 mapper.xml 文件放置这个目录下就一定会被加载。</p><h1 id="2-核心功能"><a href="#2-核心功能" class="headerlink" title="2. 核心功能"></a>2. 核心功能</h1><h2 id="2-1-条件构造器"><a href="#2-1-条件构造器" class="headerlink" title="2.1 条件构造器"></a>2.1 条件构造器</h2><p>除了新增以外，修改、删除、查询的 SQL 语句都需要指定 where 条件。因此 BaseMapper 中提供的相关方法除了以 <code>id</code> 作为<code>where</code>条件以外，还支持更加复杂的 <code>where</code> 条件。</p><p><img src="https://i0.hdslb.com/bfs/article/83b88d49024ae990ae7a846a5064d544645325325.png" alt="img"></p><p>参数中的 <code>Wrapper</code> 就是条件构造的抽象类，其下有很多默认实现，继承关系如图：</p><p><img src="https://i0.hdslb.com/bfs/article/d541317263975a081620f75986e222a3645325325.png" alt="img"></p><p><code>Wrapper</code> 的子类 <code>AbstractWrapper</code> 提供了 where 中包含的所有条件构造方法：</p><p><img src="https://i0.hdslb.com/bfs/article/818872329e442d41009e962926cb1ccf645325325.png" alt="img"></p><p>而 QueryWrapper 在 AbstractWrapper 的基础上拓展了一个select 方法，允许指定查询字段：</p><p><img src="https://i0.hdslb.com/bfs/article/99f02662a31cec7c3c3d263d29285e48645325325.png" alt="img"></p><p>而 UpdateWrapper 在 AbstractWrapper 的基础上拓展了一个 set方法，允许指定 SQL 中的 SET 部分：</p><p><img src="https://i0.hdslb.com/bfs/article/91bc8b8eab09babcb736a7f21a417fd1645325325.png" alt="img"></p><p>接下来，我们就来看看如何利用 <code>Wrapper</code> 实现复杂查询。</p><h3 id="2-1-1-QueryWrapper"><a href="#2-1-1-QueryWrapper" class="headerlink" title="2.1.1 QueryWrapper"></a>2.1.1 QueryWrapper</h3><p>无论是修改、删除、查询，都可以使用 QueryWrapper 来构建查询条件。接下来看一些例子： </p><p><strong>查询</strong>：查询出名字中带 <code>o</code> 的，存款大于等于 1000 元的人。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testQueryWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.构建查询条件 where name like &quot;%o%&quot; AND balance &gt;= 1000</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;()</span><br><span class="line">            .select(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;username&quot;</span>, <span class="string">&quot;info&quot;</span>, <span class="string">&quot;balance&quot;</span>)</span><br><span class="line">            .like(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">            .ge(<span class="string">&quot;balance&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">    <span class="comment">// 2.查询数据</span></span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(wrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>更新</strong>：更新用户名为jack的用户的余额为2000，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testUpdateByQueryWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.构建查询条件 where name = &quot;Jack&quot;</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;().eq(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">    <span class="comment">// 2.更新数据，user中非null字段都会作为set语句</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setBalance(<span class="number">2000</span>);</span><br><span class="line">    userMapper.update(user, wrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-2-UpdateWrapper"><a href="#2-1-2-UpdateWrapper" class="headerlink" title="2.1.2 UpdateWrapper"></a><strong>2.1.2 UpdateWrapper</strong></h3><p>基于 BaseMapper 中的 update 方法更新时只能直接赋值，对于一些复杂的需求就难以实现。 例如：更新id为 <code>1,2,4</code> 的用户的余额，扣 200，对应的 SQL 应该是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user <span class="type">SET</span> <span class="variable">balance</span> <span class="operator">=</span> balance - <span class="number">200</span> WHERE id <span class="title function_">in</span> <span class="params">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>)</span></span><br></pre></td></tr></table></figure><p>SET 的赋值结果是基于字段现有值的，这个时候就要利用UpdateWrapper 中的 setSql 功能了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testUpdateWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;Long&gt; ids = List.of(<span class="number">1L</span>, <span class="number">2L</span>, <span class="number">4L</span>);</span><br><span class="line">    <span class="comment">// 1.生成SQL</span></span><br><span class="line">    UpdateWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;User&gt;()</span><br><span class="line">            .setSql(<span class="string">&quot;balance = balance - 200&quot;</span>) <span class="comment">// SET balance = balance - 200</span></span><br><span class="line">            .in(<span class="string">&quot;id&quot;</span>, ids); <span class="comment">// WHERE id in (1, 2, 4)</span></span><br><span class="line">        <span class="comment">// 2.更新，注意第一个参数可以给null，也就是不填更新字段和数据，</span></span><br><span class="line">    <span class="comment">// 而是基于UpdateWrapper中的setSQL来更新</span></span><br><span class="line">    userMapper.update(<span class="literal">null</span>, wrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-3-LambdaQueryWrapper"><a href="#2-1-3-LambdaQueryWrapper" class="headerlink" title="2.1.3 LambdaQueryWrapper"></a><strong>2.1.3 LambdaQueryWrapper</strong></h3><p>无论是 QueryWrapper 还是 UpdateWrapper 在构造条件的时候都需要写死字段名称，会出现字符串 <code>魔法值</code> 。这在编程规范中显然是不推荐的。 那怎么样才能不写字段名，又能知道字段名呢？</p><p>其中一种办法是基于变量的 <code>gettter</code> 方法结合反射技术。因此我们只要将条件对应的字段的 <code>getter</code> 方法传递给 MybatisPlus，它就能计算出对应的变量名了。而传递方法可以使用 JDK8 中的 <code>方法引用</code> 和 <code>Lambda</code> 表达式。 因此 MybatisPlus 又提供了一套基于 Lambda 的 Wrapper，包含两个：</p><ul><li>LambdaQueryWrapper</li><li>LambdaUpdateWrapper</li></ul><p>分别对应 QueryWrapper 和 UpdateWrapper</p><p>其使用方式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testLambdaQueryWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.构建条件 WHERE username LIKE &quot;%o%&quot; AND balance &gt;= 1000</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    wrapper.lambda()</span><br><span class="line">            .select(User::getId, User::getUsername, User::getInfo, User::getBalance)</span><br><span class="line">            .like(User::getUsername, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">            .ge(User::getBalance, <span class="number">1000</span>);</span><br><span class="line">    <span class="comment">// 2.查询</span></span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(wrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-自定义SQL"><a href="#2-2-自定义SQL" class="headerlink" title="2.2 自定义SQL"></a>2.2 自定义SQL</h2><p>在演示 UpdateWrapper 的案例中，我们在代码中编写了更新的 SQL 语句：<img src="https://i0.hdslb.com/bfs/article/c2ca59f15e262d5b0878375f8e4cac55645325325.png" alt="img"></p><p>这种写法在某些企业也是不允许的，因为 SQL 语句最好都维护在持久层，而不是业务层。就当前案例来说，由于条件是 in 语句，只能将 SQL 写在 Mapper.xml 文件，利用 foreach 来生成动态 SQL 。 这实在是太麻烦了。假如查询条件更复杂，动态 SQL 的编写也会更加复杂。</p><p>所以，MybatisPlus 提供了自定义 SQL 功能，可以让我们利用Wrapper 生成查询条件，再结合 Mapper.xml 编写 SQL</p><h3 id="2-2-1-基本用法"><a href="#2-2-1-基本用法" class="headerlink" title="2.2.1.基本用法"></a><strong>2.2.1.基本用法</strong></h3><p>以当前案例来说，我们可以这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testCustomWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.准备自定义查询条件</span></span><br><span class="line">    List&lt;Long&gt; ids = List.of(<span class="number">1L</span>, <span class="number">2L</span>, <span class="number">4L</span>);</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;().in(<span class="string">&quot;id&quot;</span>, ids);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用mapper的自定义方法，直接传递Wrapper</span></span><br><span class="line">    userMapper.deductBalanceByIds(<span class="number">200</span>, wrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在UserMapper中自定义SQL：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Update;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;UPDATE user SET balance = balance - #&#123;money&#125; $&#123;ew.customSqlSegment&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deductBalanceByIds</span><span class="params">(<span class="meta">@Param(&quot;money&quot;)</span> <span class="type">int</span> money, <span class="meta">@Param(&quot;ew&quot;)</span> QueryWrapper&lt;User&gt; wrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就省去了编写复杂查询条件的烦恼了。</p><h3 id="2-2-2-多表关联"><a href="#2-2-2-多表关联" class="headerlink" title="2.2.2 多表关联"></a><strong>2.2.2 多表关联</strong></h3><p>理论上来讲 MyBatisPlus 是不支持多表查询的，不过我们可以利用 Wrapper 中自定义条件结合自定义 SQL 来实现多表查询的效果。 例如，我们要查询出所有收货地址在北京的并且用户 id 在 1、2、4 之中的用户</p><p>要是自己基于 mybatis 实现 SQL，大概是这样的：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserByIdAndAddr&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.mp.domain.po.User&quot;</span>&gt;</span></span><br><span class="line">      SELECT *</span><br><span class="line">      FROM user u</span><br><span class="line">      INNER JOIN address a ON u.id = a.user_id</span><br><span class="line">      WHERE u.id</span><br><span class="line">      <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">open</span>=<span class="string">&quot;IN (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">          #&#123;id&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">      AND a.city = #&#123;city&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出其中最复杂的就是 WHERE 条件的编写，如果业务复杂一些，这里的 SQL 会更变态。</p><p>但是基于自定义 SQL 结合 Wrapper 的玩法，我们就可以利用Wrapper 来构建查询条件，然后手写 SELECT 及 FROM 部分，实现多表查询。</p><p>查询条件这样来构建：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testCustomJoinWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.准备自定义查询条件</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;()</span><br><span class="line">            .in(<span class="string">&quot;u.id&quot;</span>, List.of(<span class="number">1L</span>, <span class="number">2L</span>, <span class="number">4L</span>))</span><br><span class="line">            .eq(<span class="string">&quot;a.city&quot;</span>, <span class="string">&quot;北京&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用mapper的自定义方法</span></span><br><span class="line">    List&lt;User&gt; users = userMapper.queryUserByWrapper(wrapper);</span><br><span class="line"></span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在UserMapper中自定义方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;SELECT u.* FROM user u INNER JOIN address a ON u.id = a.user_id $&#123;ew.customSqlSegment&#125;&quot;)</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">queryUserByWrapper</span><span class="params">(<span class="meta">@Param(&quot;ew&quot;)</span>QueryWrapper&lt;User&gt; wrapper)</span>;</span><br></pre></td></tr></table></figure><p>当然，也可以在 <code>UserMapper.xml</code> 中写 SQL ：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserByIdAndAddr&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.mp.domain.po.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM user u INNER JOIN address a ON u.id = a.user_id $&#123;ew.customSqlSegment&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-Service接口"><a href="#2-3-Service接口" class="headerlink" title="2.3 Service接口"></a>2.3 Service接口</h2><p>MybatisPlus 不仅提供了 BaseMapper，还提供了通用的 Service 接口及默认实现，封装了一些常用的 service 模板方法。 通用接口为 <code>IService</code>，默认实现为 <code>ServiceImpl</code>，其中封装的方法可以分为以下几类：</p><ul><li><code>save</code>：新增</li><li><code>remove</code>：删除</li><li><code>update</code>：更新</li><li><code>get</code>：查询单个结果</li><li><code>list</code>：查询集合结果</li><li><code>count</code>：计数</li><li><code>page</code>：分页查询</li></ul><h3 id="2-3-1-CRUD"><a href="#2-3-1-CRUD" class="headerlink" title="2.3.1 CRUD"></a>2.3.1 CRUD</h3><p>我们先俩看下基本的 CRUD 接口。 <strong>新增</strong>：</p><p><img src="https://i0.hdslb.com/bfs/article/42fd7711fb375c03501eaf2793e73f27645325325.png" alt="img"></p><ul><li><code>save</code>是新增单个元素</li><li><code>saveBatch</code>是批量新增</li><li><code>saveOrUpdate</code> 是根据 id 判断，如果数据存在就更新，不存在则新增</li><li><code>saveOrUpdateBatch</code>是批量的新增或修改</li></ul><p><strong>删除：</strong></p><p><img src="https://i0.hdslb.com/bfs/article/8f65a72b8fd5acca75bd261262f7b8bb645325325.png" alt="img"></p><ul><li><code>removeById</code>：根据 id 删除</li><li><code>removeByIds</code>：根据 id 批量删除</li><li><code>removeByMap</code>：根据 Map 中的键值对为条件删除</li><li><code>remove(Wrapper&lt;T&gt;)</code>：根据 Wrapper 条件删除</li><li><code>~~removeBatchByIds~~</code>：暂不支持</li></ul><p><strong>修改：</strong></p><p><img src="https://i0.hdslb.com/bfs/article/43bff06f7511ad106dfe3708ce7c217b645325325.png" alt="img"></p><ul><li><code>updateById</code>：根据 id 修改</li><li><code>update(Wrapper&lt;T&gt;)</code>：根据 <code>UpdateWrapper</code> 修改，<code>Wrapper</code>中包含 <code>set</code> 和 <code>where</code> 部分</li><li><code>update(T，Wrapper&lt;T&gt;)</code>：按照 <code>T</code> 内的数据修改与 <code>Wrapper</code>匹配到的数据</li><li><code>updateBatchById</code>：根据 id 批量修改</li></ul><p><strong>Get：</strong></p><p><img src="https://i0.hdslb.com/bfs/article/8f548b70dc679ce4afc846782b5b7f47645325325.png" alt="img"></p><ul><li><code>getById</code>：根据 id 查询 1 条数据</li><li><code>getOne(Wrapper&lt;T&gt;)</code>：根据 <code>Wrapper</code>查询 1 条数据</li><li><code>getBaseMapper</code>：获取 <code>Service</code> 内的 <code>BaseMapper</code> 实现，某些时候需要直接调用 <code>Mapper</code> 内的自定义 <code>SQL</code> 时可以用这个方法获取到 <code>Mapper</code></li></ul><p><strong>List：</strong></p><p><img src="https://i0.hdslb.com/bfs/article/905c6fdfd49ba5dde28e1ceaf20d5c7f645325325.png" alt="img"></p><ul><li><code>listByIds</code>：根据 id 批量查询</li><li><code>list(Wrapper&lt;T&gt;)</code>：根据 Wrapper 条件查询多条数据</li><li><code>list()</code>：查询所有</li></ul><p><strong>Count</strong>：</p><p><img src="https://i0.hdslb.com/bfs/article/56513bcf3044ff17d9c5f1411434ed46645325325.png" alt="img"></p><ul><li><code>count()</code>：统计所有数量</li><li><code>count(Wrapper&lt;T&gt;)</code>：统计符合 <code>Wrapper</code> 条件的数据数量</li></ul><p><strong>getBaseMapper</strong>： 当我们在 service 中要调用 Mapper 中自定义 SQL 时，就必须获取 service 对应的 Mapper，就可以通过这个方法：</p><p><img src="https://i0.hdslb.com/bfs/article/e507ac2922fda90f6ebd2159ddd252d5645325325.png" alt="img"></p><h3 id="2-3-2-基本用法"><a href="#2-3-2-基本用法" class="headerlink" title="2.3.2.基本用法"></a><strong>2.3.2.基本用法</strong></h3><p>由于 <code>Service</code> 中经常需要定义与业务有关的自定义方法，因此我们不能直接使用 <code>IService</code> ，而是自定义 <code>Service</code> 接口，然后继承 <code>IService</code> 以拓展方法。同时，让自定义的 <code>Service实现类</code> 继承 <code>ServiceImpl</code> ，这样就不用自己实现 <code>IService</code> 中的接口了。</p><p>首先，定义 <code>IUserService</code>，继承 <code>IService</code> ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="comment">// 拓展自定义方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，编写 <code>UserServiceImpl</code> 类，继承 <code>ServiceImpl</code>，实现 <code>IUserService</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt;</span><br><span class="line">                                                                                                        <span class="keyword">implements</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目结构如下：</p><p><img src="https://i0.hdslb.com/bfs/article/e9b3f97fd179215eaea9d16e58d9f4c3645325325.png" alt="img"></p><p>接下来，我们快速实现下面4个接口：</p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>编号</strong></th><th style="text-align:left"><strong>接口</strong></th><th style="text-align:left"><strong>请求方式</strong></th><th style="text-align:left"><strong>请求路径</strong></th><th style="text-align:left"><strong>请求参数</strong></th><th style="text-align:left"><strong>返回值</strong></th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">新增用户</td><td style="text-align:left">POST</td><td style="text-align:left">/users</td><td style="text-align:left">用户表单实体</td><td style="text-align:left">无</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">删除用户</td><td style="text-align:left">DELETE</td><td style="text-align:left">/users/{id}</td><td style="text-align:left">用户id</td><td style="text-align:left">无</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">根据id查询用户</td><td style="text-align:left">GET</td><td style="text-align:left">/users/{id}</td><td style="text-align:left">用户id</td><td style="text-align:left">用户VO</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">根据id批量查询</td><td style="text-align:left">GET</td><td style="text-align:left">/users</td><td style="text-align:left">用户id集合</td><td style="text-align:left">用户VO集合</td></tr></tbody></table></div><p>首先，我们在项目中引入几个依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-openapi2-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--web--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后需要配置 swagger 信息：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">knife4j:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">openapi:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">用户管理接口文档</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">&quot;用户管理接口文档&quot;</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">zhanghuyi@itcast.cn</span></span><br><span class="line">    <span class="attr">concat:</span> <span class="string">虎哥</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.itcast.cn</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v1.0.0</span></span><br><span class="line">    <span class="attr">group:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">        <span class="attr">group-name:</span> <span class="string">default</span></span><br><span class="line">        <span class="attr">api-rule:</span> <span class="string">package</span></span><br><span class="line">        <span class="attr">api-rule-resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">com.itheima.mp.controller</span></span><br></pre></td></tr></table></figure><p>然后，接口需要两个实体：</p><ul><li>UserFormDTO：代表新增时的用户表单</li><li>UserVO：代表查询的返回结果</li></ul><p>首先是 UserFormDTO：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;用户表单实体&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserFormDTO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;密码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;注册手机号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;详细信息，JSON风格&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String info;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;账户余额&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer balance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是 UserVO：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;用户VO实体&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;详细信息&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String info;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;使用状态（1正常 2冻结）&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;账户余额&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer balance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，按照 Restful 风格编写 Controller 接口方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.bean.BeanUtil;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.dto.UserFormDTO;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.vo.UserVO;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Api(tags = &quot;用户管理接口&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IUserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;新增用户&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">(<span class="meta">@RequestBody</span> UserFormDTO userFormDTO)</span>&#123;</span><br><span class="line">        <span class="comment">// 1.转换DTO为PO</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> BeanUtil.copyProperties(userFormDTO, User.class);</span><br><span class="line">        <span class="comment">// 2.新增</span></span><br><span class="line">        userService.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;删除用户&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long userId)</span>&#123;</span><br><span class="line">        userService.removeById(userId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;根据id查询用户&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserVO <span class="title function_">queryUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long userId)</span>&#123;</span><br><span class="line">        <span class="comment">// 1.查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getById(userId);</span><br><span class="line">        <span class="comment">// 2.处理vo</span></span><br><span class="line">        <span class="keyword">return</span> BeanUtil.copyProperties(user, UserVO.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;根据id集合查询用户&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;UserVO&gt; <span class="title function_">queryUserByIds</span><span class="params">(<span class="meta">@RequestParam(&quot;ids&quot;)</span> List&lt;Long&gt; ids)</span>&#123;</span><br><span class="line">        <span class="comment">// 1.查询用户</span></span><br><span class="line">        List&lt;User&gt; users = userService.listByIds(ids);</span><br><span class="line">        <span class="comment">// 2.处理vo</span></span><br><span class="line">        <span class="keyword">return</span> BeanUtil.copyToList(users, UserVO.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到上述接口都直接在 controller 即可实现，无需编写任何 service 代码，非常方便。</p><p>不过，一些带有业务逻辑的接口则需要在 service 中自定义实现了。例如下面的需求：</p><ul><li>根据 id 扣减用户余额</li></ul><p>这看起来是个简单修改功能，只要修改用户余额即可。但这个业务包含一些业务逻辑处理：</p><ul><li>判断用户状态是否正常</li><li>判断用户余额是否充足</li></ul><p>这些业务逻辑都要在 service 层来做，另外更新余额需要自定义 SQL，要在 mapper 中来实现。因此，我们除了要编写 controller 以外，具体的业务还要在 service 和 mapper 中编写。</p><p>首先在 UserController 中定义一个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;&#123;id&#125;/deduction/&#123;money&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;扣减用户余额&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deductBalance</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id, <span class="meta">@PathVariable(&quot;money&quot;)</span>Integer money)</span>&#123;</span><br><span class="line">    userService.deductBalance(id, money);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是 UserService 接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deductBalance</span><span class="params">(Long id, Integer money)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后是 UserServiceImpl 实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="keyword">implements</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deductBalance</span><span class="params">(Long id, Integer money)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> getById(id);</span><br><span class="line">        <span class="comment">// 2.判断用户状态</span></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span> || user.getStatus() == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;用户状态异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3.判断用户余额</span></span><br><span class="line">        <span class="keyword">if</span> (user.getBalance() &lt; money) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;用户余额不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4.扣减余额</span></span><br><span class="line">        baseMapper.deductMoneyById(id, money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后是 mapper：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update(&quot;UPDATE user SET balance = balance - #&#123;money&#125; WHERE id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deductMoneyById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> Long id, <span class="meta">@Param(&quot;money&quot;)</span> Integer money)</span>;</span><br></pre></td></tr></table></figure><h3 id="2-3-3-Lambda"><a href="#2-3-3-Lambda" class="headerlink" title="2.3.3 Lambda"></a><strong>2.3.3 Lambda</strong></h3><p>IService 中还提供了 Lambda 功能来简化我们的复杂查询及更新功能。我们通过两个案例来学习一下。</p><p>案例一：实现一个根据复杂条件查询用户的接口，查询条件如下：</p><ul><li>name：用户名关键字，可以为空</li><li>status：用户状态，可以为空</li><li>minBalance：最小余额，可以为空</li><li>maxBalance：最大余额，可以为空</li></ul><p>可以理解成一个用户的后台管理界面，管理员可以自己选择条件来筛选用户，因此上述条件不一定存在，需要做判断。</p><p>我们首先需要定义一个查询条件实体，UserQuery 实体：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;用户查询条件实体&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserQuery</span> &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户名关键字&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户状态：1-正常，2-冻结&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;余额最小值&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer minBalance;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;余额最大值&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer maxBalance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来我们在 UserController 中定义一个 controller 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;根据id集合查询用户&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;UserVO&gt; <span class="title function_">queryUsers</span><span class="params">(UserQuery query)</span>&#123;</span><br><span class="line">    <span class="comment">// 1.组织条件</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> query.getName();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">status</span> <span class="operator">=</span> query.getStatus();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">minBalance</span> <span class="operator">=</span> query.getMinBalance();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxBalance</span> <span class="operator">=</span> query.getMaxBalance();</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;().lambda()</span><br><span class="line">            .like(username != <span class="literal">null</span>, User::getUsername, username)</span><br><span class="line">            .eq(status != <span class="literal">null</span>, User::getStatus, status)</span><br><span class="line">            .ge(minBalance != <span class="literal">null</span>, User::getBalance, minBalance)</span><br><span class="line">            .le(maxBalance != <span class="literal">null</span>, User::getBalance, maxBalance);</span><br><span class="line">    <span class="comment">// 2.查询用户</span></span><br><span class="line">    List&lt;User&gt; users = userService.list(wrapper);</span><br><span class="line">    <span class="comment">// 3.处理vo</span></span><br><span class="line">    <span class="keyword">return</span> BeanUtil.copyToList(users, UserVO.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在组织查询条件的时候，我们加入了  <code>username != null</code>  这样的参数，意思就是当条件成立时才会添加这个查询条件，类似 Mybatis 的 mapper.xml 文件中的 <code>&lt;if&gt;</code> 标签。这样就实现了动态查询条件效果了。</p><p>不过，上述条件构建的代码太麻烦了。 因此 Service 中对  <code>LambdaQueryWrapper</code>  和  <code>LambdaUpdateWrapper</code>  的用法进一步做了简化。我们无需自己通过 <code>new</code> 的方式来创建  <code>Wrapper</code> ，而是直接调用 <code>lambdaQuery</code> 和 <code>lambdaUpdate</code> 方法：</p><p>基于 Lambda 查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;根据id集合查询用户&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;UserVO&gt; <span class="title function_">queryUsers</span><span class="params">(UserQuery query)</span>&#123;</span><br><span class="line">    <span class="comment">// 1.组织条件</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> query.getName();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">status</span> <span class="operator">=</span> query.getStatus();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">minBalance</span> <span class="operator">=</span> query.getMinBalance();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxBalance</span> <span class="operator">=</span> query.getMaxBalance();</span><br><span class="line">    <span class="comment">// 2.查询用户</span></span><br><span class="line">    List&lt;User&gt; users = userService.lambdaQuery()</span><br><span class="line">            .like(username != <span class="literal">null</span>, User::getUsername, username)</span><br><span class="line">            .eq(status != <span class="literal">null</span>, User::getStatus, status)</span><br><span class="line">            .ge(minBalance != <span class="literal">null</span>, User::getBalance, minBalance)</span><br><span class="line">            .le(maxBalance != <span class="literal">null</span>, User::getBalance, maxBalance)</span><br><span class="line">            .list();</span><br><span class="line">    <span class="comment">// 3.处理vo</span></span><br><span class="line">    <span class="keyword">return</span> BeanUtil.copyToList(users, UserVO.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现 lambdaQuery 方法中除了可以构建条件，还需要在链式编程的最后添加一个 <code>list()</code> ，这是在告诉 MP 我们的调用结果需要是一个 list 集合。这里不仅可以用 <code>list()</code> ，可选的方法有：</p><ul><li><code>.one()</code>：最多1个结果</li><li><code>.list()</code>：返回集合结果</li><li><code>.count()</code>：返回计数结果</li></ul><p>MybatisPlus 会根据链式编程的最后一个方法来判断最终的返回结果。</p><p>与 lambdaQuery 方法类似， IService 中的 lambdaUpdate 方法可以非常方便的实现复杂更新业务。</p><p>例如下面的需求：</p><blockquote><p>需求：改造根据 id 修改用户余额的接口，要求如下</p><ul><li>如果扣减后余额为 0，则将用户 status 修改为冻结状态（2）</li></ul></blockquote><p>也就是说我们在扣减用户余额时，需要对用户剩余余额做出判断，如果发现剩余余额为 0，则应该将 status 修改为 2，这就是说 update 语句的 set 部分是动态的。</p><p>实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deductBalance</span><span class="params">(Long id, Integer money)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.查询用户</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> getById(id);</span><br><span class="line">    <span class="comment">// 2.校验用户状态</span></span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span> || user.getStatus() == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;用户状态异常！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3.校验余额是否充足</span></span><br><span class="line">    <span class="keyword">if</span> (user.getBalance() &lt; money) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;用户余额不足！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4.扣减余额 update tb_user set balance = balance - ?</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">remainBalance</span> <span class="operator">=</span> user.getBalance() - money;</span><br><span class="line">    lambdaUpdate()</span><br><span class="line">            .set(User::getBalance, remainBalance) <span class="comment">// 更新余额</span></span><br><span class="line">            .set(remainBalance == <span class="number">0</span>, User::getStatus, <span class="number">2</span>) <span class="comment">// 动态判断，是否更新status</span></span><br><span class="line">            .eq(User::getId, id)</span><br><span class="line">            .eq(User::getBalance, user.getBalance()) <span class="comment">// 乐观锁</span></span><br><span class="line">            .update();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-4-批量新增"><a href="#2-3-4-批量新增" class="headerlink" title="2.3.4 批量新增"></a><strong>2.3.4 批量新增</strong></h3><p>再试试 MybatisPlus 的批处理：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testSaveBatch</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 准备10万条数据</span></span><br><span class="line">    List&lt;User&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(<span class="number">1000</span>);</span><br><span class="line">    <span class="type">long</span> <span class="variable">b</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100000</span>; i++) &#123;</span><br><span class="line">        list.add(buildUser(i));</span><br><span class="line">        <span class="comment">// 每1000条批量插入一次</span></span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">1000</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            userService.saveBatch(list);</span><br><span class="line">            list.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">e</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    System.out.println(<span class="string">&quot;耗时：&quot;</span> + (e - b));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到使用了批处理以后，比逐条新增效率提高了 10 倍左右，性能还是不错的。</p><p>不过，我们简单查看一下 <code>MybatisPlus</code> 源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sqlStatement</span> <span class="operator">=</span> getSqlStatement(SqlMethod.INSERT_ONE);</span><br><span class="line">    <span class="keyword">return</span> executeBatch(entityList, batchSize, (sqlSession, entity) -&gt; sqlSession.insert(sqlStatement, entity));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...SqlHelper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; <span class="type">boolean</span> <span class="title function_">executeBatch</span><span class="params">(Class&lt;?&gt; entityClass, Log log, Collection&lt;E&gt; list, <span class="type">int</span> batchSize, BiConsumer&lt;SqlSession, E&gt; consumer)</span> &#123;</span><br><span class="line">    Assert.isFalse(batchSize &lt; <span class="number">1</span>, <span class="string">&quot;batchSize must not be less than one&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> !CollectionUtils.isEmpty(list) &amp;&amp; executeBatch(entityClass, log, sqlSession -&gt; &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> list.size();</span><br><span class="line">        <span class="type">int</span> <span class="variable">idxLimit</span> <span class="operator">=</span> Math.min(batchSize, size);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (E element : list) &#123;</span><br><span class="line">            consumer.accept(sqlSession, element);</span><br><span class="line">            <span class="keyword">if</span> (i == idxLimit) &#123;</span><br><span class="line">                sqlSession.flushStatements();</span><br><span class="line">                idxLimit = Math.min(idxLimit + batchSize, size);</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现其实 <code>MybatisPlus</code> 的批处理是基于 <code>PrepareStatement</code> 的预编译模式，然后批量提交，最终在数据库执行时还是会有多条 insert 语句，逐条插入数据。</p><p>MySQL 的客户端连接参数中有这样的一个参数： <code>rewriteBatchedStatements</code> 。顾名思义，就是重写批处理的 <code>statement</code> 语句。</p><p>这个参数的默认值是 false，我们需要修改连接参数，将其配置为 true</p><p>修改项目中的 application.yml 文件，在 jdbc 的 url 后面添加参数<code>&amp;rewriteBatchedStatements=true</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/mp?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;serverTimezone=Asia/Shanghai&amp;rewriteBatchedStatements=true</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">MySQL123</span></span><br></pre></td></tr></table></figure><h1 id="3-扩展功能"><a href="#3-扩展功能" class="headerlink" title="3. 扩展功能"></a><strong>3. 扩展功能</strong></h1><h2 id="3-1-代码生成"><a href="#3-1-代码生成" class="headerlink" title="3.1 代码生成"></a><strong>3.1 代码生成</strong></h2><p>在使用 MybatisPlus 以后，基础的 <code>Mapper</code>、<code>Service</code>、<code>PO</code> 代码相对固定，重复编写也比较麻烦。因此 MybatisPlus 官方提供了代码生成器根据数据库表结构生成 <code>PO</code>、<code>Mapper</code>、<code>Service</code> 等相关代码。只不过代码生成器同样要编码使用，也很麻烦。</p><p>这里推荐大家使用一款 <code>MybatisPlus</code> 的插件，它可以基于图形化界面完成 <code>MybatisPlus</code> 的代码生成，非常简单。</p><h2 id="3-2-静态工具"><a href="#3-2-静态工具" class="headerlink" title="3.2 静态工具"></a><strong>3.2 静态工具</strong></h2><p>有的时候 Service 之间也会相互调用，为了避免出现循环依赖问题，MybatisPlus 提供一个静态工具类： <code>Db</code> ，其中的一些静态方法与 <code>IService</code> 中方法签名基本一致，也可以帮助我们实现 CRUD 功能：</p><p><img src="https://i0.hdslb.com/bfs/article/fe9a9a2a1aeb4141d104f7329e5ccd88645325325.png" alt="img"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testDbGet</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> Db.getById(<span class="number">1L</span>, User.class);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testDbList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 利用Db实现复杂条件查询</span></span><br><span class="line">    List&lt;User&gt; list = Db.lambdaQuery(User.class)</span><br><span class="line">            .like(User::getUsername, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">            .ge(User::getBalance, <span class="number">1000</span>)</span><br><span class="line">            .list();</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testDbUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">    Db.lambdaUpdate(User.class)</span><br><span class="line">            .set(User::getBalance, <span class="number">2000</span>)</span><br><span class="line">            .eq(User::getUsername, <span class="string">&quot;Rose&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需求：改造根据 id 用户查询的接口，查询用户的同时返回用户收货地址列表</p><p>首先，我们要添加一个收货地址的 VO 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;收货地址VO&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AddressVO</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;省&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String province;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;市&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;县/区&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String town;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;手机&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;详细地址&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String street;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;联系人&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String contact;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;是否是默认 1默认 0否&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDefault;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;备注&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String notes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，改造原来的 UserVO，添加一个地址属性：</p><p><img src="https://i0.hdslb.com/bfs/article/4b30d0a2ff33b4bfa191535a37d80ba4645325325.png" alt="img"></p><p>接下来，修改 UserController 中根据 id 查询用户的业务接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;根据id查询用户&quot;)</span></span><br><span class="line"><span class="keyword">public</span> UserVO <span class="title function_">queryUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long userId)</span>&#123;</span><br><span class="line">    <span class="comment">// 基于自定义service方法查询</span></span><br><span class="line">    <span class="keyword">return</span> userService.queryUserAndAddressById(userId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于查询业务复杂，所以要在 service 层来实现。首先在 IUserService 中定义方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.po.User;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.vo.UserVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deduct</span><span class="params">(Long id, Integer money)</span>;</span><br><span class="line"></span><br><span class="line">    UserVO <span class="title function_">queryUserAndAddressById</span><span class="params">(Long userId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在 UserServiceImpl 中实现该方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> UserVO <span class="title function_">queryUserAndAddressById</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.查询用户</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> getById(userId);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.查询收货地址</span></span><br><span class="line">    List&lt;Address&gt; addresses = Db.lambdaQuery(Address.class)</span><br><span class="line">            .eq(Address::getUserId, userId)</span><br><span class="line">            .list();</span><br><span class="line">    <span class="comment">// 3.处理vo</span></span><br><span class="line">    <span class="type">UserVO</span> <span class="variable">userVO</span> <span class="operator">=</span> BeanUtil.copyProperties(user, UserVO.class);</span><br><span class="line">    userVO.setAddresses(BeanUtil.copyToList(addresses, AddressVO.class));</span><br><span class="line">    <span class="keyword">return</span> userVO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在查询地址时，我们采用了 Db 的静态方法，因此避免了注入 AddressService，减少了循环依赖的风险。</p><h2 id="3-3-逻辑删除"><a href="#3-3-逻辑删除" class="headerlink" title="3.3 逻辑删除"></a><strong>3.3 逻辑删除</strong></h2><p>对于一些比较重要的数据，我们往往会采用逻辑删除的方案，即：</p><ul><li>在表中添加一个字段标记数据是否被删除</li><li>当删除数据时把标记置为 true</li><li>查询时过滤掉标记为 true 的数据</li></ul><p>一旦采用了逻辑删除，所有的查询和删除逻辑都要跟着变化，非常麻烦。</p><p>为了解决这个问题，MybatisPlus 就添加了对逻辑删除的支持。</p><p><strong>注意</strong>，只有 MybatisPlus 生成的 SQL 语句才支持自动的逻辑删除，自定义 SQL 需要自己手动处理逻辑删除。</p><p>例如，我们给 <code>address</code> 表添加一个逻辑删除字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> address <span class="keyword">add</span> deleted bit <span class="keyword">default</span> b<span class="string">&#x27;0&#x27;</span> <span class="keyword">null</span> comment <span class="string">&#x27;逻辑删除&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后给 <code>Address</code> 实体添加 <code>deleted</code> 字段：</p><p><img src="https://i0.hdslb.com/bfs/article/cfc433d2efeb24305c3fee24f3b68638645325325.png" alt="img"></p><p>接下来，我们要在 <code>application.yml</code> 中配置逻辑删除字段：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-field:</span> <span class="string">deleted</span> <span class="comment"># 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span> <span class="comment"># 逻辑已删除值(默认为 1)</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span> <span class="comment"># 逻辑未删除值(默认为 0)</span></span><br></pre></td></tr></table></figure><p>测试： 首先，我们执行一个删除操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testDeleteByLogic</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 删除方法与以前没有区别</span></span><br><span class="line">    addressService.removeById(<span class="number">59L</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法与普通删除一模一样，但是底层的SQL逻辑变了：</p><p><img src="https://i0.hdslb.com/bfs/article/90fd1a32a082d0e31f3b13f8455ae48a645325325.png" alt="img"></p><p>查询一下试试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testQuery</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;Address&gt; list = addressService.list();</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会发现id为59的确实没有查询出来，而且SQL中也对逻辑删除字段做了判断：</p><p><img src="https://i0.hdslb.com/bfs/article/7f72510ccb7e5bf81c4cbdaf0e465686645325325.png" alt="img"></p><p>综上， 开启了逻辑删除功能以后，我们就可以像普通删除一样做 CRUD ，基本不用考虑代码逻辑问题。还是非常方便的。</p><p><strong>注意</strong>： 逻辑删除本身也有自己的问题，比如：</p><ul><li>会导致数据库表垃圾数据越来越多，从而影响查询效率</li><li>SQL 中全都需要对逻辑删除字段做判断，影响查询效率</li></ul><p>因此，我不太推荐采用逻辑删除功能，如果数据不能删除，可以采用把数据迁移到其它表的办法。</p><h2 id="3-3-通用枚举"><a href="#3-3-通用枚举" class="headerlink" title="3.3 通用枚举"></a><strong>3.3 通用枚举</strong></h2><p>User 类中有一个用户状态字段：</p><p><img src="https://i0.hdslb.com/bfs/article/e5e725a68a8127269ff02f6fd351ad99645325325.png" alt="img"></p><p>像这种字段我们一般会定义一个枚举，做业务判断的时候就可以直接基于枚举做比较。但是我们数据库采用的是 <code>int</code> 类型，对应的PO也是 <code>Integer</code> 。因此业务操作时必须手动把 <code>枚举</code> 与 <code>Integer</code> 转换，非常麻烦。</p><p>因此，MybatisPlus 提供了一个处理枚举的类型转换器，可以帮我们<strong>把枚举类型与数据库类型自动转换</strong>。</p><h3 id="3-3-1-定义枚举"><a href="#3-3-1-定义枚举" class="headerlink" title="3.3.1 定义枚举"></a><strong>3.3.1 定义枚举</strong></h3><p>我们定义一个用户状态的枚举：</p><p><img src="https://i0.hdslb.com/bfs/article/5656c78242b92db82f007507eb595f3e645325325.png" alt="img"></p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">UserStatus</span> &#123;</span><br><span class="line">    NORMAL(<span class="number">1</span>, <span class="string">&quot;正常&quot;</span>),</span><br><span class="line">    FREEZE(<span class="number">2</span>, <span class="string">&quot;冻结&quot;</span>)</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> value;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String desc;</span><br><span class="line"></span><br><span class="line">    UserStatus(<span class="type">int</span> value, String desc) &#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后把 <code>User</code> 类中的 <code>status</code> 字段改为 <code>UserStatus</code>  类型：</p><p><img src="https://i0.hdslb.com/bfs/article/20bd888067095da7294b7125597524cb645325325.png" alt="img"></p><p>要让 <code>MybatisPlus</code> 处理枚举与数据库类型自动转换，我们必须告诉 <code>MybatisPlus</code> ，枚举中的哪个字段的值作为数据库值。 <code>MybatisPlus</code> 提供了 <code>@EnumValue</code> 注解来标记枚举属性：</p><p><img src="https://i0.hdslb.com/bfs/article/94467a2a29bc795dbfc9f1c2c3e044eb645325325.png" alt="img"></p><h3 id="3-3-2-配置枚举处理器"><a href="#3-3-2-配置枚举处理器" class="headerlink" title="3.3.2 配置枚举处理器"></a><strong>3.3.2 配置枚举处理器</strong></h3><p>在 application.yaml 文件中添加配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">default-enum-type-handler:</span> <span class="string">com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler</span></span><br></pre></td></tr></table></figure><h3 id="3-3-3-测试"><a href="#3-3-3-测试" class="headerlink" title="3.3.3 测试"></a><strong>3.3.3 测试</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testService</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;User&gt; list = userService.list();</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终，查询出的 <code>User</code> 类的 <code>status</code> 字段会是枚举类型：</p><p><img src="https://i0.hdslb.com/bfs/article/cf70d49e02247ee6c944f6350fa13144645325325.png" alt="img"></p><p>同时，为了使页面查询结果也是枚举格式，我们需要修改 UserVO 中的 status 属性：</p><p><img src="https://i0.hdslb.com/bfs/article/d2b88642d4cea8da3b180a67997251c3645325325.png" alt="img"></p><p>并且，在 UserStatus 枚举中通过 <code>@JsonValue</code> 注解标记 JSON 序列化时展示的字段：</p><p><img src="https://i0.hdslb.com/bfs/article/5325b3d7a57f762dccb7592adba6c305645325325.png" alt="img"></p><p>最后，在页面查询，结果如下：</p><p><img src="https://i0.hdslb.com/bfs/article/ccb45e126313fd44bb8d8a56a6e658a9645325325.png" alt="img"></p><h2 id="3-4-JSON类型处理器"><a href="#3-4-JSON类型处理器" class="headerlink" title="3.4 JSON类型处理器"></a><strong>3.4 JSON类型处理器</strong></h2><p>数据库的 user 表中有一个 <code>info</code> 字段，是 JSON 类型：</p><p><img src="https://i0.hdslb.com/bfs/article/fd1c4f4ff0397a51a15c7040048b8ae6645325325.png" alt="img"></p><p>格式像这样：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span> <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;佛系青年&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;male&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>而目前 <code>User</code> 实体类中却是 <code>String</code> 类型：</p><p><img src="https://i0.hdslb.com/bfs/article/1d15c93540cb442a3f1a7081e74d950f645325325.png" alt="img"></p><p>这样一来，我们要读取 info 中的属性时就非常不方便。如果要方便获取，info 的类型最好是一个 <code>Map</code> 或者实体类。</p><p>而一旦我们把 <code>info</code>改为 <code>对象</code> 类型，就需要在写入数据库时手动转为 <code>String</code> ，再读取数据库时，手动转换为 <code>对象</code> ，这会非常麻烦。</p><p>因此 MybatisPlus 提供了很多特殊类型字段的类型处理器，解决特殊字段类型与数据库类型转换的问题。例如处理 JSON 就可以使用 <code>JacksonTypeHandler</code> 处理器。</p><p>接下来，我们就来看看这个处理器该如何使用。</p><h3 id="3-4-1-定义实体"><a href="#3-4-1-定义实体" class="headerlink" title="3.4.1 定义实体"></a><strong>3.4.1 定义实体</strong></h3><p>首先，我们定义一个单独实体类来与 info 字段的属性匹配：</p><p><img src="https://i0.hdslb.com/bfs/article/ce9f1c2df159682a9cbb6373ea3d78d5645325325.png" alt="img"></p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.po;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInfo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String intro;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-2-使用类型处理器"><a href="#3-4-2-使用类型处理器" class="headerlink" title="3.4.2 使用类型处理器"></a><strong>3.4.2 使用类型处理器</strong></h3><p>接下来，将 User 类的 info 字段修改为 UserInfo 类型，并声明类型处理器：</p><p><img src="https://i0.hdslb.com/bfs/article/987bb9313e449a6a45fb8bafc3e2e669645325325.png" alt="img"></p><p>测试可以发现，所有数据都正确封装到 UserInfo 当中了：</p><p><img src="https://i0.hdslb.com/bfs/article/f2da69b1573c55e614bd91af775ec1ca645325325.png" alt="img"></p><p>同时，为了让页面返回的结果也以对象格式返回，我们要修改 UserVO 中的 info 字段：</p><p><img src="https://i0.hdslb.com/bfs/article/c0df955c4b881feb98ee469612e59480645325325.png" alt="img"></p><p>此时，在页面查询结果如下：</p><p><img src="https://i0.hdslb.com/bfs/article/3f9e1e417112c7cd1cad4c27e7a2cb8e645325325.png" alt="img"></p><h1 id="4-插件功能"><a href="#4-插件功能" class="headerlink" title="4. 插件功能"></a>4. 插件功能</h1><p>MybatisPlus 提供了很多的插件功能，进一步拓展其功能。目前已有的插件有：</p><ul><li><code>PaginationInnerInterceptor</code>：自动分页</li><li><code>TenantLineInnerInterceptor</code>：多租户</li><li><code>DynamicTableNameInnerInterceptor</code>：动态表名</li><li><code>OptimisticLockerInnerInterceptor</code>：乐观锁</li><li><code>IllegalSQLInnerInterceptor</code>：sql 性能规范</li><li><code>BlockAttackInnerInterceptor</code>：防止全表更新与删除</li></ul><p><strong>注意：</strong> 使用多个分页插件的时候需要注意插件定义顺序，建议使用顺序如下：</p><ul><li>多租户，动态表名</li><li>分页，乐观锁</li><li>sql 性能规范，防止全表更新与删除</li></ul><p>这里我们以分页插件为里来学习插件的用法。</p><h2 id="4-1-分页插件"><a href="#4-1-分页插件" class="headerlink" title="4.1 分页插件"></a><strong>4.1 分页插件</strong></h2><p>在未引入分页插件的情况下，<code>MybatisPlus</code> 是不支持分页功能的， <code>IService</code> 和 <code>BaseMapper</code> 中的分页方法都无法正常起效。 所以，我们必须配置分页插件。</p><h3 id="4-1-1-配置分页插件"><a href="#4-1-1-配置分页插件" class="headerlink" title="4.1.1 配置分页插件"></a><strong>4.1.1 配置分页插件</strong></h3><p>在项目中新建一个配置类：</p><p><img src="https://i0.hdslb.com/bfs/article/056e58ac0dbd415152662940613f3bdb645325325.png" alt="img"></p><p>其代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化核心插件</span></span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">// 添加分页插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-1-2-分页-API"><a href="#4-1-2-分页-API" class="headerlink" title="4.1.2 分页 API"></a><strong>4.1.2 分页 API</strong></h3><p>编写一个分页查询的测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testPageQuery</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.分页查询，new Page()的两个参数分别是：页码、每页大小</span></span><br><span class="line">    Page&lt;User&gt; p = userService.page(<span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">2</span>, <span class="number">2</span>));</span><br><span class="line">    <span class="comment">// 2.总条数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;total = &quot;</span> + p.getTotal());</span><br><span class="line">    <span class="comment">// 3.总页数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;pages = &quot;</span> + p.getPages());</span><br><span class="line">    <span class="comment">// 4.数据</span></span><br><span class="line">    List&lt;User&gt; records = p.getRecords();</span><br><span class="line">    records.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行的SQL如下：</p><p><img src="https://i0.hdslb.com/bfs/article/08c90fb72fdcb69efccaaa13f126f56d645325325.png" alt="img"></p><p>这里用到了分页参数，Page，即可以支持分页参数，也可以支持排序参数。常见的 API 如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">1</span>, pageSize = <span class="number">5</span>;</span><br><span class="line"><span class="comment">// 分页参数</span></span><br><span class="line">Page&lt;User&gt; page = Page.of(pageNo, pageSize);</span><br><span class="line"><span class="comment">// 排序参数, 通过OrderItem来指定</span></span><br><span class="line">page.addOrder(<span class="keyword">new</span> <span class="title class_">OrderItem</span>(<span class="string">&quot;balance&quot;</span>, <span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">userService.page(page);</span><br></pre></td></tr></table></figure><h2 id="4-2-通用分页实体"><a href="#4-2-通用分页实体" class="headerlink" title="4.2 通用分页实体"></a><strong>4.2 通用分页实体</strong></h2><p>现在要实现一个用户分页查询的接口，接口规范如下：</p><div class="table-container"><table><thead><tr><th><strong>参数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>请求方式</td><td>GET</td></tr><tr><td>请求路径</td><td>/users/page</td></tr><tr><td>请求参数</td><td><code>&#123;    &quot;pageNo&quot;: 1,    &quot;pageSize&quot;: 5,    &quot;sortBy&quot;: &quot;balance&quot;,    &quot;isAsc&quot;: false,    &quot;name&quot;: &quot;o&quot;,    &quot;status&quot;: 1 &#125;</code></td></tr><tr><td>返回值</td><td><code>&#123;    &quot;total&quot;: 100006,    &quot;pages&quot;: 50003,    &quot;list&quot;: [        &#123;            &quot;id&quot;: 1685100878975279298,            &quot;username&quot;: &quot;user_9****&quot;,            &quot;info&quot;: &#123;                &quot;age&quot;: 24,                &quot;intro&quot;: &quot;英文老师&quot;,                &quot;gender&quot;: &quot;female&quot;            &#125;,            &quot;status&quot;: &quot;正常&quot;,            &quot;balance&quot;: 2000        &#125;    ] &#125;</code></td></tr><tr><td>特殊说明</td><td>如果排序字段为空，默认按照更新时间排序排序字段不为空，则按照排序字段排序</td></tr></tbody></table></div><p>这里需要定义 3 个实体：</p><ul><li><code>UserQuery</code>：分页查询条件的实体，包含分页、排序参数、过滤条件</li><li><code>PageDTO</code>：分页结果实体，包含总条数、总页数、当前页数据</li><li><code>UserVO</code>：用户页面视图实体</li></ul><h3 id="4-2-1-实体"><a href="#4-2-1-实体" class="headerlink" title="4.2.1 实体"></a><strong>4.2.1 实体</strong></h3><p>由于 UserQuery 之前已经定义过了，并且其中已经包含了过滤条件，具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;用户查询条件实体&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserQuery</span> &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户名关键字&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户状态：1-正常，2-冻结&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;余额最小值&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer minBalance;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;余额最大值&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer maxBalance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中缺少的仅仅是分页条件，而分页条件不仅仅用户分页查询需要，以后其它业务也都有分页查询的需求。因此建议将分页查询条件单独定义为一个 <code>PageQuery</code> 实体：</p><p><img src="https://i0.hdslb.com/bfs/article/9116162f2064a8cc9d7df82bcc427824645325325.png" alt="img"></p><p><code>PageQuery</code> 是前端提交的查询参数，一般包含四个属性：</p><ul><li><code>pageNo</code>：页码</li><li><code>pageSize</code>：每页数据条数</li><li><code>sortBy</code>：排序字段</li><li><code>isAsc</code>：是否升序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;分页查询实体&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageQuery</span> &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;页码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageNo;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;页码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;排序字段&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sortBy;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;是否升序&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isAsc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，让我们的UserQuery继承这个实体：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.EqualsAndHashCode;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = true)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;用户查询条件实体&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserQuery</span> <span class="keyword">extends</span> <span class="title class_">PageQuery</span> &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户名关键字&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;用户状态：1-正常，2-冻结&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;余额最小值&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer minBalance;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;余额最大值&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer maxBalance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回值的用户实体沿用之前定一个 <code>UserVO</code> 实体：</p><p><img src="https://i0.hdslb.com/bfs/article/08e32a5796145c2b4aa21767e8334953645325325.png" alt="img"></p><p>最后，则是分页实体 PageDTO :</p><p><img src="https://i0.hdslb.com/bfs/article/583247ca7fd04f092635dac6e775d9db645325325.png" alt="img"></p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;分页结果&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageDTO</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;总条数&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long total;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;总页数&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long pages;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;集合&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-开发接口"><a href="#4-2-2-开发接口" class="headerlink" title="4.2.2 开发接口"></a><strong>4.2.2 开发接口</strong></h3><p>我们在 <code>UserController</code> 中定义分页查询用户的接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.dto.PageDTO;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.query.PageQuery;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.domain.vo.UserVO;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mp.service.UserService;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;users&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> PageDTO&lt;UserVO&gt; <span class="title function_">queryUsersPage</span><span class="params">(UserQuery query)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.queryUsersPage(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 。。。 略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在 <code>IUserService</code> 中创建 <code>queryUsersPage</code> 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PageDTO&lt;UserVO&gt; <span class="title function_">queryUsersPage</span><span class="params">(PageQuery query)</span>;</span><br></pre></td></tr></table></figure><p>接下来，在 UserServiceImpl 中实现该方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageDTO&lt;UserVO&gt; <span class="title function_">queryUsersPage</span><span class="params">(PageQuery query)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.构建条件</span></span><br><span class="line">    <span class="comment">// 1.1.分页条件</span></span><br><span class="line">    Page&lt;User&gt; page = Page.of(query.getPageNo(), query.getPageSize());</span><br><span class="line">    <span class="comment">// 1.2.排序条件</span></span><br><span class="line">    <span class="keyword">if</span> (query.getSortBy() != <span class="literal">null</span>) &#123;</span><br><span class="line">        page.addOrder(<span class="keyword">new</span> <span class="title class_">OrderItem</span>(query.getSortBy(), query.getIsAsc()));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 默认按照更新时间排序</span></span><br><span class="line">        page.addOrder(<span class="keyword">new</span> <span class="title class_">OrderItem</span>(<span class="string">&quot;update_time&quot;</span>, <span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.查询</span></span><br><span class="line">    page(page);</span><br><span class="line">    <span class="comment">// 3.数据非空校验</span></span><br><span class="line">    List&lt;User&gt; records = page.getRecords();</span><br><span class="line">    <span class="keyword">if</span> (records == <span class="literal">null</span> || records.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 无数据，返回空结果</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageDTO</span>&lt;&gt;(page.getTotal(), page.getPages(), Collections.emptyList());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4.有数据，转换</span></span><br><span class="line">    List&lt;UserVO&gt; list = BeanUtil.copyToList(records, UserVO.class);</span><br><span class="line">    <span class="comment">// 5.封装返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageDTO</span>&lt;UserVO&gt;(page.getTotal(), page.getPages(), list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动项目，在页面查看：</p><p><img src="https://i0.hdslb.com/bfs/article/1553ff22ef4e097186845bbb7ce4f0d8645325325.png" alt="img"></p><h3 id="4-2-3-改造-PageQuery-实体"><a href="#4-2-3-改造-PageQuery-实体" class="headerlink" title="4.2.3 改造 PageQuery 实体"></a><strong>4.2.3 改造 PageQuery 实体</strong></h3><p>在刚才的代码中，从 <code>PageQuery</code> 到 <code>MybatisPlus</code> 的 <code>Page</code> 之间转换的过程还是比较麻烦的。</p><p>我们完全可以在 <code>PageQuery</code> 这个实体中定义一个工具方法，简化开发。 像这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.OrderItem;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageQuery</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer pageNo;</span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;</span><br><span class="line">    <span class="keyword">private</span> String sortBy;</span><br><span class="line">    <span class="keyword">private</span> Boolean isAsc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt;  Page&lt;T&gt; <span class="title function_">toMpPage</span><span class="params">(OrderItem ... orders)</span>&#123;</span><br><span class="line">        <span class="comment">// 1.分页条件</span></span><br><span class="line">        Page&lt;T&gt; p = Page.of(pageNo, pageSize);</span><br><span class="line">        <span class="comment">// 2.排序条件</span></span><br><span class="line">        <span class="comment">// 2.1.先看前端有没有传排序字段</span></span><br><span class="line">        <span class="keyword">if</span> (sortBy != <span class="literal">null</span>) &#123;</span><br><span class="line">            p.addOrder(<span class="keyword">new</span> <span class="title class_">OrderItem</span>(sortBy, isAsc));</span><br><span class="line">            <span class="keyword">return</span> p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 2.2.再看有没有手动指定排序字段</span></span><br><span class="line">        <span class="keyword">if</span>(orders != <span class="literal">null</span>)&#123;</span><br><span class="line">            p.addOrder(orders);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; Page&lt;T&gt; <span class="title function_">toMpPage</span><span class="params">(String defaultSortBy, <span class="type">boolean</span> isAsc)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.toMpPage(<span class="keyword">new</span> <span class="title class_">OrderItem</span>(defaultSortBy, isAsc));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; Page&lt;T&gt; <span class="title function_">toMpPageDefaultSortByCreateTimeDesc</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> toMpPage(<span class="string">&quot;create_time&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; Page&lt;T&gt; <span class="title function_">toMpPageDefaultSortByUpdateTimeDesc</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> toMpPage(<span class="string">&quot;update_time&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们在开发也时就可以省去对从 <code>PageQuery</code> 到 <code>Page</code> 的的转换：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.构建条件</span></span><br><span class="line">Page&lt;User&gt; page = query.toMpPageDefaultSortByCreateTimeDesc();</span><br></pre></td></tr></table></figure><h3 id="4-2-4-改造-PageDTO-实体"><a href="#4-2-4-改造-PageDTO-实体" class="headerlink" title="4.2.4 改造 PageDTO 实体"></a><strong>4.2.4 改造 PageDTO 实体</strong></h3><p>在查询出分页结果后，数据的非空校验，数据的 vo 转换都是模板代码，编写起来很麻烦。</p><p>我们完全可以将其封装到 PageDTO 的工具方法中，简化整个过程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mp.domain.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.bean.BeanUtil;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageDTO</span>&lt;V&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> Long total;</span><br><span class="line">    <span class="keyword">private</span> Long pages;</span><br><span class="line">    <span class="keyword">private</span> List&lt;V&gt; list;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回空分页结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> p MybatisPlus的分页结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;V&gt; 目标VO类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;P&gt; 原始PO类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> VO的分页对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;V, P&gt; PageDTO&lt;V&gt; <span class="title function_">empty</span><span class="params">(Page&lt;P&gt; p)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageDTO</span>&lt;&gt;(p.getTotal(), p.getPages(), Collections.emptyList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将MybatisPlus分页结果转为 VO分页结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> p MybatisPlus的分页结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> voClass 目标VO类型的字节码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;V&gt; 目标VO类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;P&gt; 原始PO类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> VO的分页对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;V, P&gt; PageDTO&lt;V&gt; <span class="title function_">of</span><span class="params">(Page&lt;P&gt; p, Class&lt;V&gt; voClass)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.非空校验</span></span><br><span class="line">        List&lt;P&gt; records = p.getRecords();</span><br><span class="line">        <span class="keyword">if</span> (records == <span class="literal">null</span> || records.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 无数据，返回空结果</span></span><br><span class="line">            <span class="keyword">return</span> empty(p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 2.数据转换</span></span><br><span class="line">        List&lt;V&gt; vos = BeanUtil.copyToList(records, voClass);</span><br><span class="line">        <span class="comment">// 3.封装返回</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageDTO</span>&lt;&gt;(p.getTotal(), p.getPages(), vos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将MybatisPlus分页结果转为 VO分页结果，允许用户自定义PO到VO的转换方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> p MybatisPlus的分页结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> convertor PO到VO的转换函数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;V&gt; 目标VO类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;P&gt; 原始PO类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> VO的分页对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;V, P&gt; PageDTO&lt;V&gt; <span class="title function_">of</span><span class="params">(Page&lt;P&gt; p, Function&lt;P, V&gt; convertor)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.非空校验</span></span><br><span class="line">        List&lt;P&gt; records = p.getRecords();</span><br><span class="line">        <span class="keyword">if</span> (records == <span class="literal">null</span> || records.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 无数据，返回空结果</span></span><br><span class="line">            <span class="keyword">return</span> empty(p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 2.数据转换</span></span><br><span class="line">        List&lt;V&gt; vos = records.stream().map(convertor).collect(Collectors.toList());</span><br><span class="line">        <span class="comment">// 3.封装返回</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageDTO</span>&lt;&gt;(p.getTotal(), p.getPages(), vos);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终，业务层的代码可以简化为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageDTO&lt;UserVO&gt; <span class="title function_">queryUserByPage</span><span class="params">(PageQuery query)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.构建条件</span></span><br><span class="line">    Page&lt;User&gt; page = query.toMpPageDefaultSortByCreateTimeDesc();</span><br><span class="line">    <span class="comment">// 2.查询</span></span><br><span class="line">    page(page);</span><br><span class="line">    <span class="comment">// 3.封装返回</span></span><br><span class="line">    <span class="keyword">return</span> PageDTO.of(page, UserVO.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是希望自定义 PO 到 VO 的转换过程，可以这样做：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageDTO&lt;UserVO&gt; <span class="title function_">queryUserByPage</span><span class="params">(PageQuery query)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.构建条件</span></span><br><span class="line">    Page&lt;User&gt; page = query.toMpPageDefaultSortByCreateTimeDesc();</span><br><span class="line">    <span class="comment">// 2.查询</span></span><br><span class="line">    page(page);</span><br><span class="line">    <span class="comment">// 3.封装返回</span></span><br><span class="line">    <span class="keyword">return</span> PageDTO.of(page, user -&gt; &#123;</span><br><span class="line">        <span class="comment">// 拷贝属性到VO</span></span><br><span class="line">        <span class="type">UserVO</span> <span class="variable">vo</span> <span class="operator">=</span> BeanUtil.copyProperties(user, UserVO.class);</span><br><span class="line">        <span class="comment">// 用户名脱敏</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> vo.getUsername();</span><br><span class="line">        vo.setUsername(username.substring(<span class="number">0</span>, username.length() - <span class="number">2</span>) + <span class="string">&quot;**&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> vo;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终查询的结果如下：</p><p><img src="https://i0.hdslb.com/bfs/article/252a338f2d0322d1588c70b5134ccc50645325325.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MybatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tag Plugins</title>
      <link href="/posts/12220.html"/>
      <url>/posts/12220.html</url>
      
        <content type="html"><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>每次使用标签外挂都要去特意的搜索 ，这里把自己常用的内容给写下来 ，方便以后自己使用！</p></div><h2 id="1-Note-Bootstrap-Callout"><a href="#1-Note-Bootstrap-Callout" class="headerlink" title="1. Note (Bootstrap Callout)"></a>1. Note (Bootstrap Callout)</h2><mark class="hl-label pink">这里使用的是自定义方式</mark> <p>### simple<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="modern"><a href="#modern" class="headerlink" title="modern"></a>modern</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="flat"><a href="#flat" class="headerlink" title="flat"></a>flat</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="disabled"><a href="#disabled" class="headerlink" title="disabled"></a>disabled</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><h3 id="no-icon"><a href="#no-icon" class="headerlink" title="no-icon"></a>no-icon</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue no-icon %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink no-icon %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red no-icon %&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange no-icon %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple no-icon %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green no-icon %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div><h2 id="2-tag-hide"><a href="#2-tag-hide" class="headerlink" title="2. tag-hide"></a>2. tag-hide</h2><p>block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字(可选)</li><li>bg: 按钮的背景颜色(可选)</li><li>color: 按钮文字的颜色(可选)</li></ul><blockquote><p>案例：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看答案</span><br><span class="line">&#123;% hideBlock 查看答案 %&#125;</span><br><span class="line">傻子，怎么可能有答案</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p>查看答案<br><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div></p><h2 id="3-Button"><a href="#3-Button" class="headerlink" title="3. Button"></a>3. Button</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,green larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-center&quot;&gt;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><h2 id="4-inlineImg"><a href="#4-inlineImg" class="headerlink" title="4. inlineImg"></a>4. inlineImg</h2><p>题中的图片都是默认以块级元素显示，如果你想以内联元素显示，可以使用这个标签外挂。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineImg [src] [height] %&#125;</span><br><span class="line"></span><br><span class="line">[src]      :    图片链接</span><br><span class="line">[height]   ：   图片高度限制【可选】</span><br></pre></td></tr></table></figure><p>示例：我觉得很漂亮 <img class="inline-img" src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px" /></p><h2 id="5-label"><a href="#5-label" class="headerlink" title="5. label"></a>5. label</h2><blockquote><p>建议 不要 在段落开头使用 label 标签外挂</p></blockquote><p>高亮所需的文字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><ul><li>参数    解释</li><li>text    文字</li><li>color    【可选】背景颜色，默认为 default : default/blue/pink/red/purple/orange/green</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;创业未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此诚&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈于内；&#123;% label 忠志之士 purple %&#125;，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</span><br><span class="line">宫中、府中，俱为一体；陟罚臧否，不宜异同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</span><br></pre></td></tr></table></figure><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><h2 id="6-timeline"><a href="#6-timeline" class="headerlink" title="6. timeline"></a>6. timeline</h2><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><ul><li>title    标题/时间线</li><li>color    timeline 颜色 : default(留空) / blue / pink / red / purple / orange / green</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022 %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用bilibili图床</title>
      <link href="/posts/62197.html"/>
      <url>/posts/62197.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><ol><li>安装<a href="https://github.com/Molunerfinn/PicGo">PicGo</a> , 然后再安装</li><li>获取B站SESSDATA<ol><li>登录<a href="https://www.bilibili.com/">B站</a></li><li>按<code>F12</code>​打开控制台</li><li>找到<code>SESSDATA</code>​还有<code>bli_jct</code>​复制即可</li></ol></li></ol><h2 id="图片样式"><a href="#图片样式" class="headerlink" title="图片样式"></a>图片样式</h2><p>例如原图： <a href="https://i0.hdslb.com/bfs/article/ce0946fa9b4dbb61dde1ae65ad153ada645325325.png">https://i0.hdslb.com/bfs/article/ce0946fa9b4dbb61dde1ae65ad153ada645325325.png</a></p><p>规定高宽，质量压缩: <a href="https://i0.hdslb.com/bfs/article/ce0946fa9b4dbb61dde1ae65ad153ada645325325.png@104w_104h_1e_1c.jpg">https://i0.hdslb.com/bfs/article/ce0946fa9b4dbb61dde1ae65ad153ada645325325.png@104w_104h_1e_1c.jpg</a></p><div class="table-container"><table><thead><tr><th>Type</th><th>Url</th></tr></thead><tbody><tr><td>原图</td><td>baseURL/1.jpg</td></tr><tr><td>原分辨率，质量压缩</td><td>baseURL/<a href="mailto:1.jpg@1e_1c.jpg">1.jpg@1e_1c.jpg</a></td></tr><tr><td>规定宽，高度自适应，质量压缩</td><td>baseURL/<a href="mailto:1.jpg@104w_1e_1c.jpg">1.jpg@104w_1e_1c.jpg</a></td></tr><tr><td>规定高，宽度自适应，质量压缩</td><td>baseURL/<a href="mailto:1.jpg@104h_1e_1c.jpg">1.jpg@104h_1e_1c.jpg</a></td></tr><tr><td>规定高宽，质量压缩</td><td>baseURL/<a href="mailto:1.jpg@104w_104h_1e_1c.jpg">1.jpg@104w_104h_1e_1c.jpg</a></td></tr><tr><td>原分辨率，webp格式(占用最小)</td><td>baseURL/<a href="mailto:1.jpg@104w_104h_1e_1c.webp">1.jpg@104w_104h_1e_1c.webp</a></td></tr><tr><td>规定高度，webp格式(占用最小)</td><td>baseURL/<a href="mailto:1.jpg@104w_104h_1e_1c.webp">1.jpg@104w_104h_1e_1c.webp</a></td></tr></tbody></table></div><p>格式：(图像原链接)@(\d+[whsepqoc]_?)*(.(|webp|gif|png|jpg|jpeg))?$</p><ul><li>w:[1, 9223372036854775807] (width，图像宽度)</li><li>h:[1, 9223372036854775807] (height，图像高度)</li><li>s:[1, 9223372036854775807] (作用未知)</li><li>e:[0,2] (resize，0:保留比例取其小，1:保留比例取其大，2:不保留原比例，不与c混用)</li><li>p:[1,1000] (默认100，放大倍数，不与c混用)</li><li>q:[1,100] (quality，默认75，图像质量)</li><li>o:[0,1] (作用未知)</li><li>c:[0,1] (clip，0:默认，1:裁剪)</li><li>webp,png,jpeg,gif(不加则保留原格式)</li><li>不区分大小写，相同的参数后面覆盖前面</li><li>计算后的实际w<em>h不能大于原w</em>h，否则wh参数失效</li></ul><h2 id="解决B站防盗链（403）"><a href="#解决B站防盗链（403）" class="headerlink" title="解决B站防盗链（403）"></a>解决B站防盗链（403）</h2><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>B站开启了防盗链，利用的是HTTP的Referer属性做判断。如果Referer是他白名单之外的网站，就会返回403</p></div><h4 id="全站图片使用"><a href="#全站图片使用" class="headerlink" title="全站图片使用"></a>全站图片使用</h4><p>在html的head标签中设置如下标志，那么全站资源引用都不会携带referrer</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-referrer&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="新窗口打开"><a href="#新窗口打开" class="headerlink" title="新窗口打开"></a>新窗口打开</h4><p>主要设置<code>rel=&quot;noreferrer&quot;</code>​，使用<code>window.open</code>​打开的话是会默认携带<code>referrer</code>​的，第一次还是会403</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">&quot;noreferrer&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>图片测试：<br>‍<br><img src="https://i0.hdslb.com/bfs/article/17b5b67790c291b15ad6930078b0b1da645325325.png@1e_1c.webp" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>健身日记</title>
      <link href="/posts/5413be0e.html"/>
      <url>/posts/5413be0e.html</url>
      
        <content type="html"><![CDATA[<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>行万里路 ，练百万拳</p></div><div class="timeline orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>TimeLine</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-13 07:33</p></div></div><div class='timeline-item-content'><p>更像是健身日寄</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 月影墨书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我在人间凑数的日子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>空话艺术2：我觉得工作实习都很忙，没空去学习和积累</title>
      <link href="/posts/50040.html"/>
      <url>/posts/50040.html</url>
      
        <content type="html"><![CDATA[<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>核心矛盾不是在忙不忙上，而是你的欲望是否真的在这件事情上面。很多人自己先自我催眠上了</p></div><h2 id="最常见的两种沟通是这样子的"><a href="#最常见的两种沟通是这样子的" class="headerlink" title="最常见的两种沟通是这样子的"></a><span data-type="text" style="color: var(--b3-font-color10);">最常见的两种沟通是这样子的</span></h2><ol><li>一种和我说，陈老师，我现在很忙，或者我觉得未来我学习很忙，又要毕业又要忙实习，但我觉得这些没有啥价值，浪费了我的时间，我根本没时间去学习，去社交</li><li>另外一种就是和我说，哎呀，我现在工作很忙，加班很严重，balabala。然后说自己没空去学习，去社交</li><li>然后还有一种呢就是说让我二选一的，比如现在有个什么offer或者有个什么硕士要不要去读，然后说自己想更好的做商业，去积累，要去学习等等，要找一些空一点的或者说就是相对加班不那么严重的选择</li><li>说真的，有时候我也是傻逼，我真的被他们带过去了，然后开始认真分析这些选择，然后我就突然意识到，不对啊</li><li>核心矛盾是在忙上面么？？？？</li></ol><h2 id="核心矛盾"><a href="#核心矛盾" class="headerlink" title="核心矛盾"></a><span data-type="text" style="color: var(--b3-font-color4);">核心矛盾</span></h2><ol><li>我们以前就说过，学习本身是<span data-type="text" style="background-color: var(--b3-card-success-background); color: var(--b3-card-success-color);">需要方法的</span>，也是<span data-type="text" style="background-color: var(--b3-card-success-background); color: var(--b3-card-success-color);">需要毅力的</span>。而方法和实践是相辅相成的</li><li>就比如我们说社交，社交层面怎么和别人自我介绍呢？介绍之后又应该说点什么呢？和人怎么开始沟通，到沟通业务，到合作呢？</li><li>你说有没有方法论，也有，但其实如何让你自己融会贯通是需要你不停的去实践的</li><li>而在社会上，成功本来就是小概率事件，也就是说你碰见的大部分人其实无法和你合作或者说会直接拒绝你。那么你就需要不停的去尝试，复盘，修正，实践</li><li>所以核心矛盾其实是两个，<span data-type="text" style="background-color: var(--b3-card-success-background); color: var(--b3-card-success-color);">一个是有没有比较好的学习的方法，或者说搜索信息的能力</span>，<span data-type="text" style="background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);">另外一个就是你有没有毅力</span></li></ol><h2 id="现在的信息其实都是碎片化的，甚至很多都不是有效信息"><a href="#现在的信息其实都是碎片化的，甚至很多都不是有效信息" class="headerlink" title="现在的信息其实都是碎片化的，甚至很多都不是有效信息"></a>现在的信息其实都是碎片化的，甚至很多都不是有效信息</h2><ol><li>其实到了现在，我每次就会反问他们，如果你们空了，或者选择了一个放弃一个循规蹈矩的选择之后，你真的会去学习么？而不是刷dy呢？而不是去谈恋爱呢？</li><li>但如果你根本不能有毅力的去积累去学习，那么你当初为什么要去做这个选择呢？等你回过神来的时候，是不是就后悔了</li><li>其实大概率是这样的问题，很多人其实在这个时代，只要没人去教，没有系统性的学习资料，自己基本上已经不会学习了，<span data-type="text" style="background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);">什么都要别人教</span></li><li>那么你说自己很忙，没空balabala，就已经毫无意义了</li></ol><h2 id="所以反向也是一样的，你不能说工作或者读书太忙就没空学习"><a href="#所以反向也是一样的，你不能说工作或者读书太忙就没空学习" class="headerlink" title="所以反向也是一样的，你不能说工作或者读书太忙就没空学习"></a>所以反向也是一样的，你不能说工作或者读书太忙就没空学习</h2><ol><li>能忙到哪儿去？完全不能摸鱼？就现在这种生产力过剩的情况下，我不能说完全没有这种现象吧，但是那么多人都和我这样说，就过分了吧</li><li>而且大部分人也都是年轻人，我他妈每次问他们，怎么了，这公司开了5-10年了，就缺你这样一个人？你摸鱼了，甚至未来你不做了，怎么了？倒闭了？</li><li><span data-type="text" style="background-color: var(--b3-card-success-background); color: var(--b3-card-success-color);">所以本质上还是自己没有动起来，没有走出第一步</span>，所以就下意识的去说工作忙，自己累，或者怎么样。</li><li>咱就这样说，当下 这个时代，谁不累？谁不忙？<span data-type="text" style="background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);">既然要有所突破，要0到1，不得付出比其他人更多的时间么？</span>否则呢？</li></ol>]]></content>
      
      
      <categories>
          
          <category> 月湖笔谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 空话艺术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>空话艺术1：xxx决定了下限</title>
      <link href="/posts/1705.html"/>
      <url>/posts/1705.html</url>
      
        <content type="html"><![CDATA[<h3 id="很多人就喜欢说空话"><a href="#很多人就喜欢说空话" class="headerlink" title="很多人就喜欢说空话"></a>很多人就喜欢说空话</h3><ol><li>比如这种<code>xx决定下限</code>​比如什么学历啊 ，工作经历啊 ，大厂啊 ，和谁谁合作啊 ，决定下限</li><li>我们就分开来说 ，某个东西是决定了大众的下限？如果摸个东西决定了大众的下限 ，那么下限是什么？找得到工作？还是最低薪资？但现在保证了么？并没有啊？那决定什么下限？</li><li>如果说一个东西宏观层面决定了大众的下限 ，并没有特定的案例或者case by case的去分析 ，不就是空话嘛</li><li>如果这个决定的下限和你无关 ，和某个特定的人无关 ，那么这不就屁话吗？</li></ol><h3 id="我问几个问题"><a href="#我问几个问题" class="headerlink" title="我问几个问题"></a>我问几个问题</h3><ol><li>你出了社会之后，去哪工作你能决定嘛？你能很稳定的工作到几岁你能决定吗？未来会发生什么你能决定吗？或者话有说回来 ，你能决定什么？</li><li>你对社会了解多少？还是你做不做 ，随便做 ，家里都能兜底</li><li>无论谁都无法再任何事情上做出肯定的一种决定 ，这就是社会本身 ，那么也就是说 ，要真的说下限只有你自己 ，特定情况特定分析 ，比如你什么性格 ，你什么做事儿的态度 ，你什么行业 ，你大概会什么 ，综合来讲决定你的下限</li><li>而不是一个什么学历 ，学校或者说一个工作经验就决定你的下限了。要真的能那么简单和容易 ，大家也没有必要卷了</li></ol><h3 id="无法理解下限指的是什么？"><a href="#无法理解下限指的是什么？" class="headerlink" title="无法理解下限指的是什么？"></a>无法理解下限指的是什么？</h3><ol><li>下限指的是啥 ，我一直不明太 ，工作？收入 ？ 对象？资产？还是户口？还是啥？</li><li>因为这一切里面没有肯定的因果关系 ，既然没有肯定的因果关系 ，这就是一个空话</li><li>这话放出来就是为了 pua 自己 ，恶心哪些没有下限的人 ，就让自己感觉到 ，可以了 ，反正有了一个学历 ，去了大厂就好了 ，就有了下限了 。然后告诉哪些没有这些学历 ，没有这些经验的人 ，你们不行</li><li>我话就扔着了 ，30多岁开始 ，决定下限的只有关系和资源 ，别的任何用处都没有 ，因为有同样的牌的人太多了 ，怎么了 ？大家下限都一样 ？你们自己可以多想想</li></ol><h3 id="真正明白决定一个人发展的也是说不出这种话的"><a href="#真正明白决定一个人发展的也是说不出这种话的" class="headerlink" title="真正明白决定一个人发展的也是说不出这种话的"></a>真正明白决定一个人发展的也是说不出这种话的</h3><ol><li>说白了 ，网路上也好 ，你们领导也罢 ，但凡和你们说这种话的 ，你们就要清楚 ，多方要么自己就是没想明白 ，要么就是pua你 ，肯定是不靠谱的</li><li>真正明白一个人怎么发展 ，怎么生存 ，一定要结合你个人的实际情况下 ，来讲到底什么东西能给你带来什么影响 ，以及某些东旭也许是加分项 ，但也是比例加分 ，不是固定的加分</li><li>俗话说得好 ，死也要死的明白 ，我就算没有天赋 ，没有什么特殊技能 ，我就算最后就是下限很低 ，但我也清楚的确有这种关系 ，我不想一直活在被别人pua的世界里 ，直到某一天发现和我认知的不同</li><li>所以我还是那句话 ，宏观的正确的话不要说出来 ，都是空话 ，除了pua自己 ，就是害了别人</li></ol><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 月湖笔谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 空话艺术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思源笔记常用代码片段</title>
      <link href="/posts/42038.html"/>
      <url>/posts/42038.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景色设置"><a href="#背景色设置" class="headerlink" title="背景色设置"></a>背景色设置</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--b3-font-background1</span>: <span class="number">#423a3a</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background2</span>: <span class="number">#4b3722</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background3</span>: <span class="number">#203854c2</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background4</span>: <span class="number">#2c5438a3</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background5</span>: <span class="number">#4c525778</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background6</span>: <span class="number">#1b3f758a</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background7</span>: <span class="number">#664a1c73</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background8</span>: <span class="number">#5b1d1770</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background9</span>: <span class="number">#541b3594</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background10</span>: <span class="number">#6b2f6b70</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background11</span>: <span class="number">#2f4c264f</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background12</span>: <span class="number">#72390f54</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attr">--b3-font-background13</span>: <span class="number">#3c3c3cd9</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文字加粗颜色"><a href="#文字加粗颜色" class="headerlink" title="文字加粗颜色"></a>文字加粗颜色</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-tag">strong</span>, <span class="selector-class">.b3-typography</span> <span class="selector-tag">span</span><span class="selector-attr">[data-type~=strong]</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">strong</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">span</span><span class="selector-attr">[data-type~=strong]</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#73a6ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用块美化"><a href="#引用块美化" class="headerlink" title="引用块美化"></a>引用块美化</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.b3-typography</span> <span class="selector-class">.bq</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.bq</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">0.25em</span> solid <span class="number">#0b960e</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--b3-list-hover);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="底部栏颜色"><a href="#底部栏颜色" class="headerlink" title="底部栏颜色"></a>底部栏颜色</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.status</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3C3C3C</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.status</span> * &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#Dadada</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Cascadia Mono&#x27;</span>, <span class="string">&#x27;Cascadia Code&#x27;</span>, <span class="string">&#x27;Microsoft YaHei UI&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网址链接"><a href="#网址链接" class="headerlink" title="网址链接"></a>网址链接</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span> <span class="selector-tag">span</span><span class="selector-attr">[data-type~=a]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#7badff</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--b3-border-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题头图"><a href="#题头图" class="headerlink" title="题头图"></a>题头图</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.protyle-background__img</span> &#123;</span><br><span class="line"><span class="attribute">opacity</span>:<span class="number">1</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用快字体颜色"><a href="#引用快字体颜色" class="headerlink" title="引用快字体颜色"></a>引用快字体颜色</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.b3-typography</span> <span class="selector-class">.bq</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.bq</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#DADADA</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">0.25em</span> solid <span class="number">#0b960e</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--b3-list-hover);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改图片亮度"><a href="#修改图片亮度" class="headerlink" title="修改图片亮度"></a>修改图片亮度</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-class">.img</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">    user-<span class="selector-tag">select</span>: none;</span><br><span class="line">    <span class="attribute">word-break</span>: keep-all;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="大纲字体大小"><a href="#大纲字体大小" class="headerlink" title="大纲字体大小"></a>大纲字体大小</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fn__flex-column</span><span class="selector-class">.layout__dockr</span> <span class="selector-class">.file-tree</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">13px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码块字体样式"><a href="#代码块字体样式" class="headerlink" title="代码块字体样式"></a>代码块字体样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-class">.hljs</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.hljs</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Consolas <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hljs-comment</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="钉住的同时显示-icon-和标题-CSS-片段"><a href="#钉住的同时显示-icon-和标题-CSS-片段" class="headerlink" title="钉住的同时显示 icon 和标题 CSS 片段"></a>钉住的同时显示 icon 和标题 CSS 片段</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 钉住的同时显示 icon 和标题 CSS片段 */</span></span><br><span class="line"><span class="selector-class">.layout-tab-bar</span> <span class="selector-class">.item</span><span class="selector-class">.item--pin</span> <span class="selector-class">.item__text</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">max-width</span>: none;</span><br><span class="line">    <span class="attribute">display</span>: flex <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类似-logseq-的层次子弹线-CSS-片段"><a href="#类似-logseq-的层次子弹线-CSS-片段" class="headerlink" title="类似 logseq 的层次子弹线 CSS 片段"></a>类似 logseq 的层次子弹线 CSS 片段</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 类似 logseq 的层次子弹线 CSS片段 */</span></span><br><span class="line"><span class="comment">/* REF https://github.com/svchord/Rem-Craft */</span></span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.protyle-action</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">70</span>, <span class="number">110</span>, <span class="number">220</span>);;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.protyle-action</span> <span class="selector-tag">svg</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> <span class="number">0px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">pointer-events</span>:none;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">34px</span>;</span><br><span class="line">    <span class="attribute">left</span>:-<span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">top</span>:-<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>:solid;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgb</span>(<span class="number">70</span>, <span class="number">110</span>, <span class="number">220</span>);;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>))<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>:-<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">2px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)~<span class="selector-class">.li</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>))<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-attr">[data-subtype=o]</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">24px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-attr">[data-subtype=t]</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">28px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">pointer-events</span>:none;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">34px</span>;</span><br><span class="line">    <span class="attribute">left</span>:-<span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">top</span>:-<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>:solid;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgb</span>(<span class="number">70</span>, <span class="number">110</span>, <span class="number">220</span>);</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="built_in">calc</span>(<span class="number">100%</span> + <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">:has</span>(+<span class="selector-class">.list</span>)<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:auto;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-attr">[data-type=NodeHeading]</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">185%</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">::after</span>,<span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)~<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">::after</span>,<span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-class">.bq</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">::after</span>,<span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-class">.bq</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)~<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">::after</span>,<span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-class">.sb</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">::after</span>,<span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-class">.sb</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)~<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[fold=<span class="string">&quot;1&quot;</span>]</span>&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">::after</span>,<span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">:has</span>(&gt;<span class="selector-class">.block-focus</span>)&gt;<span class="selector-attr">[data-node-id]</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=o]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>:-<span class="number">10px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=o]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">28px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=t]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.protyle-action</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">70</span>, <span class="number">110</span>, <span class="number">220</span>);;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=t]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.protyle-action</span> <span class="selector-tag">svg</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> <span class="number">0px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=t]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>:-<span class="number">14px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=t]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">32px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.protyle-wysiwyg</span> <span class="selector-attr">[data-node-id]</span><span class="selector-class">.li</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-attr">[data-subtype=t]</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)<span class="selector-class">.protyle-task--done</span>&gt;<span class="selector-class">.list</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.block-focus</span>)&gt;<span class="selector-class">.li</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">139</span>, <span class="number">139</span>, <span class="number">139</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类似-logseq-的层次子弹线-JS-片段"><a href="#类似-logseq-的层次子弹线-JS-片段" class="headerlink" title="类似 logseq 的层次子弹线 JS 片段"></a>类似 logseq 的层次子弹线 JS 片段</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 类似 logseq 的层次子弹线 JS片段 */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获得指定块位于的编辑区</span></span><br><span class="line"><span class="comment"> * @params &#123;HTMLElement&#125;</span></span><br><span class="line"><span class="comment"> * @return &#123;HTMLElement&#125; 光标所在块位于的编辑区</span></span><br><span class="line"><span class="comment"> * @return &#123;null&#125; 光标不在块内</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">function getTargetEditor(block) &#123;</span><br><span class="line">    while (block != null &amp;&amp; !block<span class="selector-class">.classList</span><span class="selector-class">.contains</span>(&#x27;protyle-wysiwyg&#x27;)) block = block<span class="selector-class">.parentElement</span>;</span><br><span class="line">    return block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获得焦点所在的块</span></span><br><span class="line"><span class="comment"> * @return &#123;HTMLElement&#125; 光标所在块</span></span><br><span class="line"><span class="comment"> * @return &#123;null&#125; 光标不在块内</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">function getFocusedBlock() &#123;</span><br><span class="line">    if (document<span class="selector-class">.activeElement</span><span class="selector-class">.classList</span><span class="selector-class">.contains</span>(&#x27;protyle-wysiwyg&#x27;)) &#123;</span><br><span class="line">        let block = window<span class="selector-class">.getSelection</span>()?<span class="selector-class">.focusNode</span>?<span class="selector-class">.parentElement</span>; // 当前光标</span><br><span class="line">        while (block != null &amp;&amp; block<span class="selector-class">.dataset</span><span class="selector-class">.nodeId</span> == null) block = block<span class="selector-class">.parentElement</span>;</span><br><span class="line">        return block;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function focusHandler() &#123;</span><br><span class="line">    <span class="comment">/* 获取当前编辑区 */</span></span><br><span class="line">    let block = getFocusedBlock(); // 当前光标所在块</span><br><span class="line">    <span class="comment">/* 当前块已经设置焦点 */</span></span><br><span class="line">    if (block?<span class="selector-class">.classList</span><span class="selector-class">.contains</span>(`block-focus`)) return;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 当前块未设置焦点 */</span></span><br><span class="line">    const editor = getTargetEditor(block); // 当前光标所在块位于的编辑区</span><br><span class="line">    if (editor) &#123;</span><br><span class="line">        editor<span class="selector-class">.querySelectorAll</span>(`<span class="selector-class">.block-focus</span>`)<span class="selector-class">.forEach</span>((element) =&gt; element<span class="selector-class">.classList</span><span class="selector-class">.remove</span>(`block-focus`));</span><br><span class="line">        block<span class="selector-class">.classList</span><span class="selector-class">.add</span>(`block-focus`);</span><br><span class="line">        // setSelector(block);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function bulletMain() &#123;</span><br><span class="line">    // 跟踪当前所在块</span><br><span class="line">    window<span class="selector-class">.addEventListener</span>(&#x27;mouseup&#x27;, focusHandler, true);</span><br><span class="line">    window<span class="selector-class">.addEventListener</span>(&#x27;keyup&#x27;, focusHandler, true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(async () =&gt; &#123;</span><br><span class="line">    bulletMain();</span><br><span class="line">    console<span class="selector-class">.log</span>(&#x27;加载子弹线成功&#x27;)</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="去除图片后的多余空行-CSS-片段"><a href="#去除图片后的多余空行-CSS-片段" class="headerlink" title="去除图片后的多余空行 CSS 片段"></a>去除图片后的多余空行 CSS 片段</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 去除图片后的多余空行 CSS片段 */</span></span><br><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-class">.img</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[style]</span>), <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.img</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[style]</span>) &#123;</span><br><span class="line">   <span class="attribute">display</span>:inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码块字体设置"><a href="#代码块字体设置" class="headerlink" title="代码块字体设置"></a>代码块字体设置</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">28px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--b3-theme-on-background);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1px</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.b3-typography</span> <span class="selector-class">.bq</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.bq</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">0.25em</span> solid <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--b3-list-hover);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="虚线备注"><a href="#虚线备注" class="headerlink" title="虚线备注"></a>虚线备注</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 虚线备注 CSS片段 https://github.com/TCOTC/siyuan-css-dashed-line-memo */</span></span><br><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-tag">span</span><span class="selector-attr">[data-type~=inline-memo]</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">span</span><span class="selector-attr">[data-type~=inline-memo]</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">2px</span> dashed <span class="built_in">var</span>(--b3-theme-primary) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="隐藏大纲前面的块标记-H"><a href="#隐藏大纲前面的块标记-H" class="headerlink" title="隐藏大纲前面的块标记 H"></a>隐藏大纲前面的块标记 H</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sy__outline</span> <span class="selector-class">.b3-list-item__graphic</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.protyle-wysiwyg</span>&gt;<span class="selector-class">.p</span> &#123;</span><br><span class="line"> <span class="attribute">line-height</span>: <span class="number">2.3</span>;  <span class="comment">/*段落块的行间距，段间距的话前面该改成margin*/</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="文档树块间距"><a href="#文档树块间距" class="headerlink" title="文档树块间距"></a>文档树块间距</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b3-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">28px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--b3-theme-on-background);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1px</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.b3-typography</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.b3-typography</span> <span class="selector-class">.bq</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-tag">blockquote</span>, <span class="selector-class">.protyle-wysiwyg</span> <span class="selector-class">.bq</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">0.25em</span> solid <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--b3-list-hover);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="标题居中"><a href="#标题居中" class="headerlink" title="标题居中"></a>标题居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.protyle-title__input</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="plugin-custom-fonts-style"><a href="#plugin-custom-fonts-style" class="headerlink" title="plugin-custom-fonts-style"></a>plugin-custom-fonts-style</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Twemoji Mozilla: https://github.com/mozilla/twemoji-colr */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Twemoji Mozilla&quot;</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;plugins/custom-fonts/static/fonts/Twemoji.Mozilla/Twemoji.Mozilla-0.7.0.ttf&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--b3-font-family-emoji</span>: <span class="string">&quot;Twemoji Mozilla&quot;</span>, <span class="string">&quot;Segoe UI Emoji&quot;</span>, <span class="string">&quot;Segoe UI Symbol&quot;</span>, <span class="string">&quot;Segoe UI&quot;</span>, <span class="string">&quot;Apple Color Emoji&quot;</span>, <span class="string">&quot;Noto Color Emoji&quot;</span>, <span class="string">&quot;Android Emoji&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 思源笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记相关CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义Callout样式</title>
      <link href="/posts/442fdc66.html"/>
      <url>/posts/442fdc66.html</url>
      
        <content type="html"><![CDATA[<p>使用插件：<code>Savor Callout</code></p><p><img src="https://cdn.jsdelivr.net/gh/NorthPoet/images/images/image-20240630102100-xcvud18.png" alt="image">​</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Info&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;🎐&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New Callout&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(8, 109, 221, 0.15)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(53, 76, 75, .5)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;box&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(238, 245, 248, .3)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgbaa(53, 76, 75, 1)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/NorthPoet/images/images/image-20240630102033-95ggmba.png" alt="image">​</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;🍃&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New Callout&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(8, 185, 78, 0.1)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(53, 76, 75, .5)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;box&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(238, 245, 248, .3)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgbaa(53, 76, 75, 1)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/NorthPoet/images/images/image-20240630102115-gje9wuz.png" alt="image">​</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;📌&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New Callout&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(217, 201, 248, 0.38)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(53, 76, 75, .5)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;box&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(238, 245, 248, .3)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgbaa(53, 76, 75, 1)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/NorthPoet/images/images/image-20240630102144-uvspsd3.png" alt="image">​</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Danger&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;🖌&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New Callout&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(255, 235, 236, 80)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(53, 76, 75, .5)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;box&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;light&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(238, 245, 248, .3)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgbaa(53, 76, 75, 1)&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 思源笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记相关CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于独处</title>
      <link href="/posts/750cb0cc.html"/>
      <url>/posts/750cb0cc.html</url>
      
        <content type="html"><![CDATA[<p>你开始有一点抑郁的迹象了，是不是最近学习压力大，或者是与宿友同学的关系处理不太好，建议你不要总是把自己封闭在一个狭小的空间，多出去走走，也可以出去做做运动，或者是参加学校一些集体活动，或者去图书馆几本书看，心情会舒畅很多，孤独感也会自然而然消除了，如果你总是习惯性的回到宿舍躺在床上玩手机，久而久之你会对手机产生依赖，甚至网络上的一些错误的观念会直接影响你的思想，沉迷与短视频后，它会占用你大量的个人时间，一旦产生依赖，就是很难专注的学习，制定的学习计划也会沉迷网络难以执行下去，甚至会因为网络上一些错误的观念中途停止计划。还有就是你的身体，由于你习惯性躺在床上玩手机，沉迷于网络，久而久之你的身体素质会慢慢变差，身体开始会出现一些疾病，到后期的话你可能就需要经常去医院了。你的社交圈也会因为你经常封闭在一个空间里面无法拓展，你的思维能力与表达能力也会逐渐衰退。还有就是你认为二本不好，那你知不知道其实在中国，能够有拥有本科学历的比例其实并不高，绝大多人学历只有初中到大专的学历，你这个学历，你去那些知名的公司与政府单位可能不会受待见，但如果是去一些普通的工厂，你已经是算是高学历的人才，能够胜任技术工程师与办公室的文职工作，而不是去流水线打螺丝。还有就是你觉得二本不好，可能是别人给你灌输的观念，但如果你接受了这种观念，你的思想与行为会收到很大影响，思想会变得自卑，不思进取，行为也会变得缺乏动力，因为从心理上你已经定义了你自己是不行，你给自己贴上的标签，会很大程度影响日后的所有行动。不要小瞧心理对人的影响，往正面看他可以使一个人变得越来越上进，往负面看它也可以在无形中废掉一个人。抱怨是不会对现状有任何改变的，只会逐渐让你丧失斗志对生活失去希望，你唯有抱有一种永不服输的精神，你才会有那勇气，恒心，毅力去克服阻碍前进道路的所有困难。其实也没有什么好悲哀，如果是生活给你制造各种困难，那你应该想着如何解决这个困难，又或者是某些人给你制造了问题，你就要想如何去解决这个问题，当你能够凭借你的智慧把困难解决，那么在你前进道路上的阻碍就变少了，你的人生道路会越来越顺畅。甚至一些曾经的缺点也会因为经过改变后变成你的优点。</p>]]></content>
      
      
      <categories>
          
          <category> 月影墨书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我在人间凑数的日子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly-自用数据记录</title>
      <link href="/posts/59798.html"/>
      <url>/posts/59798.html</url>
      
        <content type="html"><![CDATA[<h2 id="博客宽屏适配（自用）"><a href="#博客宽屏适配（自用）" class="headerlink" title="博客宽屏适配（自用）"></a>博客宽屏适配（自用）</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 全局宽度 */</span></span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">1460px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 侧边卡片栏宽度 */</span></span><br><span class="line"><span class="selector-class">.aside-content</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">318px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 平板尺寸自适应(不启用侧边栏宽度限制) */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.aside-content</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layout</span><span class="selector-class">.hide-aside</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">1400px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人信息卡片背景图"><a href="#个人信息卡片背景图" class="headerlink" title="个人信息卡片背景图"></a>个人信息卡片背景图</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://s11.ax1x.com/2023/05/02/p9GWEin.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: inherit;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://s11.ax1x.com/2023/05/02/p9GWVGq.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: inherit;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 个人信息卡片背景图 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 个人卡片信息 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">24px</span> <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章卡片擦亮动画"><a href="#文章卡片擦亮动画" class="headerlink" title="文章卡片擦亮动画"></a>文章卡片擦亮动画</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span> <span class="selector-class">.post_cover</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span> <span class="selector-class">.post_cover</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    -webkit-<span class="attribute">transition</span>: -webkit-transform .<span class="number">3s</span>;</span><br><span class="line">    -moz-<span class="attribute">transition</span>: -moz-transform .<span class="number">3s</span>;</span><br><span class="line">    -o-<span class="attribute">transition</span>: -o-transform .<span class="number">3s</span>;</span><br><span class="line">    -ms-<span class="attribute">transition</span>: -ms-transform .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform .<span class="number">3s</span>;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">15%</span>,-<span class="number">150%</span>,<span class="number">0</span>);</span><br><span class="line">    -moz-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">15%</span>,-<span class="number">150%</span>,<span class="number">0</span>);</span><br><span class="line">    -o-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">15%</span>,-<span class="number">150%</span>,<span class="number">0</span>);</span><br><span class="line">    -ms-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">15%</span>,-<span class="number">150%</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">15%</span>,-<span class="number">150%</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span> <span class="selector-class">.post_cover</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">0</span>,<span class="number">130%</span>,<span class="number">0</span>);</span><br><span class="line">    -moz-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">0</span>,<span class="number">130%</span>,<span class="number">0</span>);</span><br><span class="line">    -o-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">0</span>,<span class="number">130%</span>,<span class="number">0</span>);</span><br><span class="line">    -ms-<span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">0</span>,<span class="number">130%</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">60deg</span>) <span class="built_in">translate3d</span>(<span class="number">0</span>,<span class="number">130%</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文章卡片擦亮动画 */</span></span><br></pre></td></tr></table></figure><h2 id="翻页按钮"><a href="#翻页按钮" class="headerlink" title="翻页按钮"></a>翻页按钮</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 翻页按钮居中 */</span></span><br><span class="line"><span class="selector-id">#pagination</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章标题居中"><a href="#文章标题居中" class="headerlink" title="文章标题居中"></a>文章标题居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#post-info</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="comment">/* 这里的bottom：的值可以调节标题的上下位置 */</span></span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">160px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章字体"><a href="#文章字体" class="headerlink" title="文章字体"></a>文章字体</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;HarmonyOS_Sans_SC_Medium&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>:HarmonyOS_Sans_SC_Medium;<span class="attribute">font-style</span>: normal;<span class="attribute">font-display</span>: swap;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://cdn.jsdelivr.net/gh/irozhi/HarmonyOS-Sans/HarmonyOS_Sans_SC/HarmonyOS_Sans_SC_Medium.woff2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>),</span><br><span class="line">       <span class="built_in">url</span>(<span class="string">&#x27;https://cdn.jsdelivr.net/gh/irozhi/HarmonyOS-Sans/HarmonyOS_Sans_SC/HarmonyOS_Sans_SC_Medium.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章行间距"><a href="#文章行间距" class="headerlink" title="文章行间距"></a>文章行间距</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章行间距 */</span></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2.3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="时间轴背景图"><a href="#时间轴背景图" class="headerlink" title="时间轴背景图"></a>时间轴背景图</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 时间轴样式 */</span></span><br><span class="line"><span class="selector-id">#page-header</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="comment">/* background-color: #49b1f5; */</span></span><br><span class="line">  <span class="attribute">background-position</span>: center center;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  -moz-<span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  -o-<span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  -ms-<span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://cdn.jsdelivr.net/gh/NorthPoet/images/images/picture-2312336.jpg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="菜单字体样式"><a href="#菜单字体样式" class="headerlink" title="菜单字体样式"></a>菜单字体样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 字体 */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: ZhuZiAYuanJWD;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2</span>);</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">  <span class="attribute">font-weight</span>: lighter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#menus</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;ZhuZiAYuanJWD&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-id">#site-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: ZhuZiAYuanJWD;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">3em</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.article-title</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.blog-slider__title</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.categoryBar-list-link</span>,</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-class">.post-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: ZhuZiAYuanJWD;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导航栏居中"><a href="#导航栏居中" class="headerlink" title="导航栏居中"></a>导航栏居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 导航栏 */</span></span><br><span class="line"><span class="comment">/* 一级菜单居中 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.menus_items</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: fit-content <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 子菜单横向展示 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.menus_items</span> <span class="selector-class">.menus_item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.menus_item_child</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */</span></span><br><span class="line"><span class="selector-class">.menus_items</span> <span class="selector-class">.menus_item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) <span class="selector-class">.menus_item_child</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">125px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="卡片边框"><a href="#卡片边框" class="headerlink" title="卡片边框"></a>卡片边框</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cardHover</span>,</span><br><span class="line"><span class="selector-class">.error404</span> <span class="selector-id">#error-wrap</span> <span class="selector-class">.error-content</span>,</span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>),</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-class">.recent-posts</span> <span class="selector-class">.pagination</span>&gt;*<span class="selector-pseudo">:not</span>(<span class="selector-class">.space</span>) &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--card-bg);</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  -moz-<span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  -o-<span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  -ms-<span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cardHover</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.error404</span> <span class="selector-id">#error-wrap</span> <span class="selector-class">.error-content</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>)<span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-class">.recent-posts</span> <span class="selector-class">.pagination</span>&gt;*<span class="selector-pseudo">:not</span>(<span class="selector-class">.space</span>)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#425AEF</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带框框的分类样式"><a href="#带框框的分类样式" class="headerlink" title="带框框的分类样式"></a>带框框的分类样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.category-lists</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2em</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.2em</span> <span class="number">0.5em</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.5em</span> <span class="number">0.5em</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  -webkit-<span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">  -webkit-<span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1.5px</span> solid <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> -<span class="number">4px</span> <span class="number">#2c2d300c</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.category-lists</span> <span class="selector-class">.category-list</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5em</span> <span class="number">0</span> <span class="number">3em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带框框的标签样式"><a href="#带框框的标签样式" class="headerlink" title="带框框的标签样式"></a>带框框的标签样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2em</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.2em</span> <span class="number">0.5em</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.5em</span> <span class="number">0.5em</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  -webkit-<span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">  -webkit-<span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1.5px</span> solid <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> -<span class="number">4px</span> <span class="number">#2c2d300c</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud-list</span><span class="selector-class">.is-center</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5em</span> <span class="number">0</span> <span class="number">3em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章头部增加高度"><a href="#文章头部增加高度" class="headerlink" title="文章头部增加高度"></a>文章头部增加高度</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-id">#page-header</span><span class="selector-class">.post-bg</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">460px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="侧边栏标签统一字体大小"><a href="#侧边栏标签统一字体大小" class="headerlink" title="侧边栏标签统一字体大小"></a>侧边栏标签统一字体大小</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 侧边栏标签统一字体大小 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>轻语时光</title>
      <link href="/posts/8ebfad52.html"/>
      <url>/posts/8ebfad52.html</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>小北の碎碎念</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-16 14:20</p></div></div><div class='timeline-item-content'><p>再重新听一遍剑来也是个不错的选择<br><img src="https://i0.hdslb.com/bfs/article/ec67f2cda72f3c63d4813ac65f0e3332645325325.jpg" alt=""></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-16 07:00</p></div></div><div class='timeline-item-content'><p>开始百天打卡了！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-14 07:29</p></div></div><div class='timeline-item-content'><p>我与我周旋久,宁作我!<br><img src="https://i0.hdslb.com/bfs/article/71385bd1b888173d9ea65a4857b62083645325325.jpg" alt=""></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-14 07:29</p></div></div><div class='timeline-item-content'><p>愿许秋风离别意 ，散我心中意难平<br>哈哈 ，最近有点太悲观了 ，好好调整下心态和作息🐳🐳🐳</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-13 20:43</p></div></div><div class='timeline-item-content'><p>看不良人，得到最好的结论就是：前期你看不懂李星云，因为那时你就是李星云，年幼时你不想负任何责任，只想着无忧无虑的过日子，而大帅就像是你家里的人，前期帮你各种铺路，可是等你长大了，家里人不在了，你发现你离开家里人，其实啥也不会。你开始无助、不安、焦虑，你不得已才开始在社会上努力学习试错，和各种自己不服的事和人做着抗争。<br>看到第四季以后，终于你明白了，当初说那个烂泥扶不上墙的人，其实就是你自己啊，你又何尝不是想像李星云说的那样，过闲云野鹤般的生活，可是无奈时代不允许，生活不允许，家人不允许。<br>到最后你也发现了，其实你就是李星云，你也明白了，其实并不是每个人都能做自己想做的事，成为自己想成为的人。<br><img src="https://i0.hdslb.com/bfs/article/4c081d91e2501773ba1ce4d9c07aca31645325325.jpg" alt=""></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-13 10:24</p></div></div><div class='timeline-item-content'><p>闲来无事 ，新增藏宝阁样式页面</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-13 07:50</p></div></div><div class='timeline-item-content'><p>我该失望的事 ，从来没有辜负我</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-11 23:57</p></div></div><div class='timeline-item-content'><p>少年大笑出门去，千里落花风；如今青衫仗剑回，山河满春风；美人赠我金刀错，剑气长城剑气近；人间清都山水郎，少年最为思无邪！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-11 16:40</p></div></div><div class='timeline-item-content'><p>真是糟糕的一天<br><img src="https://testingcf.jsdelivr.net/gh/LunaNorth/img-cloud/images/Snipaste_2024-08-10_09-45-22.png" alt="north"></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-09 21:07</p></div></div><div class='timeline-item-content'><p>重新调整了下标签样式</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-09 11:14</p></div></div><div class='timeline-item-content'><p>刚好没什么事 ，魔改了下友链样式</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-08 11:38</p></div></div><div class='timeline-item-content'><p>这糟糕的人啊！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-05 20:36</p></div></div><div class='timeline-item-content'><p>看看明天有时间没 ，有时间的话就把最后的尾巴也给重写一下！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-05 17:26</p></div></div><div class='timeline-item-content'><p>今天把主题给重构了一下 ，主要是以阅读为主 ，基本上每个版块都进行的小小的重构 ，其他的等后续有时间了再慢慢进行更改</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-08-01 17:21</p></div></div><div class='timeline-item-content'><p>我们看惯了小说和电影中的美好结局 ，却忘了现实中的遗憾才是常态</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-31 18:21</p></div></div><div class='timeline-item-content'><p>看下一下午的小说 ，罪恶啊！🥱🥱🥱</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-31 11:24</p></div></div><div class='timeline-item-content'><p>年少轻狂的岁月，沉淀下来的是那些再也回不到的过去，总让人感叹，这是未曾珍惜而那失去的那些，但这些恰恰也是我们想让你去体会的，因为年少轻狂的岁月，一生只有一次，世间最珍贵的，不是得不到和已失去的，而是现在能把握的，我们生活在一个复杂而又充满无奈的世界，身上背负太多太多的责任和使命，有时候我们处理不当，就会不堪重负，难以忍受，最宽阔的是海洋，比海洋更宽阔的是天空，比天空更宽阔的是人的胸怀，当你紧握双手里面什么都没有，当你打开双手，世界就在你手中</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-29 18:42</p></div></div><div class='timeline-item-content'><p>自今日起 ，恢复锻炼</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-28 20:52</p></div></div><div class='timeline-item-content'><p>给博客分类和标签页面换个样式 ，后面差不多应该不会进行样式美化了 ，主要原因参考：<a href="https://northpoet.github.io/posts/undefined.html">Butterfly 主题美化之旅：从绚烂回归质朴</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-28 10:52</p></div></div><div class='timeline-item-content'><p>还是不要熬夜的好 ，昨天睡太晚了 ，导致今天的精神状态都不是很好😴😴😴</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-27 16:12</p></div></div><div class='timeline-item-content'><p>加了个卡片背景 ，看起来好看多了</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-27 15:27</p></div></div><div class='timeline-item-content'><p>花了一小点时间将博客进行了下简单的重构！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-25 10:38</p></div></div><div class='timeline-item-content'><p>争取两天时间学完黑马点评！！！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-23 10:36</p></div></div><div class='timeline-item-content'><p>程序员的悲哀是什么？<br>沾沾自喜学了一辈子技术，最终不过是一个自带优越感的工具人。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-22 06:53</p></div></div><div class='timeline-item-content'><p>好像快一个月没有学习了！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-19 20:20</p></div></div><div class='timeline-item-content'><p>电子游戏无感了！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-20 19:20</p></div></div><div class='timeline-item-content'><p>后面的话 ，也打算开始记录自己的学习生活了 ，希望自己可以坚持下来吧！<br><img src="https://cdn.jsdelivr.net/gh/NorthPoet/images/images/027EB789.jpg" alt="img"></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-18 20:55</p></div></div><div class='timeline-item-content'><p>锻炼完感觉我状态又回来了 ，明天准备早起学习 ✨✨✨</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-18 17:20</p></div></div><div class='timeline-item-content'><p>真的烦 ，发现自己好像又回到了之前的状态了 ，不行 ，我要给自己来个强制开机 ，先准备锻炼去🦉</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-18 13:33</p></div></div><div class='timeline-item-content'><p>其实人一辈子是需要一些建议的，寻求答案，就是当自己寻找不出答案做不出正确的选择时，需要借鉴别人的建议，供自己做出选择，他人的高度确实可能限制了你的视野，但如果当自己没有别人的高度时，是可以借鉴别人的视野来，看清自己，答案永远是自己认同，并不需要追求别人的认同，这样才不能被世人的高墙围住。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-18 09:37</p></div></div><div class='timeline-item-content'><p>先迁移一部分学习笔记 ，有时间的话 ，再把另外的笔记也给迁移上面去</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-18 07:26</p></div></div><div class='timeline-item-content'><p>准备继续锻炼 ，开始自律 ，还是继续三分化训练加早起空腹有氧运动 ，贵在坚持 ，冲冲冲！！！<br><img src="https://cdn.jsdelivr.net/gh/NorthPoet/images/images/000CDDD2.gif" alt="img"></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-17 23:09</p></div></div><div class='timeline-item-content'><p>明天准备做一下笔记的迁移 ，把大部分的学习笔记都迁移到该博客上面去！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-17 22:48</p></div></div><div class='timeline-item-content'><p>遇事不决 ，可问春风</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p> 2024-07-17 22:37</p></div></div><div class='timeline-item-content'><p>我永远喜欢喜多川海梦！！<br><img src="https://i0.hdslb.com/bfs/article/bd1509913091b89448e0657d19ec5441645325325.jpg" alt=""></p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 月影墨书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我在人间凑数的日子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 主题美化之旅：从绚烂回归质朴</title>
      <link href="/posts/a0708e01.html"/>
      <url>/posts/a0708e01.html</url>
      
        <content type="html"><![CDATA[<p>在这个充满各种可能的时代，博客不仅是个人展示才华与知识的窗口，也是技术爱好者分享经验、记录成长的平台。对于许多博主来说，博客的主题不仅仅是简单的视觉呈现，更是个性与品味的展现。然而，在追求完美的过程中，我们往往会陷入一个误区——过度美化博客主题，以至于忘记了博客最核心的价值所在：内容本身。</p><h2 id="美化之旅的起点"><a href="#美化之旅的起点" class="headerlink" title="美化之旅的起点"></a>美化之旅的起点</h2><p>记得当初选择了Hexo作为我的静态站点生成器，并安装了Butterfly主题时，我对它的第一印象是简洁而优雅。Butterfly主题以其轻量级、高性能而著称，它在开发者社区中有着良好的口碑。起初，我并没有过多地考虑主题的个性化设置，只是简单地调整了一些基本的配置项，如网站标题、logo等。</p><p>随着时间的推移，我开始觉得这个主题过于朴素，缺乏个性。于是，我踏上了主题美化的征程。我开始学习CSS、Sass等前端技术，研究了Butterfly主题的源码结构，尝试着改变背景颜色、字体样式、布局结构……每一步都让我感到兴奋，也让我更加沉迷于主题的设计之中。</p><p>我花费了大量的时间在寻找合适的字体、背景图以及动画效果上。我还为博客添加了各种插件，例如代码高亮、文章目录、阅读进度条等等。这些功能不仅让博客看起来更加专业，也让用户体验得到了提升。但是，当我回过头来看自己的文章时，我发现这段时间里我几乎没有更新过任何有价值的内容。我开始思考，这种过分关注外观的行为是否值得？</p><h2 id="从绚烂到回归质朴"><a href="#从绚烂到回归质朴" class="headerlink" title="从绚烂到回归质朴"></a>从绚烂到回归质朴</h2><p>经过一段时间的努力，我的博客终于变得五彩斑斓、独具特色。我甚至开始在社交媒体上分享我的主题美化心得，收到了不少好评。然而，当我静下心来反思这段时间的经历时，我意识到一个问题：我花了太多的时间在博客的外观上，却忽视了最重要的部分——内容创作。</p><h3 id="美化的尽头"><a href="#美化的尽头" class="headerlink" title="美化的尽头"></a>美化的尽头</h3><p>随着思考的深入，我逐渐意识到，无论主题多么华丽，如果博客没有高质量的文章支撑，那它就像是一座空壳。真正的美感不仅仅体现在视觉效果上，更在于文字所传达的思想与情感。我开始重新审视那些花费无数时间精心设计的主题元素，发现它们虽然能够吸引眼球，但却不能长久留住读者的心。</p><h3 id="回归默认"><a href="#回归默认" class="headerlink" title="回归默认"></a>回归默认</h3><p>最终，我决定回归到Butterfly主题的默认样式。这并不是说我不再关心博客的外观，而是我认为简约而不失个性的设计更适合博客的定位。通过这种方式，我可以将更多的精力投入到创作优质内容上，让文字本身成为博客最吸引人的地方。</p><p>回归默认的过程中，我删除了许多之前添加的插件和特效，只保留了最基本的功能。这样的变化使得页面加载速度更快，用户访问体验更好。我也开始重新审视自己的写作计划，规划未来要发表的文章内容，确保它们既有深度又有趣味性。</p><h2 id="写作与审美的平衡"><a href="#写作与审美的平衡" class="headerlink" title="写作与审美的平衡"></a>写作与审美的平衡</h2><p>经历了这段旅程之后，我意识到博客的成功不仅仅取决于美观的主题，更重要的是内容的质量。我开始更加专注于提高自己的写作技巧，学习如何更好地组织语言，如何让文章更具吸引力。同时，我也意识到，适度的美化是可以提升用户体验的，但关键是要找到一个平衡点。</p><h3 id="持续改进"><a href="#持续改进" class="headerlink" title="持续改进"></a>持续改进</h3><p>现在，每当我在键盘上敲下一行行文字时，我都感到格外的满足与幸福。因为我深知，这些文字将会是连接我和读者之间最坚固的桥梁。我也会定期对博客进行微调，保持其新鲜感，但不再沉迷于无休止的美化工作。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>美化博客主题的过程是一段宝贵的旅程，它让我学到了很多技能，也让我明白了一个道理：真正的美不在于外表的华丽，而在于内容的深度。我鼓励每一位博主都要找到自己的平衡点，让博客成为一个既美观又充满价值的地方。在这个过程中，也许你会发现，最美好的状态往往是最简单、最自然的样子。</p>]]></content>
      
      
      <categories>
          
          <category> 月影墨书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我在人间凑数的日子</title>
      <link href="/posts/facab7a2.html"/>
      <url>/posts/facab7a2.html</url>
      
        <content type="html"><![CDATA[<div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>捞月亮の小北</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>珍惜眼前人吧……</p></div></div><div class='timeline-item-content'><p>总有一天，你会明白，能够治愈你的，从来都不是时间，而是你心里的那股释怀和格局。只要内心不慌乱，连世界都难影响你。你可以消沉，也可以抱怨，甚至可以崩溃，但不能丧失自愈的能力，要学会及时止损。人生不一定要赢，但绝不能输给过去的错误和愚蠢。人生哪有白走的路，每一步都是成长，你要把头抬起来，一直往前走，天总会亮的。一辈子很短，要好好爱自己，你的优秀要遇到识货的人，你的真心要遇到珍惜你的人，你的善良要遇到感恩的人。谋生的路上不抛弃良知，谋爱的路不放弃尊严。你该有的样子就是：十分沉静，九分气质，八分遗憾，七分现实，三分颜值，两分糊涂，一分自知之明。无论身在何方，陷于何地，都要向下扎根，向上开花，不负生活</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>以前志气很大 ，总想走出家乡 ，现在不行了没出息了 ，总想在家待一辈子</p></div></div><div class='timeline-item-content'><p>时光流转，经历过人生的起起落落，我们或许渐渐感受到了家的温暖与安宁。在家待一辈子，也许并不是一种逃避，而是一种选择，一种对平淡生活的热爱与向往。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>没有用实际行动表达的爱意都是错觉吗</p></div></div><div class='timeline-item-content'><p>真正喜欢的东西，不会一直放在购物车里，真正喜欢的人，也不会一直不确定关系，态度就是答案</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>释怀的尽头是遗忘吗</p></div></div><div class='timeline-item-content'><p>或许它更像是一场内心的蜕变，让我们在时光的洗礼中，逐渐放下过去的包袱，拥抱未来的无限可能。遗忘并不是终点，而是我们心灵得以自由飞翔的起点。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>孤独才是生命的常态吗？</p></div></div><div class='timeline-item-content'><p>孤独从不来自陌生人，城市中互不相识的人们似乎戴着罩子，各自穿梭，漫天雨水敲击不到心灵。孤独来自生命中那些重要的人，他们的影子扎根在旧时光，笑容不知道去了何方。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>成年人的世界有爱情吗？</p></div></div><div class='timeline-item-content'><p>大海永远会映照着天上的星辰，天上的星辰永远不会孤单，幸运的海风也会一直吹拂着你的脸庞，而你！我的朋友，你的爱情也不会太迟</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>麻绳专挑细处断 ，厄运专挑苦命人</p></div></div><div class='timeline-item-content'><p>我假装生病不上课 ，父亲假装健康去上班</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>为什么人与人决定要分开的时候 ，总会说一些难听的话</p></div></div><div class='timeline-item-content'><p>欲与人绝，言中恶语，非无情，惧悔也。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>关于迷茫</p></div></div><div class='timeline-item-content'><p>当你迷茫，不确定脚下的路如何走的时候，就看一看史铁生的这一句话：   “要紧的是果敢地迈出第一步，对与错先都不管自古就没有把一切都设计好再开步的事。别想把一切都弄清楚，再去走路。鲁莽者要学会思考，善思者要克服的是犹豫。”</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>如何做到喜欢却不联系的</p></div></div><div class='timeline-item-content'><p>爱到极致不纠缠，思到极致不想见。  那时候太喜欢了，以至于那碗夹生饭，咽了又咽，也毫无怨言。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>关于对家庭的讨厌</p></div></div><div class='timeline-item-content'><p>你讨厌妈妈的市侩圆滑，却不知道她曾经跟你一样憧憬过未来，你讨厌父亲的平庸，却不知道他曾经也是个怀揣梦想的男孩</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>明明已经失去了，那为何还会时长想起</p></div></div><div class='timeline-item-content'><p>宫崎骏说过：其实我很早就知道，我们不合适，但我还是拒绝了所有人，陪你走了一段没有结果的路，虽然时间不长，但毕生难忘。我喜欢你，以为你也喜欢我，但是，湖是湖，海是海。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>支支吾吾也很浪漫 叙意不清也代表喜欢</p></div></div><div class='timeline-item-content'><p>我词不达意的表白，饱含真诚喜感，快餐式的恋爱年代。太多人麻木爱个大概，谁都不明白。玫瑰在沙漠盛开，大雨别离会停下来。让海风吹走喧嚣腐烂的爱，满怀真心而来。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>当你实现财富自由了，你最想做的事情是什么？</p></div></div><div class='timeline-item-content'><p>抹去母亲羡慕的眼神 ，扶正父亲弯下的腰杆</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>自由二字本就条条框框 ，牢笼二字反倒是四面透风</p></div></div><div class='timeline-item-content'><p>自由看似条条框框但是总有一笔出头，牢笼看着透风却被罩住了头</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>所以真爱还是无敌吗？</p></div></div><div class='timeline-item-content'><p>理想主义的花，不会开在浪漫主义的土地里，终有一天，你会放弃理想，对浪漫不再期待，就像把自己的灵魂浸入那臭不可闻的下水道淤泥里，既不死也不活</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>关于建议</p></div></div><div class='timeline-item-content'><p>其实人一辈子是需要一些建议的，寻求答案，就是当自己寻找不出答案做不出正确的选择时，需要借鉴别人的建议，供自己做出选择，他人的高度确实可能限制了你的视野，但如果当自己没有别人的高度时，是可以借鉴别人的视野来，看清自己，答案永远是自己认同，并不需要追求别人的认同，这样才不能被世人的高墙围住。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>关于离开</p></div></div><div class='timeline-item-content'><p>走进一个人的时候 ，要慢一点 ，以免看不清 。离开一个人的时候要快一点 ，以免舍不得.<br>人海茫茫 ，先有不甘 ，后有心安 ，乐知天命 ，故不忧 !</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 月影墨书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我在人间凑数的日子 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
